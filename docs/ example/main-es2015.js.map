{"version":3,"sources":["./src/app/services/connectors/inventory.connector.ts","./src/app/components/counter-button.component/counter-button.component.ts","./src/app/components/counter.component/counter.component.scss","./src/app/components/inventories-button.component/inventories-button.component.html","./src/app/app.component.css","./src/environments/environment.ts","./src/app/components/inventories-button.component/inventories-button.component.ts","./src/app/components/inventories.component/inventories.component.scss","./src/app/services/state-store/app-initial-state.ts","./src/app/services/state-store/action-ids.ts","./src/app/services/state-store/actions/show-loading-indicator.action.ts","./src/app/components/counter-button.component/counter-button.component.scss","./src/app/app.component.ts","./src/app/components/counter.component/counter.component.html","./src/app/app.component.html","./dist/ngx-state-store/__ivy_ngcc__/fesm2015/ngx-state-store.js","./src/app/app.module.ts","./src/app/components/counter-button.component/counter-button.component.html","./src/app/components/inventories.component/inventories.component.html","./src/app/services/state-store/action-factory.ts","./src/app/components/inventories-button.component/inventories-button.component.scss","./src/app/services/state-store/actions/increment-counter.action.ts","./src/app/components/counter.component/counter.component.ts","./src/app/services/state-store/actions/hide-loading-indicator.action.ts","./src/app/services/state-store/actions/load-inventories.action.ts","./src/app/components/inventories.component/inventories.component.ts","./src/app/services/state-store/actions/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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;;;ACAzzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6E;AACV;AACP;AACb;;AAE/C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,0CAA0C,EAAE;AAC5C,iCAAiC,EAAE;AACnC,+BAA+B,EAAE;AACjC,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,qCAAqC,EAAE;AACvC,qBAAqB;AACrB;AACA;AACA,mDAAmD,EAAE,kBAAkB,EAAE;AACzE;AACA;AACA,6CAA6C;AAC7C;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8HAA8H,EAAE;AAChI;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAiCV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAKV;AACD;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAOV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,EAAE;AACb,yBAAyB,4DAAc;;AAEvC;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAKV;AACD;AACA;AACA;AACA,uBAAuB;AACvB,WAAW,EAKV;AACD;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oDAAe;AAC9C;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uDAAU;AAC7B;AACA,mBAAmB,EAAE;AACrB,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,EAAE;AAC/B,0BAA0B,2DAAI;AAC9B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,yCAAyC,4DAAK,aAAa,EAAE,cAAc,2EAAoB;AAC/F;AACA,qCAAqC,4DAAK,aAAa,EAAE,cAAc,2EAAoB;AAC3F;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,sCAAsC,2DAAI;AAC1C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,wCAAwC,yBAAyB,sDAAe,gBAAgB;AAChG,cAAc,gEAAyB,EAAE,oCAAoC;AAC7E;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,yBAAyB;AAC3E;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;AAC9B,WAAW,EA0BV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAYV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,2BAA2B,8DAAuB,EAAE,4BAA4B;AAChF,2BAA2B,8DAAuB,EAAE,mDAAmD,yCAAyC,EAAE;AAClJ,YAAY,4DAAY;AACxB,YAAY;AACZ,cAAc,oDAAoD,gEAAyB,uBAAuB,uBAAuB,SAAS,4DAAY,EAAE,EAAE,EAAE,EAAE,EAAE;AACxK,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA,oBAAoB,4DAAY;AAChC;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAE+E;;AAE/E,2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9yB0D;AACjB;AAEM;AACW;AACiB;AAC6B;AACpB;AACd;AACS;AACvB;AAC4D;AACpB;AACnD;AACU;AACD;IAyBzC,SAAS,SAAT,SAAS;CACrB;AADY,SAAS;IAvBrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,oHAAsB;YACtB,gGAA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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { delay, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class InventoryConnector {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  loadInventory(): Observable<Inventory[]> {\r\n    // delay(2000) to imitate the network throttling\r\n    return this.http.get<Inventory[]>('assets/mock-data/inventories.json').pipe(\r\n      delay(2000),\r\n      mergeMap(inventories => {\r\n        inventories.splice(this.getRandomInt(inventories.length), this.getRandomInt(2));\r\n        return of(inventories);\r\n      })\r\n    );\r\n  }\r\n\r\n  getRandomInt(max): number {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory } from '../../services/state-store/action-factory';\r\nimport { Store } from 'ngx-state-store';\r\n\r\n@Component({\r\n  selector: 'app-counter-button',\r\n  templateUrl: './counter-button.component.html',\r\n  styleUrls: ['./counter-button.component.scss']\r\n})\r\nexport class CounterButtonComponent {\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.store.dispatch(this.factory.incrementCounter());\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY291bnRlci5jb21wb25lbnQvY291bnRlci5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<button (click)=\\\"loadInventory()\\\" class=\\\"btn-primary\\\">Load Inventory</button>\\r\\n<p>Last download at: {{lastDownloadAt}}</p>\\r\\n<p *ngIf=\\\"changes.addedEntries.length\\\">\\r\\n  {{changes.addedEntries.length}} new {{changes.addedEntries.length > 1 ? 'entries' : 'entry'}}:\\r\\n  {{inventoriesToString(changes.addedEntries)}}</p>\\r\\n<p *ngIf=\\\"changes.removedEntries.length\\\">\\r\\n  {{changes.removedEntries.length}} {{changes.removedEntries.length > 1 ? 'entries' : 'entry'}} removed:\\r\\n  {{inventoriesToString(changes.removedEntries)}}</p>\\r\\n\";","export default \".row {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbn1cclxuIl19 */\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { EnvironmentSettings } from './environment-settings';\r\n\r\nexport const environment: EnvironmentSettings = {\r\n  production: false,\r\n  state: {\r\n    log: true,\r\n    timekeeping: true\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory, LoadIndicator } from '../../services/state-store/action-factory';\r\nimport { catchError, mergeMap, skip } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { Inventory } from '../../models/inventory';\r\n\r\nexport interface Changes {\r\n  addedEntries: Inventory[];\r\n  removedEntries: Inventory[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inventories-button',\r\n  templateUrl: './inventories-button.component.html',\r\n  styleUrls: ['./inventories-button.component.scss']\r\n})\r\nexport class InventoriesButtonComponent implements OnInit {\r\n\r\n  lastDownloadAt: string;\r\n  changes: Changes = {addedEntries: [], removedEntries: []} as Changes;\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.store.select('Inventories',\r\n      (oldInventories: Inventory[], newInventories: Inventory[]) => {\r\n        if (oldInventories === newInventories\r\n          || oldInventories && newInventories\r\n          && !this.calcDiff(oldInventories, newInventories).length\r\n          && !this.calcDiff(newInventories, oldInventories).length) {\r\n          return true;\r\n        }\r\n        this.changes.addedEntries = this.calcDiff(oldInventories, newInventories);\r\n        this.changes.removedEntries = this.calcDiff(newInventories, oldInventories);\r\n        return false;\r\n      }).pipe(skip(1))\r\n      .subscribe(() => {\r\n        console.log('the log is present only if there are some changes');\r\n      });\r\n  }\r\n\r\n  private calcDiff(source: Inventory[], target: Inventory[]): Inventory[] {\r\n    return (target || []).filter(t => !(source || []).find(s => s.id === t.id));\r\n  }\r\n\r\n  loadInventory() {\r\n    this.changes.addedEntries = [];\r\n    this.changes.removedEntries = [];\r\n    this.store.dispatch(this.factory.showLoadIndicator(LoadIndicator.LOAD_INVENTORIES))\r\n      .pipe(\r\n        mergeMap(() => this.store.dispatch(this.factory.loadInventories())),\r\n        catchError(error => {\r\n          console.log(error);\r\n          return of(error);\r\n        })\r\n      ).subscribe((state: AppState) => {\r\n        this.lastDownloadAt = state.LastDownloadAt;\r\n        this.store.dispatch(this.factory.hideLoadIndicator(LoadIndicator.LOAD_INVENTORIES));\r\n      }\r\n    );\r\n  }\r\n\r\n  inventoriesToString(inventories: Inventory[]): string {\r\n    return inventories.map(e => e.id).toString();\r\n  }\r\n}\r\n","export default \".inventories {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  min-height: 300px;\\n  max-height: 300px;\\n  overflow: hidden;\\n}\\n\\n.load-indicator-background {\\n  background-color: #cccccc;\\n  opacity: .7;\\n}\\n\\n.load-indicator, .load-indicator-background, .inventories-table-container {\\n  height: 100%;\\n  width: 100%;\\n  z-index: +1;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\\n.inventories-table-container {\\n  z-index: initial;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n}\\n\\n.load-indicator {\\n  margin: auto;\\n  background-color: white;\\n  width: 7rem;\\n  height: 3rem;\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n}\\n\\n.load-indicator > div {\\n  margin: 0;\\n  padding: 0;\\n  vertical-align: middle;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnZlbnRvcmllcy5jb21wb25lbnQvaW52ZW50b3JpZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0VBQ1osV0FBVztFQUNYLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxRQUFRO0VBQ1IsU0FBUztBQUNYOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osdUJBQXVCO0VBQ3ZCLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYTtFQUNiLDZCQUE2QjtFQUM3QixtQkFBbUI7QUFDckI7O0FBUkE7RUFVSSxTQUFTO0VBQ1QsVUFBVTtFQUNWLHNCQUFzQjtBQUUxQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW52ZW50b3JpZXMuY29tcG9uZW50L2ludmVudG9yaWVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmludmVudG9yaWVzIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG1pbi1oZWlnaHQ6IDMwMHB4O1xyXG4gIG1heC1oZWlnaHQ6IDMwMHB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5sb2FkLWluZGljYXRvci1iYWNrZ3JvdW5kIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjY2NjO1xyXG4gIG9wYWNpdHk6IC43O1xyXG59XHJcblxyXG4ubG9hZC1pbmRpY2F0b3IsIC5sb2FkLWluZGljYXRvci1iYWNrZ3JvdW5kLCAuaW52ZW50b3JpZXMtdGFibGUtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgei1pbmRleDogKzE7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGJvdHRvbTogMDtcclxufVxyXG5cclxuLmludmVudG9yaWVzLXRhYmxlLWNvbnRhaW5lciB7XHJcbiAgei1pbmRleDogaW5pdGlhbDtcclxuICBvdmVyZmxvdy14OiBoaWRkZW47XHJcbiAgb3ZlcmZsb3cteTogYXV0bztcclxufVxyXG5cclxuLmxvYWQtaW5kaWNhdG9yIHtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgd2lkdGg6IDdyZW07XHJcbiAgaGVpZ2h0OiAzcmVtO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuXHJcbiAgPiBkaXYge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgfVxyXG59XHJcblxyXG4iXX0= */\";","import { AppState } from './app-state';\r\n\r\nexport const AppInitialState: AppState = {\r\n  ShowLoadingIndicator: [],\r\n  Counter: 0,\r\n  Inventories: null,\r\n  LastDownloadAt: ''\r\n};\r\n","export enum ActionIds {\r\n\r\n  HideLoadingIndicator = '[Load] Hide Loading Indicator',\r\n  ShowLoadingIndicator = '[Load] Show Loading Indicator',\r\n\r\n  UpdateCounter = '[Common] Update counter',\r\n  LoadInventories = '[Load] Load inventories from back-end'\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\n/**\r\n * Shows loading indicator to blocks the page, so the user can not\r\n * use the ui.\r\n */\r\nexport class ShowLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.ShowLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    const newState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.push(this.identifier);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY291bnRlci1idXR0b24uY29tcG9uZW50L2NvdW50ZXItYnV0dG9uLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","export default \"<div class=\\\"alert alert-primary\\\" role=\\\"alert\\\">\\r\\n  current counter {{counter$ | async}}\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <h3>Usage example of the ngx-state-store module</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/counter-button.component/counter-button.component.ts</li>\\r\\n        <li>src/app/components/counter.component/counter.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter-button></app-counter-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter></app-counter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/inventories-button.component/inventories-button.component.ts</li>\\r\\n        <li>src/app/components/inventories.component/inventories.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories-button></app-inventories-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories></app-inventories>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { InjectionToken, Injectable, Inject, NgModule } from '@angular/core';\nimport { take, pluck, distinctUntilChanged } from 'rxjs/operators';\nimport { BehaviorSubject, throwError, Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/state-helper.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nclass StateHelper {\r\n    /**\r\n     * Makes a shadow freeze\r\n     *\r\n     * @template T\r\n     * @param {?} o object to freeze\r\n     * @return {?}\r\n     */\r\n    static deepFreeze(o) {\r\n        Object.freeze(o);\r\n        /** @type {?} */\r\n        const oIsFunction = typeof o === 'function';\r\n        /** @type {?} */\r\n        const hasOwnProp = Object.prototype.hasOwnProperty;\r\n        Object.getOwnPropertyNames(o).forEach((/**\r\n         * @param {?} prop\r\n         * @return {?}\r\n         */\r\n        (prop) => {\r\n            if (hasOwnProp.call(o, prop) &&\r\n                (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)\r\n                && o[prop] !== null\r\n                && (typeof o[prop] === 'object' || typeof o[prop] === 'function')\r\n                && !Object.isFrozen(o[prop])) {\r\n                StateHelper.deepFreeze(o[prop]);\r\n            }\r\n        }));\r\n        return o;\r\n    }\r\n    /**\r\n     * The method returns the clone of the object. Useful to clone frozen object.\r\n     *\r\n     * @template T\r\n     * @param {?} o object to clone\r\n     * @param {?=} cloneFunctions determines whether the functions must be also cloned, default value 'true'\r\n     * @return {?}\r\n     */\r\n    static cloneObject(o, cloneFunctions = true) {\r\n        return StateHelper.cloneObjectIntern(o, undefined, cloneFunctions);\r\n    }\r\n    /**\r\n     * The method returns the clone of the object. Useful to clone frozen object.\r\n     *\r\n     * @private\r\n     * @template T\r\n     * @param {?} o object to clone\r\n     * @param {?=} parent owner object of the object to clone, it is used for the functions cloning\r\n     * @param {?=} cloneFunctions determines whether the functions must be also cloned, default value 'true'\r\n     * @return {?}\r\n     */\r\n    static cloneObjectIntern(o, parent, cloneFunctions) {\r\n        /** @type {?} */\r\n        let target;\r\n        if (o) {\r\n            if (typeof o === 'object') {\r\n                if (Array.isArray(o)) {\r\n                    target = ((/** @type {?} */ (o))).slice();\r\n                    ((/** @type {?} */ (o))).forEach((/**\r\n                     * @param {?} element\r\n                     * @param {?} index\r\n                     * @return {?}\r\n                     */\r\n                    (element, index) => {\r\n                        ((/** @type {?} */ (target)))[index] = StateHelper.cloneObjectIntern(element, o, cloneFunctions);\r\n                    }));\r\n                }\r\n                else if (StateHelper.isValidDate(o)) {\r\n                    target = new Date(((/** @type {?} */ (((/** @type {?} */ (o)))))).toISOString());\r\n                }\r\n                else {\r\n                    target = Object.assign({}, o);\r\n                    Object.getOwnPropertyNames(o).forEach((/**\r\n                     * @param {?} prop\r\n                     * @return {?}\r\n                     */\r\n                    (prop) => {\r\n                        /** @type {?} */\r\n                        const functionType = (typeof o[prop] === 'function');\r\n                        if (cloneFunctions && functionType || !functionType) {\r\n                            target[prop] = StateHelper.cloneObjectIntern(target[prop], target, cloneFunctions);\r\n                        }\r\n                        else {\r\n                            delete target[prop];\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n            else if (typeof o === 'function') {\r\n                if (cloneFunctions) {\r\n                    target = o.bind(parent || {});\r\n                    Object.getOwnPropertyNames(o).forEach((/**\r\n                     * @param {?} prop\r\n                     * @return {?}\r\n                     */\r\n                    (prop) => {\r\n                        if (prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' && prop !== 'length' && prop !== 'name') {\r\n                            target[prop] = StateHelper.cloneObjectIntern(target[prop], target, cloneFunctions);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n            else {\r\n                target = o;\r\n            }\r\n        }\r\n        else {\r\n            target = o;\r\n        }\r\n        return target;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    static getEmptyObject() {\r\n        return Object.create(null);\r\n    }\r\n    /**\r\n     * @template S\r\n     * @param {?} state\r\n     * @param {?} newValue\r\n     * @return {?}\r\n     */\r\n    static combine(state, newValue) {\r\n        return Object.assign(StateHelper.getEmptyObject(), state, newValue);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    static isValidDate(date) {\r\n        return date && date instanceof Date && Object.prototype.toString.call(date) === '[object Date]' && !isNaN((/** @type {?} */ (date)));\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/store-plugin.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n */\r\nclass StorePlugin {\r\n    /**\r\n     * @protected\r\n     * @param {?} storageName\r\n     */\r\n    constructor(storageName) {\r\n        this.storageName = storageName;\r\n        this.namespace = 'ngx-state-store';\r\n        this.prepareWindowObject(storageName);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get state() {\r\n        return window[this.namespace][this.storageName].state;\r\n    }\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {?} storeName e.g. 'store-demo'\r\n     * @return {?}\r\n     */\r\n    prepareWindowObject(storeName) {\r\n        if (!window[this.namespace]) {\r\n            window[this.namespace] = StateHelper.getEmptyObject();\r\n        }\r\n        if (!window[this.namespace][storeName]) {\r\n            window[this.namespace][storeName] = StateHelper.getEmptyObject();\r\n        }\r\n        if (!window[this.namespace][storeName].state) {\r\n            window[this.namespace][storeName].state = StateHelper.getEmptyObject();\r\n        }\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StorePlugin.prototype.namespace;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StorePlugin.prototype.storageName;\r\n    /**\r\n     * @abstract\r\n     * @param {?} actionId\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    StorePlugin.prototype.dispatchBefore = function (actionId, state, order) { };\r\n    /**\r\n     * @abstract\r\n     * @param {?} actionId\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    StorePlugin.prototype.dispatchAfter = function (actionId, state, order) { };\r\n    /**\r\n     * @abstract\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    StorePlugin.prototype.newState = function (state) { };\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/store-log-plugin.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction ActionToState() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ActionToState.prototype.actionId;\r\n    /** @type {?} */\r\n    ActionToState.prototype.state;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction LogSettings() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    LogSettings.prototype.executedStack;\r\n    /** @type {?} */\r\n    LogSettings.prototype.limit;\r\n    /** @type {?} */\r\n    LogSettings.prototype.log;\r\n}\r\nclass StoreLogPlugin extends StorePlugin {\r\n    /**\r\n     * @param {?} storeName\r\n     * @param {?=} log\r\n     * @param {?=} limit\r\n     */\r\n    constructor(storeName, log = false, limit = 0) {\r\n        super(storeName);\r\n        this.actionEnd = 'Action end:   ';\r\n        this.stateLog = StateHelper.getEmptyObject();\r\n        this.stateLog.executedStack = [];\r\n        this.stateLog.limit = limit;\r\n        this.stateLog.log = log;\r\n        this.state.log = this.stateLog;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    get loggingDisabled() {\r\n        return !this.state.log.log;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} message\r\n     * @param {?=} state\r\n     * @return {?}\r\n     */\r\n    static logAction(message, state) {\r\n        console.log(message, state);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} arr\r\n     * @param {?} limit\r\n     * @return {?}\r\n     */\r\n    static restrict(arr, limit) {\r\n        if (arr.length > limit) {\r\n            arr.splice(0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    dispatchBefore() {\r\n    }\r\n    /**\r\n     * @param {?} actionId\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    dispatchAfter(actionId, state, order) {\r\n        if (this.loggingDisabled) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const log = {\r\n            actionId,\r\n            state\r\n        };\r\n        this.stateLog.executedStack.push(log);\r\n        StoreLogPlugin.restrict(this.stateLog.executedStack, this.stateLog.limit);\r\n        /** @type {?} */\r\n        const message = this.actionEnd + actionId;\r\n        StoreLogPlugin.logAction(order + '. ' + message, state);\r\n        StoreLogPlugin.logAction('', '');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    newState() {\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StoreLogPlugin.prototype.actionEnd;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StoreLogPlugin.prototype.stateLog;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/state-config.token.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst STATE_CONFIG = new InjectionToken('STATE_CONFIG');\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/store-performance-plugin.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Measure time of action execution.\r\n * @record\r\n */\r\nfunction PerformanceSettings() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    PerformanceSettings.prototype.timekeeping;\r\n    /** @type {?} */\r\n    PerformanceSettings.prototype.performanceLog;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ActionTime() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ActionTime.prototype.id;\r\n    /** @type {?} */\r\n    ActionTime.prototype.time;\r\n}\r\nclass StorePerformancePlugin extends StorePlugin {\r\n    /**\r\n     * @param {?} storeName\r\n     * @param {?=} log\r\n     */\r\n    constructor(storeName, log = false) {\r\n        super(storeName);\r\n        this.performanceLog = [];\r\n        this.settings = {\r\n            timekeeping: log,\r\n            performanceLog: this.performanceLog\r\n        };\r\n        this.state.performance = this.settings;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    get timekeeping() {\r\n        return this.state.performance.timekeeping;\r\n    }\r\n    /**\r\n     * @param {?} actionId\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    dispatchBefore(actionId, state, order) {\r\n        if (!this.timekeeping) {\r\n            return;\r\n        }\r\n        this.performanceLog[order] = {\r\n            id: actionId,\r\n            time: performance.now()\r\n        };\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    newState() {\r\n    }\r\n    /**\r\n     * @param {?} actionId\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    dispatchAfter(actionId, state, order) {\r\n        if (!this.timekeeping) {\r\n            return;\r\n        }\r\n        this.performanceLog[order].time = performance.now() - this.performanceLog[order].time;\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StorePerformancePlugin.prototype.settings;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StorePerformancePlugin.prototype.performanceLog;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/store.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template S\r\n */\r\nclass Store {\r\n    /**\r\n     * @param {?} config\r\n     */\r\n    constructor(config) {\r\n        this.config = config;\r\n        this.actionCounter = 0;\r\n        this.plugins = [];\r\n        this.plugins.push(new StoreLogPlugin(this.config.storeName, this.config.log));\r\n        this.plugins.push(new StorePerformancePlugin(this.config.storeName, this.config.timekeeping));\r\n        this.currentState = config.initialState || {};\r\n        this.stateStream = new BehaviorSubject(this.currentState);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} action\r\n     * @param {?} error\r\n     * @return {?}\r\n     */\r\n    static getErrorState(action, error) {\r\n        /** @type {?} */\r\n        const state = StateHelper.getEmptyObject();\r\n        state.error = error;\r\n        state.action = action.Type;\r\n        return state;\r\n    }\r\n    /**\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    dispatch(action) {\r\n        /** @type {?} */\r\n        const currentCounter = ++this.actionCounter;\r\n        this.dispatchBefore(action, this.currentState, currentCounter);\r\n        /** @type {?} */\r\n        let actionResult$;\r\n        try {\r\n            actionResult$ = action.handleState(this.getStateContext());\r\n        }\r\n        catch (error) {\r\n            this.dispatchAfter(action, this.currentState, currentCounter);\r\n            console.error(error);\r\n            return throwError(error);\r\n        }\r\n        /** @type {?} */\r\n        const result = new Subject();\r\n        // Otherwise it will run sync.\r\n        // And the result observable is\r\n        // complete before return statement.\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            if (actionResult$ == null) {\r\n                this.dispatchAfter(action, this.currentState, currentCounter);\r\n                result.next(this.currentState);\r\n                result.complete();\r\n            }\r\n            else {\r\n                ((/** @type {?} */ (actionResult$)))\r\n                    .pipe(take(1)).subscribe((/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    this.dispatchAfter(action, this.currentState, currentCounter);\r\n                    result.next(this.currentState);\r\n                    result.complete();\r\n                }), (/**\r\n                 * @param {?} error\r\n                 * @return {?}\r\n                 */\r\n                (error) => {\r\n                    /** @type {?} */\r\n                    const errorState = Store.getErrorState(action, error);\r\n                    this.dispatchAfter(action, errorState, currentCounter);\r\n                    console.error(error);\r\n                    result.error(error);\r\n                }));\r\n            }\r\n        }));\r\n        return result.asObservable();\r\n    }\r\n    /**\r\n     * @template keyString\r\n     * @param {?} prop\r\n     * @param {?=} objectComparator\r\n     * @return {?}\r\n     */\r\n    select(prop, objectComparator) {\r\n        if (objectComparator) {\r\n            return this.stateStream.pipe(pluck((/** @type {?} */ (prop))), distinctUntilChanged(objectComparator));\r\n        }\r\n        return this.stateStream.pipe(pluck((/** @type {?} */ (prop))), distinctUntilChanged());\r\n    }\r\n    /**\r\n     * The Observable is complete after forward one value.\r\n     *\r\n     * @template keyString\r\n     * @param {?} prop property to select\r\n     * @return {?}\r\n     */\r\n    selectOnce(prop) {\r\n        return this.select(prop).pipe(take(1));\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    getStateContext() {\r\n        return {\r\n            getState: (/**\r\n             * @return {?}\r\n             */\r\n            () => this.currentState),\r\n            setState: (/**\r\n             * @param {?} state\r\n             * @return {?}\r\n             */\r\n            (state) => {\r\n                this.updateState(state);\r\n            }),\r\n            patchState: (/**\r\n             * @param {?} partOfState\r\n             * @return {?}\r\n             */\r\n            (partOfState) => {\r\n                /** @type {?} */\r\n                const isArray = Array.isArray(partOfState);\r\n                /** @type {?} */\r\n                const isPrimitive = typeof partOfState !== 'object';\r\n                if (isArray) {\r\n                    throw new Error('Patching arrays is not supported.');\r\n                }\r\n                else if (isPrimitive) {\r\n                    throw new Error('Patching primitives is not supported.');\r\n                }\r\n                /** @type {?} */\r\n                const newState = StateHelper.combine(this.currentState, partOfState);\r\n                this.updateState(newState);\r\n            })\r\n        };\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    updateState(state) {\r\n        this.currentState = StateHelper.deepFreeze(state);\r\n        this.dispatchState(this.currentState);\r\n        // next-sync. Otherwise the state change will trigger all other changes.\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.stateStream.next(this.currentState);\r\n        }), 0);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} action\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    dispatchBefore(action, state, order) {\r\n        this.plugins.forEach((/**\r\n         * @param {?} plugin\r\n         * @return {?}\r\n         */\r\n        (plugin) => {\r\n            plugin.dispatchBefore(action.Type, state, order);\r\n        }));\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} action\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    dispatchAfter(action, state, order) {\r\n        this.plugins.forEach((/**\r\n         * @param {?} plugin\r\n         * @return {?}\r\n         */\r\n        (plugin) => {\r\n            plugin.dispatchAfter(action.Type, state, order);\r\n        }));\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    dispatchState(state) {\r\n        this.plugins.forEach((/**\r\n         * @param {?} plugin\r\n         * @return {?}\r\n         */\r\n        (plugin) => {\r\n            plugin.newState(state);\r\n        }));\r\n    }\r\n}\nStore.ɵfac = function Store_Factory(t) { return new (t || Store)(ɵngcc0.ɵɵinject(STATE_CONFIG)); };\nStore.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Store, factory: Store.ɵfac });\r\n/** @nocollapse */\r\nStore.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [STATE_CONFIG,] }] }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Store, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [STATE_CONFIG]\n            }] }]; }, null); })();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Store.prototype.actionCounter;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Store.prototype.plugins;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Store.prototype.currentState;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Store.prototype.stateStream;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Store.prototype.config;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/action.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n */\r\nclass Action {\r\n    /**\r\n     * @protected\r\n     * @param {?} actionId\r\n     */\r\n    constructor(actionId) {\r\n        this.actionId = actionId;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get Type() {\r\n        return this.actionId;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @template T\r\n     * @param {?} o\r\n     * @param {?=} cloneFunctions\r\n     * @return {?}\r\n     */\r\n    clone(o, cloneFunctions = true) {\r\n        return StateHelper.cloneObject(o, cloneFunctions);\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    getEmptyState() {\r\n        return StateHelper.getEmptyObject();\r\n    }\r\n    /**\r\n     * @protected\r\n     * @template T\r\n     * @return {?}\r\n     */\r\n    getEmptyObject() {\r\n        return StateHelper.getEmptyObject();\r\n    }\r\n    /**\r\n     * @protected\r\n     * @template S\r\n     * @param {?} state\r\n     * @param {?} newValue\r\n     * @return {?}\r\n     */\r\n    combine(state, newValue) {\r\n        return StateHelper.combine(state, newValue);\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Action.prototype.actionId;\r\n    /**\r\n     * @abstract\r\n     * @param {?} stateContext\r\n     * @return {?}\r\n     */\r\n    Action.prototype.handleState = function (stateContext) { };\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ngx-state-store.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxStateStoreModule {\r\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxStateStoreModule,\r\n            providers: [\r\n                Store,\r\n                { provide: STATE_CONFIG, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\nNgxStateStoreModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxStateStoreModule });\nNgxStateStoreModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxStateStoreModule_Factory(t) { return new (t || NgxStateStoreModule)(); }, imports: [[\n            CommonModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxStateStoreModule, { imports: function () { return [CommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxStateStoreModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [],\n                imports: [\n                    CommonModule\n                ],\n                exports: []\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public-api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngx-state-store.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { Action, NgxStateStoreModule, StateHelper, Store, STATE_CONFIG as ɵa };\n\n//# sourceMappingURL=ngx-state-store.js.map","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment';\r\nimport { AppInitialState } from './services/state-store/app-initial-state';\r\nimport { CounterButtonComponent } from './components/counter-button.component/counter-button.component';\r\nimport { CounterComponent } from './components/counter.component/counter.component';\r\nimport { ActionFactory } from './services/state-store/action-factory';\r\nimport { InventoryConnector } from './services/connectors/inventory.connector';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InventoriesButtonComponent } from './components/inventories-button.component/inventories-button.component';\r\nimport { InventoriesComponent } from './components/inventories.component/inventories.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxStateStoreModule } from 'ngx-state-store';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CounterButtonComponent,\r\n    CounterComponent,\r\n    InventoriesButtonComponent,\r\n    InventoriesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    NgxStateStoreModule.forRoot({\r\n      storeName: 'store-demo',\r\n      log: environment.state.log,\r\n      timekeeping: environment.state.timekeeping,\r\n      initialState: AppInitialState\r\n    }),\r\n  ],\r\n  providers: [ActionFactory, InventoryConnector],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export default \"<button class=\\\"btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment Counter</button>\\r\\n\";","export default \"<div class=\\\"inventories\\\">\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator-background\\\"></div>\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator\\\">\\r\\n    <div>Loading ...</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"inventories-table-container\\\">\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">#</th>\\r\\n        <th scope=\\\"col\\\">ID</th>\\r\\n        <th scope=\\\"col\\\">Version</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let inventory of inventories; let i=index\\\">\\r\\n        <th scope=\\\"row\\\">{{i}}</th>\\r\\n        <td>{{inventory.id}}</td>\\r\\n        <td>{{inventory.version}}</td>\\r\\n        <td>{{inventory.name}}</td>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HideLoadingIndicatorAction, IncrementCounterAction, LoadInventoriesAction, ShowLoadingIndicatorAction } from './actions';\r\nimport { Action } from 'ngx-state-store';\r\nimport { InventoryConnector } from '../connectors/inventory.connector';\r\n\r\nexport enum LoadIndicator {\r\n  DEFAULT = 'DEFAULT',\r\n  LOAD_INVENTORIES = 'LOAD_INVENTORIES'\r\n}\r\n\r\n@Injectable()\r\nexport class ActionFactory {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n  }\r\n\r\n  incrementCounter(): Action {\r\n    return new IncrementCounterAction();\r\n  }\r\n\r\n  showLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new ShowLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  hideLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new HideLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  loadInventories(): Action {\r\n    return new LoadInventoriesAction(this.inventoryConnector);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW52ZW50b3JpZXMtYnV0dG9uLmNvbXBvbmVudC9pbnZlbnRvcmllcy1idXR0b24uY29tcG9uZW50LnNjc3MifQ== */\";","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\nexport class IncrementCounterAction extends Action {\r\n\r\n  constructor() {\r\n    super(ActionIds.UpdateCounter);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n    const newValue = this.getEmptyState();\r\n    newValue.Counter = stateContext.getState().Counter + 1;\r\n    stateContext.patchState(newValue);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-counter',\r\n  templateUrl: './counter.component.html',\r\n  styleUrls: ['./counter.component.scss']\r\n})\r\nexport class CounterComponent implements OnInit {\r\n\r\n  counter$: Observable<number>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.counter$ = this.store.select('Counter');\r\n  }\r\n}\r\n","import { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { Action, StateContext } from 'ngx-state-store';\r\n\r\n/**\r\n * Hide loading indicator which block the page.\r\n */\r\nexport class HideLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.HideLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    if (stateContext.getState().ShowLoadingIndicator == null) {\r\n      return;\r\n    }\r\n\r\n    const index = stateContext.getState().ShowLoadingIndicator.indexOf(this.identifier);\r\n\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n\r\n    const newState: AppState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.splice(index, 1);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { InventoryConnector } from '../../connectors/inventory.connector';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport class LoadInventoriesAction extends Action {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n    super(ActionIds.LoadInventories);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): Observable<any> {\r\n    return this.inventoryConnector.loadInventory()\r\n      .pipe(\r\n        tap(inventories => {\r\n          const newState: AppState = this.getEmptyState();\r\n          newState.Inventories = inventories;\r\n          newState.LastDownloadAt = (new Date()).toISOString();\r\n          stateContext.patchState(newState);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { Observable, of } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { LoadIndicator } from '../../services/state-store/action-factory';\r\n\r\n@Component({\r\n  selector: 'app-inventories',\r\n  templateUrl: './inventories.component.html',\r\n  styleUrls: ['./inventories.component.scss']\r\n})\r\nexport class InventoriesComponent implements OnInit {\r\n\r\n  inventories: Inventory[];\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = this.store.select('ShowLoadingIndicator').pipe(\r\n      mergeMap(indicators => of(indicators.filter(i => i === LoadIndicator.LOAD_INVENTORIES).length > 0))\r\n    );\r\n    this.store.select('Inventories').subscribe(inventories => {\r\n      this.inventories = inventories;\r\n    });\r\n  }\r\n}\r\n","export * from './hide-loading-indicator.action';\r\nexport * from './increment-counter.action';\r\nexport * from './load-inventories.action';\r\nexport * from './show-loading-indicator.action';\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}