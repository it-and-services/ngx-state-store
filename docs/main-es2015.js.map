{"version":3,"sources":["./src/app/services/connectors/inventory.connector.ts","./src/app/components/counter-button.component/counter-button.component.ts","./src/app/components/counter.component/counter.component.scss","./src/app/components/inventories-button.component/inventories-button.component.html","./src/app/app.component.css","./src/environments/environment.ts","./src/app/components/inventories-button.component/inventories-button.component.ts","./src/app/components/inventories.component/inventories.component.scss","./src/app/services/state-store/app-initial-state.ts","./src/app/services/state-store/action-ids.ts","./src/app/services/state-store/actions/show-loading-indicator.action.ts","./src/app/components/counter-button.component/counter-button.component.scss","./src/app/app.component.ts","./src/app/components/counter.component/counter.component.html","./src/app/app.component.html","./dist/projects/ngx-state-store/src/lib/state/state-helper.ts","./dist/projects/ngx-state-store/src/lib/state/store-plugin.ts","./dist/projects/ngx-state-store/src/lib/state/store-log-plugin.ts","./dist/projects/ngx-state-store/src/lib/state/state-config.token.ts","./dist/projects/ngx-state-store/src/lib/state/store-performance-plugin.ts","./dist/projects/ngx-state-store/src/lib/state/store.service.ts","./dist/projects/ngx-state-store/src/lib/state/action.ts","./dist/projects/ngx-state-store/src/lib/ngx-state-store.module.ts","./dist/projects/ngx-state-store/src/public-api.ts","./dist/projects/ngx-state-store/src/ngx-state-store.ts","./src/app/app.module.ts","./src/app/components/counter-button.component/counter-button.component.html","./src/app/components/inventories.component/inventories.component.html","./src/app/services/state-store/action-factory.ts","./src/app/components/inventories-button.component/inventories-button.component.scss","./src/app/services/state-store/actions/increment-counter.action.ts","./src/app/components/counter.component/counter.component.ts","./src/app/services/state-store/actions/hide-loading-indicator.action.ts","./src/app/services/state-store/actions/load-inventories.action.ts","./src/app/components/inventories.component/inventories.component.ts","./src/app/services/state-store/actions/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { delay, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class InventoryConnector {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  loadInventory(): Observable<Inventory[]> {\r\n    // delay(2000) to imitate the network throttling\r\n    return this.http.get<Inventory[]>('assets/mock-data/inventories.json').pipe(\r\n      delay(2000),\r\n      mergeMap(inventories => {\r\n        inventories.splice(this.getRandomInt(inventories.length), this.getRandomInt(2));\r\n        return of(inventories);\r\n      })\r\n    );\r\n  }\r\n\r\n  getRandomInt(max): number {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory } from '../../services/state-store/action-factory';\r\nimport { Store } from 'ngx-state-store';\r\n\r\n@Component({\r\n  selector: 'app-counter-button',\r\n  templateUrl: './counter-button.component.html',\r\n  styleUrls: ['./counter-button.component.scss']\r\n})\r\nexport class CounterButtonComponent {\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  incrementCounter(): void {\r\n    this.store.dispatch(this.factory.incrementCounter());\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3VudGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<button (click)=\\\"loadInventory()\\\" class=\\\"btn-primary\\\">Load Inventory</button>\\r\\n<p>Last download at: {{lastDownloadAt}}</p>\\r\\n<p *ngIf=\\\"changes.addedEntries.length\\\">\\r\\n  {{changes.addedEntries.length}} new {{changes.addedEntries.length > 1 ? 'entries' : 'entry'}}:\\r\\n  {{inventoriesToString(changes.addedEntries)}}</p>\\r\\n<p *ngIf=\\\"changes.removedEntries.length\\\">\\r\\n  {{changes.removedEntries.length}} {{changes.removedEntries.length > 1 ? 'entries' : 'entry'}} removed:\\r\\n  {{inventoriesToString(changes.removedEntries)}}</p>\\r\\n\";","export default \".row {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdyB7XHJcbiAgbWFyZ2luLXRvcDogMXJlbTtcclxufVxyXG4iXX0= */\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { EnvironmentSettings } from './environment-settings';\r\n\r\nexport const environment: EnvironmentSettings = {\r\n  production: false,\r\n  state: {\r\n    log: true,\r\n    timekeeping: true\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory, LoadIndicator } from '../../services/state-store/action-factory';\r\nimport { catchError, mergeMap, skip } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { Inventory } from '../../models/inventory';\r\n\r\nexport interface Changes {\r\n  addedEntries: Inventory[];\r\n  removedEntries: Inventory[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inventories-button',\r\n  templateUrl: './inventories-button.component.html',\r\n  styleUrls: ['./inventories-button.component.scss']\r\n})\r\nexport class InventoriesButtonComponent implements OnInit {\r\n\r\n  lastDownloadAt: string;\r\n  changes: Changes = {addedEntries: [], removedEntries: []} as Changes;\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.store.select('Inventories',\r\n      (oldInventories: Inventory[], newInventories: Inventory[]) => {\r\n        if (oldInventories === newInventories\r\n          || oldInventories && newInventories\r\n          && !this.calcDiff(oldInventories, newInventories).length\r\n          && !this.calcDiff(newInventories, oldInventories).length) {\r\n          return true;\r\n        }\r\n        this.changes.addedEntries = this.calcDiff(oldInventories, newInventories);\r\n        this.changes.removedEntries = this.calcDiff(newInventories, oldInventories);\r\n        return false;\r\n      }).pipe(skip(1))\r\n      .subscribe(() => {\r\n        console.log('the log is present only if there are some changes');\r\n      });\r\n  }\r\n\r\n  private calcDiff(source: Inventory[], target: Inventory[]): Inventory[] {\r\n    return (target || []).filter(t => !(source || []).find(s => s.id === t.id));\r\n  }\r\n\r\n  loadInventory(): void {\r\n    this.changes.addedEntries = [];\r\n    this.changes.removedEntries = [];\r\n    this.store.dispatch(this.factory.showLoadIndicator(LoadIndicator.LOAD_INVENTORIES))\r\n      .pipe(\r\n        mergeMap(() => this.store.dispatch(this.factory.loadInventories())),\r\n        catchError(error => {\r\n          console.log(error);\r\n          return of(error);\r\n        })\r\n      ).subscribe((state: AppState) => {\r\n        this.lastDownloadAt = state.LastDownloadAt;\r\n        this.store.dispatch(this.factory.hideLoadIndicator(LoadIndicator.LOAD_INVENTORIES));\r\n      }\r\n    );\r\n  }\r\n\r\n  inventoriesToString(inventories: Inventory[]): string {\r\n    return inventories.map(e => e.id).join(', ');\r\n  }\r\n}\r\n","export default \".inventories {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  min-height: 300px;\\n  max-height: 300px;\\n  overflow: hidden;\\n}\\n\\n.load-indicator-background {\\n  background-color: #cccccc;\\n  opacity: 0.7;\\n}\\n\\n.load-indicator, .load-indicator-background, .inventories-table-container {\\n  height: 100%;\\n  width: 100%;\\n  z-index: 1;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\\n.inventories-table-container {\\n  z-index: initial;\\n  overflow-x: auto;\\n  overflow-y: auto;\\n}\\n\\n.load-indicator {\\n  margin: auto;\\n  background-color: white;\\n  width: 7rem;\\n  height: 3rem;\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n}\\n\\n.load-indicator > div {\\n  margin: 0;\\n  padding: 0;\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxpbnZlbnRvcmllcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0Esa0JBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSx1QkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLDZCQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFDRTtFQUNFLFNBQUE7RUFDQSxVQUFBO0VBQ0Esc0JBQUE7QUFDSiIsImZpbGUiOiJpbnZlbnRvcmllcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbnZlbnRvcmllcyB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBtaW4taGVpZ2h0OiAzMDBweDtcclxuICBtYXgtaGVpZ2h0OiAzMDBweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4ubG9hZC1pbmRpY2F0b3ItYmFja2dyb3VuZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjY2NjYztcclxuICBvcGFjaXR5OiAuNztcclxufVxyXG5cclxuLmxvYWQtaW5kaWNhdG9yLCAubG9hZC1pbmRpY2F0b3ItYmFja2dyb3VuZCwgLmludmVudG9yaWVzLXRhYmxlLWNvbnRhaW5lciB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHotaW5kZXg6ICsxO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBib3R0b206IDA7XHJcbn1cclxuXHJcbi5pbnZlbnRvcmllcy10YWJsZS1jb250YWluZXIge1xyXG4gIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgb3ZlcmZsb3cteDogYXV0bztcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG59XHJcblxyXG4ubG9hZC1pbmRpY2F0b3Ige1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICB3aWR0aDogN3JlbTtcclxuICBoZWlnaHQ6IDNyZW07XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICA+IGRpdiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ== */\";","import { AppState } from './app-state';\r\n\r\nexport const AppInitialState: AppState = {\r\n  ShowLoadingIndicator: [],\r\n  Counter: 0,\r\n  Inventories: null,\r\n  LastDownloadAt: ''\r\n};\r\n","export enum ActionIds {\r\n\r\n  HideLoadingIndicator = '[Load] Hide Loading Indicator',\r\n  ShowLoadingIndicator = '[Load] Show Loading Indicator',\r\n\r\n  UpdateCounter = '[Common] Update counter',\r\n  LoadInventories = '[Load] Load inventories from back-end'\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\n/**\r\n * Shows loading indicator to blocks the page, so the user can not\r\n * use the ui.\r\n */\r\nexport class ShowLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.ShowLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    const newState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.push(this.identifier);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3VudGVyLWJ1dHRvbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","export default \"<div class=\\\"alert alert-primary\\\" role=\\\"alert\\\">\\r\\n  current counter {{counter$ | async}}\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <h3>Usage example of the ngx-state-store module</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/counter-button.component/counter-button.component.ts</li>\\r\\n        <li>src/app/components/counter.component/counter.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter-button></app-counter-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter></app-counter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/inventories-button.component/inventories-button.component.ts</li>\\r\\n        <li>src/app/components/inventories.component/inventories.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories-button></app-inventories-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories></app-inventories>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","// @dynamic\r\nexport class StateHelper {\r\n\r\n  private static immutableMapFunction = StateHelper.immutableFunction('Map');\r\n  private static immutableSetFunction = StateHelper.immutableFunction('Set');\r\n  private static immutableDateFunction = StateHelper.immutableFunction('Date');\r\n\r\n  private static immutableFunction(objectName: string) {\r\n    return (...a: any) => {\r\n      throw Error(objectName + ' is immutable');\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Makes a shadow freeze\r\n   *\r\n   * @param o object to freeze\r\n   */\r\n  public static deepFreeze<T>(o: T): T {\r\n\r\n    // @ts-ignore\r\n    if (o === window) {\r\n      return o;\r\n    }\r\n\r\n    if (o instanceof Map) {\r\n      StateHelper.freezeMap(o);\r\n    } else if (o instanceof Set) {\r\n      StateHelper.freezeSet(o);\r\n    } else if (o instanceof Date && StateHelper.isValidDate(o)) {\r\n      StateHelper.freezeDate(o);\r\n    }\r\n\r\n    StateHelper.freezeObject(o);\r\n    return o;\r\n  }\r\n\r\n  private static freezeMap(o: Map<any, any>): void {\r\n    o.clear = StateHelper.immutableMapFunction;\r\n    o.set = StateHelper.immutableMapFunction;\r\n    o.delete = StateHelper.immutableMapFunction;\r\n\r\n    const origin = new Map(o);\r\n    for (const [key, value] of origin.entries()) {\r\n      StateHelper.deepFreeze(key);\r\n      StateHelper.deepFreeze(value);\r\n    }\r\n    o.entries = () => origin.entries();\r\n    o.values = () => origin.values();\r\n    o.keys = () => origin.keys();\r\n    o.has = (a: any) => origin.has(a);\r\n    o.get = (a: any) => origin.get(a);\r\n    o.forEach = (callbackFn) => origin.forEach(callbackFn);\r\n    o[Symbol.iterator] = () => origin[Symbol.iterator]();\r\n    Object.defineProperty(o, 'size', {\r\n      value: origin.size,\r\n      writable: false\r\n    });\r\n  }\r\n\r\n  private static freezeSet(o: Set<any>): void {\r\n    o.clear = StateHelper.immutableSetFunction;\r\n    o.add = StateHelper.immutableSetFunction;\r\n    o.delete = StateHelper.immutableSetFunction;\r\n\r\n    const origin = new Set(o);\r\n    for (const value of origin) {\r\n      StateHelper.deepFreeze(value);\r\n    }\r\n    o.entries = () => origin.entries();\r\n    o.values = () => origin.values();\r\n    o.keys = () => origin.keys();\r\n    o.has = (a: any) => origin.has(a);\r\n    o.forEach = (callbackFn) => origin.forEach(callbackFn);\r\n    o[Symbol.iterator] = () => origin[Symbol.iterator]();\r\n    Object.defineProperty(o, 'size', {\r\n      value: origin.size,\r\n      writable: false\r\n    });\r\n  }\r\n\r\n  private static freezeDate(o: Date): void {\r\n    o.setDate = StateHelper.immutableDateFunction;\r\n    o.setHours = StateHelper.immutableDateFunction;\r\n    o.setFullYear = StateHelper.immutableDateFunction;\r\n    o.setMilliseconds = StateHelper.immutableDateFunction;\r\n    o.setMinutes = StateHelper.immutableDateFunction;\r\n    o.setMonth = StateHelper.immutableDateFunction;\r\n    o.setSeconds = StateHelper.immutableDateFunction;\r\n    o.setTime = StateHelper.immutableDateFunction;\r\n    o.setUTCDate = StateHelper.immutableDateFunction;\r\n    o.setUTCHours = StateHelper.immutableDateFunction;\r\n    o.setUTCFullYear = StateHelper.immutableDateFunction;\r\n    o.setUTCMilliseconds = StateHelper.immutableDateFunction;\r\n    o.setUTCMinutes = StateHelper.immutableDateFunction;\r\n    o.setUTCMonth = StateHelper.immutableDateFunction;\r\n    o.setUTCSeconds = StateHelper.immutableDateFunction;\r\n\r\n    const origin = new Date(o.getTime());\r\n    o.getDate = () => origin.getDate();\r\n    o.getDay = () => origin.getDay();\r\n    o.getFullYear = () => origin.getFullYear();\r\n    o.getHours = () => origin.getHours();\r\n    o.getMilliseconds = () => origin.getMilliseconds();\r\n    o.getMinutes = () => origin.getMinutes();\r\n    o.getMonth = () => origin.getMonth();\r\n    o.getSeconds = () => origin.getSeconds();\r\n    o.getTimezoneOffset = () => origin.getTimezoneOffset();\r\n    o.getTime = () => origin.getTime();\r\n    o.getUTCDate = () => origin.getUTCDate();\r\n    o.getUTCDay = () => origin.getUTCDay();\r\n    o.getUTCFullYear = () => origin.getUTCFullYear();\r\n    o.getUTCHours = () => origin.getUTCHours();\r\n    o.getUTCMilliseconds = () => origin.getUTCMilliseconds();\r\n    o.getUTCMinutes = () => origin.getUTCMinutes();\r\n    o.getUTCMonth = () => origin.getUTCMonth();\r\n    o.getUTCSeconds = () => origin.getUTCSeconds();\r\n\r\n    o.valueOf = () => origin.valueOf();\r\n    o.toDateString = () => origin.toDateString();\r\n    o.toString = () => origin.toString();\r\n    o.toJSON = (key?: any) => origin.toJSON(key);\r\n    o.toLocaleDateString = () => origin.toLocaleDateString();\r\n    o.toLocaleString = () => origin.toLocaleString();\r\n    o.toLocaleTimeString = () => origin.toLocaleTimeString();\r\n    o.toISOString = () => origin.toISOString();\r\n    o.toTimeString = () => origin.toTimeString();\r\n    o.toUTCString = () => origin.toUTCString();\r\n  }\r\n\r\n  private static freezeObject(o: any): void {\r\n    Object.freeze(o);\r\n    const oIsFunction = typeof o === 'function';\r\n    Object.getOwnPropertyNames(o).forEach((prop) => {\r\n      if (\r\n        (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)\r\n        && o[prop] !== null\r\n        && (typeof o[prop] === 'object' || typeof o[prop] === 'function')\r\n        && !Object.isFrozen(o[prop])) {\r\n        StateHelper.deepFreeze(o[prop]);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The method returns the clone of the object. Useful to clone frozen object.\r\n   *\r\n   * @param o object to clone\r\n   * @param cloneFunctions determines whether the functions must be also cloned, default value 'true'\r\n   */\r\n  public static cloneObject<T>(o: T, cloneFunctions = true): T {\r\n    const cyclicDependenciesMap = new Map<any, any>();\r\n    return StateHelper.cloneObjectIntern(cyclicDependenciesMap, o, undefined, cloneFunctions);\r\n  }\r\n\r\n  /**\r\n   * The method returns the clone of the object. Useful to clone frozen object.\r\n   *\r\n   * @param cyclicDependenciesMap map to detect and resolve cyclic dependencies\r\n   * @param o object to clone\r\n   * @param parent owner object of the object to clone, it is used for the functions cloning\r\n   * @param cloneFunctions determines whether the functions must be also cloned, default value 'true'\r\n   */\r\n  private static cloneObjectIntern<T>(cyclicDependenciesMap: Map<any, any>, o: T, parent?, cloneFunctions?): T {\r\n    let target;\r\n\r\n    // @ts-ignore\r\n    if (o === window) {\r\n      return o;\r\n    }\r\n\r\n    if (o) {\r\n\r\n      if (cyclicDependenciesMap.has(o)) {\r\n        return cyclicDependenciesMap.get(o);\r\n      }\r\n\r\n      if (typeof o === 'object') {\r\n\r\n        // clone Array\r\n        if (Array.isArray(o)) {\r\n          target = StateHelper.cloneArray(o as any[], cyclicDependenciesMap, cloneFunctions);\r\n          // clone Map\r\n        } else if (o instanceof Map) {\r\n          target = StateHelper.cloneMap(o as Map<any, any>, cyclicDependenciesMap, cloneFunctions);\r\n          // clone Set\r\n        } else if (o instanceof Set) {\r\n          target = StateHelper.cloneSet(o as Set<any>, cyclicDependenciesMap, cloneFunctions);\r\n          // clone Date\r\n        } else if (StateHelper.isValidDate(o)) {\r\n          target = new Date(((o as any) as Date).getTime());\r\n          cyclicDependenciesMap.set(o, target);\r\n          // clone Object\r\n        } else {\r\n          target = StateHelper.cloneSimpleObject(o, cyclicDependenciesMap, cloneFunctions);\r\n        }\r\n        // clone function\r\n      } else if (typeof o === 'function') {\r\n        if (cloneFunctions) {\r\n          target = StateHelper.cloneFunction(o as any, cyclicDependenciesMap, parent, cloneFunctions);\r\n        }\r\n      } else {\r\n        target = o;\r\n      }\r\n    } else {\r\n      target = o;\r\n    }\r\n    return target;\r\n  }\r\n\r\n  private static cloneArray(o: any[], cyclicDependenciesMap: Map<any, any>, cloneFunctions): any[] {\r\n    const target = o.slice();\r\n    cyclicDependenciesMap.set(o, target);\r\n    (o as any[]).forEach((element, index) => {\r\n      (target as any[])[index] = StateHelper.cloneObjectIntern(cyclicDependenciesMap, element, undefined, cloneFunctions);\r\n    });\r\n    return target;\r\n  }\r\n\r\n  private static cloneMap(o: Map<any, any>, cyclicDependenciesMap: Map<any, any>, cloneFunctions): Map<any, any> {\r\n    const target = new Map();\r\n    cyclicDependenciesMap.set(o, target);\r\n    for (const [key, value] of o.entries()) {\r\n      const keyClone = StateHelper.cloneObjectIntern(cyclicDependenciesMap, key, undefined, cloneFunctions);\r\n      const valueClone = StateHelper.cloneObjectIntern(cyclicDependenciesMap, value, undefined, cloneFunctions);\r\n      target.set(keyClone, valueClone);\r\n    }\r\n    return target;\r\n  }\r\n\r\n  private static cloneSet(o: Set<any>, cyclicDependenciesMap: Map<any, any>, cloneFunctions): Set<any> {\r\n    const target = new Set();\r\n    cyclicDependenciesMap.set(o, target);\r\n    for (const value of o) {\r\n      const valueClone = StateHelper.cloneObjectIntern(cyclicDependenciesMap, value, undefined, cloneFunctions);\r\n      target.add(valueClone);\r\n    }\r\n    return target;\r\n  }\r\n\r\n  private static cloneSimpleObject(o: any, cyclicDependenciesMap: Map<any, any>, cloneFunctions): any {\r\n    const target = Object.assign({}, o);\r\n    cyclicDependenciesMap.set(o, target);\r\n\r\n    Object.getOwnPropertyNames(o).forEach((prop) => {\r\n        const functionType = (typeof o[prop] === 'function');\r\n        if (cloneFunctions && functionType || !functionType) {\r\n          target[prop] = StateHelper.cloneObjectIntern(cyclicDependenciesMap, o[prop], target, cloneFunctions);\r\n        } else {\r\n          delete target[prop];\r\n        }\r\n      }\r\n    );\r\n    return target;\r\n  }\r\n\r\n  private static cloneFunction(o: any, cyclicDependenciesMap: Map<any, any>, parent, cloneFunctions): any {\r\n    const target = o.bind(parent || {});\r\n    cyclicDependenciesMap.set(o, target);\r\n\r\n    Object.getOwnPropertyNames(o).forEach((prop) => {\r\n        if (prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' && prop !== 'length' && prop !== 'name') {\r\n          target[prop] = StateHelper.cloneObjectIntern(cyclicDependenciesMap, o[prop], target, cloneFunctions);\r\n        }\r\n      }\r\n    );\r\n    return target;\r\n  }\r\n\r\n  public static getEmptyObject(): any {\r\n    return Object.create(null);\r\n  }\r\n\r\n  public static combine<S>(state: S, newValue: Partial<S>): S {\r\n    return Object.assign(StateHelper.getEmptyObject(), state, newValue);\r\n  }\r\n\r\n  private static isValidDate(date): boolean {\r\n    return date && date instanceof Date && Object.prototype.toString.call(date) === '[object Date]' && !isNaN(date as any);\r\n  }\r\n}\r\n\r\n","import { StateHelper } from './state-helper';\r\n\r\nexport abstract class StorePlugin {\r\n\r\n  private namespace = 'ngx-state-store';\r\n\r\n  get state(): any  {\r\n    return window[this.namespace][this.storageName].state;\r\n  }\r\n\r\n  protected constructor(private storageName: string) {\r\n    this.prepareWindowObject(storageName);\r\n  }\r\n\r\n  abstract dispatchBefore(actionId: string, state: any, order: number);\r\n\r\n  abstract dispatchAfter(actionId: string, state: any, order: number);\r\n\r\n  abstract newState(state: any);\r\n\r\n  /**\r\n   *\r\n   * @param storeName e.g. 'store-demo'\r\n   */\r\n  private prepareWindowObject(storeName: string): void {\r\n\r\n    if (!window[this.namespace]) {\r\n      window[this.namespace] = StateHelper.getEmptyObject();\r\n    }\r\n\r\n    if (!window[this.namespace][storeName]) {\r\n      window[this.namespace][storeName] = StateHelper.getEmptyObject();\r\n    }\r\n\r\n    if (!window[this.namespace][storeName].state) {\r\n      window[this.namespace][storeName].state = StateHelper.getEmptyObject();\r\n    }\r\n  }\r\n}\r\n\r\n","import { StorePlugin } from './store-plugin';\r\nimport { StateHelper } from './state-helper';\r\n\r\ninterface ActionToState {\r\n  actionId: string;\r\n  state: any;\r\n}\r\n\r\ninterface LogSettings {\r\n  // Saves all executed actions\r\n  executedStack: ActionToState[];\r\n  // After reaching the limit first element will be removed, if limit is -1 then no elements will be removed\r\n  limit: number;\r\n  // logging is done if set to true\r\n  log: boolean;\r\n}\r\n\r\nexport class StoreLogPlugin extends StorePlugin {\r\n\r\n  private readonly actionEnd = 'Action end:   ';\r\n  private readonly stateLog: LogSettings;\r\n\r\n  private get loggingDisabled(): boolean {\r\n    return !this.state.log.log;\r\n  }\r\n\r\n  constructor(storeName: string, log: boolean = false, limit = 0) {\r\n    super(storeName);\r\n    this.stateLog = StateHelper.getEmptyObject();\r\n    this.stateLog.executedStack = [];\r\n    this.stateLog.limit = limit;\r\n    this.stateLog.log = log;\r\n    this.state.log = this.stateLog;\r\n  }\r\n\r\n  private static logAction(message, state?): void {\r\n    console.log(message, state);\r\n  }\r\n\r\n  private static restrict(arr: ActionToState[], limit: number): void {\r\n    if (arr.length > limit) {\r\n      arr.splice(0, 1);\r\n    }\r\n  }\r\n\r\n  dispatchBefore(): void {\r\n  }\r\n\r\n  dispatchAfter(actionId: string, state: any, order: number): void {\r\n    if (this.loggingDisabled) {\r\n      return;\r\n    }\r\n    const log = {\r\n      actionId,\r\n      state\r\n    };\r\n    this.stateLog.executedStack.push(log);\r\n    StoreLogPlugin.restrict(this.stateLog.executedStack, this.stateLog.limit);\r\n    const message = this.actionEnd + actionId;\r\n    StoreLogPlugin.logAction(order + '. ' + message, state);\r\n    StoreLogPlugin.logAction('', '');\r\n  }\r\n\r\n  newState(): void {\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const STATE_CONFIG = new InjectionToken('STATE_CONFIG');\r\n","import { StorePlugin } from './store-plugin';\r\n\r\n/**\r\n * Measure time of action execution.\r\n */\r\ninterface PerformanceSettings {\r\n  // Measure action duration\r\n  timekeeping: boolean;\r\n  // After reaching the limit it starts from the beginning\r\n  limit: number;\r\n  performanceLog: ActionTime[];\r\n}\r\n\r\ninterface ActionTime {\r\n  id: string;\r\n  order: number;\r\n  time: number;\r\n}\r\n\r\nexport class StorePerformancePlugin extends StorePlugin {\r\n\r\n  private readonly settings: PerformanceSettings;\r\n  private performanceLog: ActionTime[] = [];\r\n\r\n  private get timekeeping(): boolean {\r\n    return this.state.performance.timekeeping;\r\n  }\r\n\r\n  constructor(storeName: string, log: boolean = false, limit = 1000) {\r\n    super(storeName);\r\n    this.settings = {\r\n      timekeeping: log,\r\n      limit: limit < 1 ? 1 : limit,\r\n      performanceLog: this.performanceLog\r\n    };\r\n    this.state.performance = this.settings;\r\n  }\r\n\r\n  dispatchBefore(actionId: string, state: any, order: number): void {\r\n    if (!this.timekeeping) {\r\n      return;\r\n    }\r\n    const index = order % this.settings.limit;\r\n    if (this.performanceLog.length < index) {\r\n      this.performanceLog.length = index;\r\n    }\r\n    this.performanceLog[index] = {\r\n      id: actionId,\r\n      order,\r\n      time: performance.now()\r\n    };\r\n  }\r\n\r\n  newState(): void {\r\n  }\r\n\r\n  dispatchAfter(actionId: string, state: any, order: number): void {\r\n    if (!this.timekeeping) {\r\n      return;\r\n    }\r\n    const index = order % this.settings.limit;\r\n    if (this.performanceLog[index]?.order === order) {\r\n      this.performanceLog[index].time = performance.now() - this.performanceLog[index].time;\r\n    }\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { distinctUntilChanged, pluck, take } from 'rxjs/operators';\r\nimport { Action } from './action';\r\nimport { StateContext } from './state-context';\r\nimport { StateHelper } from './state-helper';\r\nimport { StoreLogPlugin } from './store-log-plugin';\r\nimport { StorePlugin } from './store-plugin';\r\nimport { StateConfig } from './state-config';\r\nimport { STATE_CONFIG } from './state-config.token';\r\nimport { StorePerformancePlugin } from './store-performance-plugin';\r\nimport { BehaviorSubject, isObservable, Observable, Subject, throwError } from 'rxjs';\r\n\r\nexport type ObjectComparator = (oldObject: any, newObject: any) => boolean;\r\n\r\n@Injectable()\r\nexport class Store<S> {\r\n\r\n  private actionCounter = 0;\r\n  private plugins: StorePlugin[] = [];\r\n  private currentState: S;\r\n  private stateStream: BehaviorSubject<S>;\r\n\r\n  constructor(@Inject(STATE_CONFIG) private config: StateConfig) {\r\n    this.plugins.push(new StoreLogPlugin(this.config.storeName, this.config.log));\r\n    this.plugins.push(new StorePerformancePlugin(this.config.storeName, this.config.timekeeping));\r\n    this.currentState = config.initialState || {};\r\n    this.stateStream = new BehaviorSubject<S>(this.currentState);\r\n  }\r\n\r\n  private static getErrorState(action: Action, error: Error | any): any {\r\n    const state = StateHelper.getEmptyObject();\r\n    state.error = error;\r\n    state.action = action.Type;\r\n    return state;\r\n  }\r\n\r\n  dispatch(action: Action): Observable<S> {\r\n    const currentCounter = this.actionCounter++;\r\n    this.dispatchBefore(action, this.currentState, currentCounter);\r\n\r\n    let actionResult$;\r\n    try {\r\n      actionResult$ = action.handleState(this.getStateContext());\r\n    } catch (error) {\r\n      this.dispatchAfter(action, this.currentState, currentCounter);\r\n      console.error(error);\r\n\r\n      return throwError(error);\r\n    }\r\n\r\n    const result = new Subject<S>();\r\n\r\n    // Otherwise it will run sync.\r\n    // And the result observable is\r\n    // complete before return statement.\r\n    setTimeout(() => {\r\n      if (isObservable(actionResult$)) {\r\n        (actionResult$ as Observable<void>)\r\n          .pipe(take(1)).subscribe(\r\n          () => {\r\n            this.dispatchAfter(action, this.currentState, currentCounter);\r\n            result.next(this.currentState);\r\n            result.complete();\r\n          }, (error) => {\r\n            const errorState = Store.getErrorState(action, error);\r\n            this.dispatchAfter(action, errorState, currentCounter);\r\n            console.error(error);\r\n            result.error(error);\r\n          });\r\n      } else {\r\n        this.dispatchAfter(action, this.currentState, currentCounter);\r\n        result.next(this.currentState);\r\n        result.complete();\r\n      }\r\n    });\r\n    return result.asObservable();\r\n  }\r\n\r\n  select<keyString extends keyof S>(prop: keyString, objectComparator?: ObjectComparator): Observable<S[keyString]> {\r\n    if (objectComparator) {\r\n      return this.stateStream.pipe(pluck(prop as string), distinctUntilChanged<any>(objectComparator));\r\n    }\r\n    return this.stateStream.pipe(pluck(prop as string), distinctUntilChanged<any>());\r\n  }\r\n\r\n  /**\r\n   * The Observable is complete after forward one value.\r\n   *\r\n   * @param prop property to select\r\n   */\r\n  selectOnce<keyString extends keyof S>(prop: keyString): Observable<S[keyString]> {\r\n    return this.select(prop).pipe(take(1));\r\n  }\r\n\r\n  private getStateContext(): StateContext<S> {\r\n    return {\r\n      getState: () => this.currentState,\r\n      setState: (state) => {\r\n        this.updateState(state);\r\n      },\r\n      patchState: (partOfState) => {\r\n        const isArray = Array.isArray(partOfState);\r\n        const isPrimitive = typeof partOfState !== 'object';\r\n        if (isArray) {\r\n          throw new Error('Patching arrays is not supported.');\r\n        } else if (isPrimitive) {\r\n          throw new Error('Patching primitives is not supported.');\r\n        }\r\n        const newState = StateHelper.combine(this.currentState, partOfState);\r\n        this.updateState(newState);\r\n      }\r\n    };\r\n  }\r\n\r\n  private updateState(state: S): void {\r\n    this.currentState = StateHelper.deepFreeze(state);\r\n    this.dispatchState(this.currentState);\r\n\r\n    // next-sync. Otherwise the state change will trigger all other changes.\r\n    setTimeout(() => {\r\n      this.stateStream.next(this.currentState);\r\n    }, 0);\r\n  }\r\n\r\n  private dispatchBefore(action: Action, state: any, order: number): void {\r\n    this.plugins.forEach((plugin) => {\r\n      plugin.dispatchBefore(action.Type, state, order);\r\n    });\r\n  }\r\n\r\n  private dispatchAfter(action: Action, state: any, order: number): void {\r\n    this.plugins.forEach((plugin) => {\r\n      plugin.dispatchAfter(action.Type, state, order);\r\n    });\r\n  }\r\n\r\n  private dispatchState(state: any): void {\r\n    this.plugins.forEach((plugin) => {\r\n      plugin.newState(state);\r\n    });\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { StateContext } from './state-context';\r\nimport { StateHelper } from './state-helper';\r\n\r\nexport abstract class Action {\r\n\r\n  public get Type(): string {\r\n    return this.actionId;\r\n  }\r\n\r\n  protected constructor(private actionId: string) {\r\n  }\r\n\r\n  abstract handleState(stateContext: StateContext<any>): Observable<void> | void;\r\n\r\n  protected clone<T>(o: T, cloneFunctions = true): T {\r\n    return StateHelper.cloneObject(o, cloneFunctions);\r\n  }\r\n\r\n  protected getEmptyState(): any {\r\n    return StateHelper.getEmptyObject();\r\n  }\r\n\r\n  protected getEmptyObject<T>(): T {\r\n    return StateHelper.getEmptyObject();\r\n  }\r\n\r\n  protected combine<S>(state: S, newValue: Partial<S>): S {\r\n    return StateHelper.combine(state, newValue);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { StateConfig } from './state/state-config';\r\nimport { Store } from './state/store.service';\r\nimport { STATE_CONFIG } from './state/state-config.token';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: []\r\n})\r\nexport class NgxStateStoreModule {\r\n\r\n  static forRoot(config: StateConfig): ModuleWithProviders<NgxStateStoreModule> {\r\n    return {\r\n      ngModule: NgxStateStoreModule,\r\n      providers: [\r\n        Store,\r\n        {provide: STATE_CONFIG, useValue: config}\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\nexport { Action } from './state/action';\r\nexport { StateConfig } from './state/state-config';\r\nexport { StateContext } from './state/state-context';\r\nexport { StateHelper } from './state/state-helper';\r\nexport { Store, ObjectComparator } from './state/store.service';\r\n","/*\r\n * Public API Surface of ngx-state-store\r\n */\r\n\r\nexport * from './lib/ngx-state-store.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {STATE_CONFIG as ɵa} from './lib/state/state-config.token';","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment';\r\nimport { AppInitialState } from './services/state-store/app-initial-state';\r\nimport { CounterButtonComponent } from './components/counter-button.component/counter-button.component';\r\nimport { CounterComponent } from './components/counter.component/counter.component';\r\nimport { ActionFactory } from './services/state-store/action-factory';\r\nimport { InventoryConnector } from './services/connectors/inventory.connector';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InventoriesButtonComponent } from './components/inventories-button.component/inventories-button.component';\r\nimport { InventoriesComponent } from './components/inventories.component/inventories.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxStateStoreModule } from 'ngx-state-store';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CounterButtonComponent,\r\n    CounterComponent,\r\n    InventoriesButtonComponent,\r\n    InventoriesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    NgxStateStoreModule.forRoot({\r\n      storeName: 'store-demo',\r\n      log: environment.state.log,\r\n      timekeeping: environment.state.timekeeping,\r\n      initialState: AppInitialState\r\n    }),\r\n  ],\r\n  providers: [ActionFactory, InventoryConnector],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export default \"<button class=\\\"btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment Counter</button>\\r\\n\";","export default \"<div class=\\\"inventories\\\">\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator-background\\\"></div>\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator\\\">\\r\\n    <div>Loading ...</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"inventories-table-container\\\">\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">#</th>\\r\\n        <th scope=\\\"col\\\">ID</th>\\r\\n        <th scope=\\\"col\\\">Version</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let inventory of inventories; let i=index\\\">\\r\\n        <th scope=\\\"row\\\">{{i}}</th>\\r\\n        <td>{{inventory.id}}</td>\\r\\n        <td>{{inventory.version}}</td>\\r\\n        <td>{{inventory.name}}</td>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HideLoadingIndicatorAction, IncrementCounterAction, LoadInventoriesAction, ShowLoadingIndicatorAction } from './actions';\r\nimport { Action } from 'ngx-state-store';\r\nimport { InventoryConnector } from '../connectors/inventory.connector';\r\n\r\nexport enum LoadIndicator {\r\n  DEFAULT = 'DEFAULT',\r\n  LOAD_INVENTORIES = 'LOAD_INVENTORIES'\r\n}\r\n\r\n@Injectable()\r\nexport class ActionFactory {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n  }\r\n\r\n  incrementCounter(): Action {\r\n    return new IncrementCounterAction();\r\n  }\r\n\r\n  showLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new ShowLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  hideLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new HideLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  loadInventories(): Action {\r\n    return new LoadInventoriesAction(this.inventoryConnector);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnZlbnRvcmllcy1idXR0b24uY29tcG9uZW50LnNjc3MifQ== */\";","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\nexport class IncrementCounterAction extends Action {\r\n\r\n  constructor() {\r\n    super(ActionIds.UpdateCounter);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n    const newValue = this.getEmptyState();\r\n    newValue.Counter = stateContext.getState().Counter + 1;\r\n    stateContext.patchState(newValue);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-counter',\r\n  templateUrl: './counter.component.html',\r\n  styleUrls: ['./counter.component.scss']\r\n})\r\nexport class CounterComponent implements OnInit {\r\n\r\n  counter$: Observable<number>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.counter$ = this.store.select('Counter');\r\n  }\r\n}\r\n","import { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { Action, StateContext } from 'ngx-state-store';\r\n\r\n/**\r\n * Hide loading indicator which block the page.\r\n */\r\nexport class HideLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.HideLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    if (stateContext.getState().ShowLoadingIndicator == null) {\r\n      return;\r\n    }\r\n\r\n    const index = stateContext.getState().ShowLoadingIndicator.indexOf(this.identifier);\r\n\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n\r\n    const newState: AppState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.splice(index, 1);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { InventoryConnector } from '../../connectors/inventory.connector';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport class LoadInventoriesAction extends Action {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n    super(ActionIds.LoadInventories);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): Observable<any> {\r\n    return this.inventoryConnector.loadInventory()\r\n      .pipe(\r\n        tap(inventories => {\r\n          const newState: AppState = this.getEmptyState();\r\n          newState.Inventories = inventories;\r\n          newState.LastDownloadAt = (new Date()).toISOString();\r\n          stateContext.patchState(newState);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { LoadIndicator } from '../../services/state-store/action-factory';\r\n\r\n@Component({\r\n  selector: 'app-inventories',\r\n  templateUrl: './inventories.component.html',\r\n  styleUrls: ['./inventories.component.scss']\r\n})\r\nexport class InventoriesComponent implements OnInit {\r\n\r\n  inventories: Inventory[];\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = this.store.select('ShowLoadingIndicator').pipe(\r\n      map(indicators => indicators.filter(i => i === LoadIndicator.LOAD_INVENTORIES).length > 0)\r\n    );\r\n    this.store.select('Inventories').subscribe(inventories => {\r\n      this.inventories = inventories;\r\n    });\r\n  }\r\n}\r\n","export * from './hide-loading-indicator.action';\r\nexport * from './increment-counter.action';\r\nexport * from './load-inventories.action';\r\nexport * from './show-loading-indicator.action';\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}