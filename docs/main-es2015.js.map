{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/counter-button.component/counter-button.component.ts","./src/app/components/counter.component/counter.component.ts","./src/app/components/inventories-button.component/inventories-button.component.ts","./src/app/components/inventories.component/inventories.component.ts","./src/app/services/connectors/inventory.connector.ts","./src/app/services/state-store/action-factory.ts","./src/app/services/state-store/action-ids.ts","./src/app/services/state-store/actions/hide-loading-indicator.action.ts","./src/app/services/state-store/actions/increment-counter.action.ts","./src/app/services/state-store/actions/index.ts","./src/app/services/state-store/actions/load-inventories.action.ts","./src/app/services/state-store/actions/show-loading-indicator.action.ts","./src/app/services/state-store/app-initial-state.ts","./src/environments/environment.ts","./src/main.ts","./src/app/app.component.css","./src/app/components/counter-button.component/counter-button.component.scss","./src/app/components/counter.component/counter.component.scss","./src/app/components/inventories-button.component/inventories-button.component.scss","./src/app/components/inventories.component/inventories.component.scss","./src/app/app.component.html","./src/app/components/counter-button.component/counter-button.component.html","./src/app/components/counter.component/counter.component.html","./src/app/components/inventories-button.component/inventories-button.component.html","./src/app/components/inventories.component/inventories.component.html"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment';\r\nimport { AppInitialState } from './services/state-store/app-initial-state';\r\nimport { CounterButtonComponent } from './components/counter-button.component/counter-button.component';\r\nimport { CounterComponent } from './components/counter.component/counter.component';\r\nimport { ActionFactory } from './services/state-store/action-factory';\r\nimport { InventoryConnector } from './services/connectors/inventory.connector';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InventoriesButtonComponent } from './components/inventories-button.component/inventories-button.component';\r\nimport { InventoriesComponent } from './components/inventories.component/inventories.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxStateStoreModule } from 'ngx-state-store';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CounterButtonComponent,\r\n    CounterComponent,\r\n    InventoriesButtonComponent,\r\n    InventoriesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    NgxStateStoreModule.forRoot({\r\n      storeName: 'store-demo',\r\n      log: environment.state.log,\r\n      timekeeping: environment.state.timekeeping,\r\n      initialState: AppInitialState\r\n    }),\r\n  ],\r\n  providers: [ActionFactory, InventoryConnector],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory } from '../../services/state-store/action-factory';\r\nimport { Store } from 'ngx-state-store';\r\n\r\n@Component({\r\n  selector: 'app-counter-button',\r\n  templateUrl: './counter-button.component.html',\r\n  styleUrls: ['./counter-button.component.scss']\r\n})\r\nexport class CounterButtonComponent {\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  incrementCounter(): void {\r\n    this.store.dispatch(this.factory.incrementCounter());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-counter',\r\n  templateUrl: './counter.component.html',\r\n  styleUrls: ['./counter.component.scss']\r\n})\r\nexport class CounterComponent implements OnInit {\r\n\r\n  counter$: Observable<number>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.counter$ = this.store.select('Counter');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory, LoadIndicator } from '../../services/state-store/action-factory';\r\nimport { catchError, mergeMap, skip } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { Inventory } from '../../models/inventory';\r\n\r\nexport interface Changes {\r\n  addedEntries: Inventory[];\r\n  removedEntries: Inventory[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inventories-button',\r\n  templateUrl: './inventories-button.component.html',\r\n  styleUrls: ['./inventories-button.component.scss']\r\n})\r\nexport class InventoriesButtonComponent implements OnInit {\r\n\r\n  lastDownloadAt: string;\r\n  changes: Changes = {addedEntries: [], removedEntries: []} as Changes;\r\n  private inventories: Inventory[] = [];\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.store.select('Inventories',\r\n      (oldInventories: Inventory[], newInventories: Inventory[]) => {\r\n        if (oldInventories === newInventories\r\n          || oldInventories && newInventories\r\n          && !this.calcDiff(oldInventories, newInventories).length\r\n          && !this.calcDiff(newInventories, oldInventories).length) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }).pipe(skip(1))\r\n      .subscribe((newInventories) => {\r\n        this.changes.addedEntries = this.calcDiff(this.inventories, newInventories);\r\n        this.changes.removedEntries = this.calcDiff(newInventories, this.inventories);\r\n        this.inventories = newInventories;\r\n        console.log('the log is present only if there are some changes');\r\n      });\r\n  }\r\n\r\n  private calcDiff(source: Inventory[], target: Inventory[]): Inventory[] {\r\n    return (target || []).filter(t => !(source || []).find(s => s.id === t.id));\r\n  }\r\n\r\n  loadInventory(): void {\r\n    this.changes.addedEntries = [];\r\n    this.changes.removedEntries = [];\r\n    this.store.dispatch(this.factory.showLoadIndicator(LoadIndicator.LOAD_INVENTORIES))\r\n      .pipe(\r\n        mergeMap(() => this.store.dispatch(this.factory.loadInventories())),\r\n        catchError(error => {\r\n          console.log(error);\r\n          return of(error);\r\n        })\r\n      ).subscribe((state: AppState) => {\r\n        this.lastDownloadAt = state.LastDownloadAt;\r\n        this.store.dispatch(this.factory.hideLoadIndicator(LoadIndicator.LOAD_INVENTORIES));\r\n      }\r\n    );\r\n  }\r\n\r\n  inventoriesToString(inventories: Inventory[]): string {\r\n    return inventories.map(e => e.id).join(', ');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { LoadIndicator } from '../../services/state-store/action-factory';\r\n\r\n@Component({\r\n  selector: 'app-inventories',\r\n  templateUrl: './inventories.component.html',\r\n  styleUrls: ['./inventories.component.scss']\r\n})\r\nexport class InventoriesComponent implements OnInit {\r\n\r\n  inventories: Inventory[];\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = this.store.select('ShowLoadingIndicator').pipe(\r\n      map(indicators => indicators.filter(i => i === LoadIndicator.LOAD_INVENTORIES).length > 0)\r\n    );\r\n    this.store.select('Inventories').subscribe(inventories => {\r\n      this.inventories = inventories;\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { delay, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class InventoryConnector {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  loadInventory(): Observable<Inventory[]> {\r\n    // delay(2000) to imitate the network throttling\r\n    return this.http.get<Inventory[]>('assets/mock-data/inventories.json').pipe(\r\n      delay(2000),\r\n      mergeMap(inventories => {\r\n        inventories.splice(this.getRandomInt(inventories.length), this.getRandomInt(2));\r\n        return of(inventories);\r\n      })\r\n    );\r\n  }\r\n\r\n  getRandomInt(max): number {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HideLoadingIndicatorAction, IncrementCounterAction, LoadInventoriesAction, ShowLoadingIndicatorAction } from './actions';\r\nimport { Action } from 'ngx-state-store';\r\nimport { InventoryConnector } from '../connectors/inventory.connector';\r\n\r\nexport enum LoadIndicator {\r\n  DEFAULT = 'DEFAULT',\r\n  LOAD_INVENTORIES = 'LOAD_INVENTORIES'\r\n}\r\n\r\n@Injectable()\r\nexport class ActionFactory {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n  }\r\n\r\n  incrementCounter(): Action {\r\n    return new IncrementCounterAction();\r\n  }\r\n\r\n  showLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new ShowLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  hideLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new HideLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  loadInventories(): Action {\r\n    return new LoadInventoriesAction(this.inventoryConnector);\r\n  }\r\n}\r\n","export enum ActionIds {\r\n\r\n  HideLoadingIndicator = '[Load] Hide Loading Indicator',\r\n  ShowLoadingIndicator = '[Load] Show Loading Indicator',\r\n\r\n  UpdateCounter = '[Common] Update counter',\r\n  LoadInventories = '[Load] Load inventories from back-end'\r\n}\r\n","import { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { Action, StateContext } from 'ngx-state-store';\r\n\r\n/**\r\n * Hide loading indicator which block the page.\r\n */\r\nexport class HideLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.HideLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    if (stateContext.getState().ShowLoadingIndicator == null) {\r\n      return;\r\n    }\r\n\r\n    const index = stateContext.getState().ShowLoadingIndicator.indexOf(this.identifier);\r\n\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n\r\n    const newState: AppState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.splice(index, 1);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\nexport class IncrementCounterAction extends Action {\r\n\r\n  constructor() {\r\n    super(ActionIds.UpdateCounter);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n    const newValue = this.getEmptyState();\r\n    newValue.Counter = stateContext.getState().Counter + 1;\r\n    stateContext.patchState(newValue);\r\n  }\r\n}\r\n","export * from './hide-loading-indicator.action';\r\nexport * from './increment-counter.action';\r\nexport * from './load-inventories.action';\r\nexport * from './show-loading-indicator.action';\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { InventoryConnector } from '../../connectors/inventory.connector';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport class LoadInventoriesAction extends Action {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n    super(ActionIds.LoadInventories);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): Observable<any> {\r\n    return this.inventoryConnector.loadInventory()\r\n      .pipe(\r\n        tap(inventories => {\r\n          const newState: AppState = this.getEmptyState();\r\n          newState.Inventories = inventories;\r\n          newState.LastDownloadAt = (new Date()).toISOString();\r\n          stateContext.patchState(newState);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\n/**\r\n * Shows loading indicator to blocks the page, so the user can not\r\n * use the ui.\r\n */\r\nexport class ShowLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.ShowLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    const newState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.push(this.identifier);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","import { AppState } from './app-state';\r\n\r\nexport const AppInitialState: AppState = {\r\n  ShowLoadingIndicator: [],\r\n  Counter: 0,\r\n  Inventories: null,\r\n  LastDownloadAt: ''\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --configuration production` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { EnvironmentSettings } from './environment-settings';\r\n\r\nexport const environment: EnvironmentSettings = {\r\n  production: false,\r\n  state: {\r\n    log: true,\r\n    timekeeping: true\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \".row {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdyB7XHJcbiAgbWFyZ2luLXRvcDogMXJlbTtcclxufVxyXG4iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3VudGVyLWJ1dHRvbi5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3VudGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnZlbnRvcmllcy1idXR0b24uY29tcG9uZW50LnNjc3MifQ== */\";","export default \".inventories {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  min-height: 300px;\\n  max-height: 300px;\\n  overflow: hidden;\\n}\\n\\n.load-indicator-background {\\n  background-color: #cccccc;\\n  opacity: 0.7;\\n}\\n\\n.load-indicator, .load-indicator-background, .inventories-table-container {\\n  height: 100%;\\n  width: 100%;\\n  z-index: 1;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\\n.inventories-table-container {\\n  z-index: auto;\\n  z-index: initial;\\n  overflow-x: auto;\\n  overflow-y: auto;\\n}\\n\\n.load-indicator {\\n  margin: auto;\\n  background-color: white;\\n  width: 7rem;\\n  height: 3rem;\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n}\\n\\n.load-indicator > div {\\n  margin: 0;\\n  padding: 0;\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludmVudG9yaWVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFVBQUE7RUFDQSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFBQSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSx1QkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLDZCQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFDRTtFQUNFLFNBQUE7RUFDQSxVQUFBO0VBQ0Esc0JBQUE7QUFDSiIsImZpbGUiOiJpbnZlbnRvcmllcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbnZlbnRvcmllcyB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBtaW4taGVpZ2h0OiAzMDBweDtcclxuICBtYXgtaGVpZ2h0OiAzMDBweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4ubG9hZC1pbmRpY2F0b3ItYmFja2dyb3VuZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjY2NjYztcclxuICBvcGFjaXR5OiAuNztcclxufVxyXG5cclxuLmxvYWQtaW5kaWNhdG9yLCAubG9hZC1pbmRpY2F0b3ItYmFja2dyb3VuZCwgLmludmVudG9yaWVzLXRhYmxlLWNvbnRhaW5lciB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHotaW5kZXg6ICsxO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBib3R0b206IDA7XHJcbn1cclxuXHJcbi5pbnZlbnRvcmllcy10YWJsZS1jb250YWluZXIge1xyXG4gIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgb3ZlcmZsb3cteDogYXV0bztcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG59XHJcblxyXG4ubG9hZC1pbmRpY2F0b3Ige1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICB3aWR0aDogN3JlbTtcclxuICBoZWlnaHQ6IDNyZW07XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICA+IGRpdiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ== */\";","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <h3>Usage example of the ngx-state-store module</h3>\\r\\n      The complete module documentation is available at <a\\r\\n      href=\\\"https://it-and-services.github.io/state-store/\\\"\\r\\n      target=\\\"_blank\\\">https://it-and-services.github.io/state-store/</a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/counter-button.component/counter-button.component.ts</li>\\r\\n        <li>src/app/components/counter.component/counter.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter-button></app-counter-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter></app-counter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/inventories-button.component/inventories-button.component.ts</li>\\r\\n        <li>src/app/components/inventories.component/inventories.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories-button></app-inventories-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories></app-inventories>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<button class=\\\"btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment Counter</button>\\r\\n\";","export default \"<div class=\\\"alert alert-primary\\\" role=\\\"alert\\\">\\r\\n  current counter {{counter$ | async}}\\r\\n</div>\\r\\n\";","export default \"<button (click)=\\\"loadInventory()\\\" class=\\\"btn-primary\\\">Load Inventory</button>\\r\\n<p>Last download at: {{lastDownloadAt}}</p>\\r\\n<p *ngIf=\\\"changes.addedEntries.length\\\">\\r\\n  {{changes.addedEntries.length}} new {{changes.addedEntries.length > 1 ? 'entries' : 'entry'}}:\\r\\n  {{inventoriesToString(changes.addedEntries)}}</p>\\r\\n<p *ngIf=\\\"changes.removedEntries.length\\\">\\r\\n  {{changes.removedEntries.length}} {{changes.removedEntries.length > 1 ? 'entries' : 'entry'}} removed:\\r\\n  {{inventoriesToString(changes.removedEntries)}}</p>\\r\\n\";","export default \"<div class=\\\"inventories\\\">\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator-background\\\"></div>\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator\\\">\\r\\n    <div>Loading ...</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"inventories-table-container\\\">\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">#</th>\\r\\n        <th scope=\\\"col\\\">ID</th>\\r\\n        <th scope=\\\"col\\\">Version</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let inventory of inventories; let i=index\\\">\\r\\n        <th scope=\\\"row\\\">{{i}}</th>\\r\\n        <td>{{inventory.id}}</td>\\r\\n        <td>{{inventory.version}}</td>\\r\\n        <td>{{inventory.name}}</td>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\";"],"sourceRoot":"webpack:///"}