{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/counter-button.component/counter-button.component.ts","webpack:///src/app/components/counter.component/counter.component.ts","webpack:///src/app/components/inventories-button.component/inventories-button.component.ts","webpack:///src/app/components/inventories.component/inventories.component.ts","webpack:///src/app/services/connectors/inventory.connector.ts","webpack:///src/app/services/state-store/action-factory.ts","webpack:///src/app/services/state-store/action-ids.ts","webpack:///src/app/services/state-store/actions/hide-loading-indicator.action.ts","webpack:///src/app/services/state-store/actions/increment-counter.action.ts","webpack:///src/app/services/state-store/actions/load-inventories.action.ts","webpack:///src/app/services/state-store/actions/show-loading-indicator.action.ts","webpack:///src/app/services/state-store/app-initial-state.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/app/app.component.css","webpack:///src/app/components/counter-button.component/counter-button.component.scss","webpack:///src/app/components/counter.component/counter.component.scss","webpack:///src/app/components/inventories-button.component/inventories-button.component.scss","webpack:///src/app/components/inventories.component/inventories.component.scss","webpack:///src/app/app.component.html","webpack:///src/app/components/counter-button.component/counter-button.component.html","webpack:///src/app/components/counter.component/counter.component.html","webpack:///src/app/components/inventories-button.component/inventories-button.component.html","webpack:///src/app/components/inventories.component/inventories.component.html"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AppComponent","Component","selector","template","AppModule","NgModule","declarations","CounterButtonComponent","CounterComponent","InventoriesButtonComponent","InventoriesComponent","imports","BrowserModule","FormsModule","NgbModule","HttpClientModule","NgxStateStoreModule","storeName","log","environment","timekeeping","initialState","AppInitialState","providers","ActionFactory","InventoryConnector","bootstrap","store","factory","dispatch","incrementCounter","Store","counter$","select","changes","addedEntries","removedEntries","inventories","oldInventories","newInventories","calcDiff","length","pipe","skip","subscribe","console","source","target","filter","t","find","s","showLoadIndicator","LoadIndicator","mergeMap","loadInventories","catchError","error","of","state","lastDownloadAt","LastDownloadAt","hideLoadIndicator","map","join","loading$","indicators","i","http","get","delay","splice","getRandomInt","max","Math","floor","random","HttpClient","Injectable","inventoryConnector","IncrementCounterAction","identifier","DEFAULT","ShowLoadingIndicatorAction","HideLoadingIndicatorAction","LoadInventoriesAction","ActionIds","stateContext","getState","ShowLoadingIndicator","index","indexOf","newState","getEmptyState","slice","patchState","Action","newValue","Counter","loadInventory","tap","Inventories","Date","toISOString","push","production","enableProdMode","platformBrowserDynamic","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment';\r\nimport { AppInitialState } from './services/state-store/app-initial-state';\r\nimport { CounterButtonComponent } from './components/counter-button.component/counter-button.component';\r\nimport { CounterComponent } from './components/counter.component/counter.component';\r\nimport { ActionFactory } from './services/state-store/action-factory';\r\nimport { InventoryConnector } from './services/connectors/inventory.connector';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InventoriesButtonComponent } from './components/inventories-button.component/inventories-button.component';\r\nimport { InventoriesComponent } from './components/inventories.component/inventories.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxStateStoreModule } from 'ngx-state-store';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CounterButtonComponent,\r\n    CounterComponent,\r\n    InventoriesButtonComponent,\r\n    InventoriesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    NgxStateStoreModule.forRoot({\r\n      storeName: 'store-demo',\r\n      log: environment.state.log,\r\n      timekeeping: environment.state.timekeeping,\r\n      initialState: AppInitialState\r\n    }),\r\n  ],\r\n  providers: [ActionFactory, InventoryConnector],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory } from '../../services/state-store/action-factory';\r\nimport { Store } from 'ngx-state-store';\r\n\r\n@Component({\r\n  selector: 'app-counter-button',\r\n  templateUrl: './counter-button.component.html',\r\n  styleUrls: ['./counter-button.component.scss']\r\n})\r\nexport class CounterButtonComponent {\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  incrementCounter(): void {\r\n    this.store.dispatch(this.factory.incrementCounter());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-counter',\r\n  templateUrl: './counter.component.html',\r\n  styleUrls: ['./counter.component.scss']\r\n})\r\nexport class CounterComponent implements OnInit {\r\n\r\n  counter$: Observable<number>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.counter$ = this.store.select('Counter');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory, LoadIndicator } from '../../services/state-store/action-factory';\r\nimport { catchError, mergeMap, skip } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { Inventory } from '../../models/inventory';\r\n\r\nexport interface Changes {\r\n  addedEntries: Inventory[];\r\n  removedEntries: Inventory[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inventories-button',\r\n  templateUrl: './inventories-button.component.html',\r\n  styleUrls: ['./inventories-button.component.scss']\r\n})\r\nexport class InventoriesButtonComponent implements OnInit {\r\n\r\n  lastDownloadAt: string;\r\n  changes: Changes = {addedEntries: [], removedEntries: []} as Changes;\r\n  private inventories: Inventory[] = [];\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.store.select('Inventories',\r\n      (oldInventories: Inventory[], newInventories: Inventory[]) => {\r\n        if (oldInventories === newInventories\r\n          || oldInventories && newInventories\r\n          && !this.calcDiff(oldInventories, newInventories).length\r\n          && !this.calcDiff(newInventories, oldInventories).length) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }).pipe(skip(1))\r\n      .subscribe((newInventories) => {\r\n        this.changes.addedEntries = this.calcDiff(this.inventories, newInventories);\r\n        this.changes.removedEntries = this.calcDiff(newInventories, this.inventories);\r\n        this.inventories = newInventories;\r\n        console.log('the log is present only if there are some changes');\r\n      });\r\n  }\r\n\r\n  private calcDiff(source: Inventory[], target: Inventory[]): Inventory[] {\r\n    return (target || []).filter(t => !(source || []).find(s => s.id === t.id));\r\n  }\r\n\r\n  loadInventory(): void {\r\n    this.changes.addedEntries = [];\r\n    this.changes.removedEntries = [];\r\n    this.store.dispatch(this.factory.showLoadIndicator(LoadIndicator.LOAD_INVENTORIES))\r\n      .pipe(\r\n        mergeMap(() => this.store.dispatch(this.factory.loadInventories())),\r\n        catchError(error => {\r\n          console.log(error);\r\n          return of(error);\r\n        })\r\n      ).subscribe((state: AppState) => {\r\n        this.lastDownloadAt = state.LastDownloadAt;\r\n        this.store.dispatch(this.factory.hideLoadIndicator(LoadIndicator.LOAD_INVENTORIES));\r\n      }\r\n    );\r\n  }\r\n\r\n  inventoriesToString(inventories: Inventory[]): string {\r\n    return inventories.map(e => e.id).join(', ');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { LoadIndicator } from '../../services/state-store/action-factory';\r\n\r\n@Component({\r\n  selector: 'app-inventories',\r\n  templateUrl: './inventories.component.html',\r\n  styleUrls: ['./inventories.component.scss']\r\n})\r\nexport class InventoriesComponent implements OnInit {\r\n\r\n  inventories: Inventory[];\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = this.store.select('ShowLoadingIndicator').pipe(\r\n      map(indicators => indicators.filter(i => i === LoadIndicator.LOAD_INVENTORIES).length > 0)\r\n    );\r\n    this.store.select('Inventories').subscribe(inventories => {\r\n      this.inventories = inventories;\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { delay, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class InventoryConnector {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  loadInventory(): Observable<Inventory[]> {\r\n    // delay(2000) to imitate the network throttling\r\n    return this.http.get<Inventory[]>('assets/mock-data/inventories.json').pipe(\r\n      delay(2000),\r\n      mergeMap(inventories => {\r\n        inventories.splice(this.getRandomInt(inventories.length), this.getRandomInt(2));\r\n        return of(inventories);\r\n      })\r\n    );\r\n  }\r\n\r\n  getRandomInt(max): number {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HideLoadingIndicatorAction, IncrementCounterAction, LoadInventoriesAction, ShowLoadingIndicatorAction } from './actions';\r\nimport { Action } from 'ngx-state-store';\r\nimport { InventoryConnector } from '../connectors/inventory.connector';\r\n\r\nexport enum LoadIndicator {\r\n  DEFAULT = 'DEFAULT',\r\n  LOAD_INVENTORIES = 'LOAD_INVENTORIES'\r\n}\r\n\r\n@Injectable()\r\nexport class ActionFactory {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n  }\r\n\r\n  incrementCounter(): Action {\r\n    return new IncrementCounterAction();\r\n  }\r\n\r\n  showLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new ShowLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  hideLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new HideLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  loadInventories(): Action {\r\n    return new LoadInventoriesAction(this.inventoryConnector);\r\n  }\r\n}\r\n","export enum ActionIds {\r\n\r\n  HideLoadingIndicator = '[Load] Hide Loading Indicator',\r\n  ShowLoadingIndicator = '[Load] Show Loading Indicator',\r\n\r\n  UpdateCounter = '[Common] Update counter',\r\n  LoadInventories = '[Load] Load inventories from back-end'\r\n}\r\n","import { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { Action, StateContext } from 'ngx-state-store';\r\n\r\n/**\r\n * Hide loading indicator which block the page.\r\n */\r\nexport class HideLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.HideLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    if (stateContext.getState().ShowLoadingIndicator == null) {\r\n      return;\r\n    }\r\n\r\n    const index = stateContext.getState().ShowLoadingIndicator.indexOf(this.identifier);\r\n\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n\r\n    const newState: AppState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.splice(index, 1);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\nexport class IncrementCounterAction extends Action {\r\n\r\n  constructor() {\r\n    super(ActionIds.UpdateCounter);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n    const newValue = this.getEmptyState();\r\n    newValue.Counter = stateContext.getState().Counter + 1;\r\n    stateContext.patchState(newValue);\r\n  }\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { InventoryConnector } from '../../connectors/inventory.connector';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport class LoadInventoriesAction extends Action {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n    super(ActionIds.LoadInventories);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): Observable<any> {\r\n    return this.inventoryConnector.loadInventory()\r\n      .pipe(\r\n        tap(inventories => {\r\n          const newState: AppState = this.getEmptyState();\r\n          newState.Inventories = inventories;\r\n          newState.LastDownloadAt = (new Date()).toISOString();\r\n          stateContext.patchState(newState);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\n/**\r\n * Shows loading indicator to blocks the page, so the user can not\r\n * use the ui.\r\n */\r\nexport class ShowLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.ShowLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    const newState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.push(this.identifier);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","import { AppState } from './app-state';\r\n\r\nexport const AppInitialState: AppState = {\r\n  ShowLoadingIndicator: [],\r\n  Counter: 0,\r\n  Inventories: null,\r\n  LastDownloadAt: ''\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --configuration production` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { EnvironmentSettings } from './environment-settings';\r\n\r\nexport const environment: EnvironmentSettings = {\r\n  production: false,\r\n  state: {\r\n    log: true,\r\n    timekeeping: true\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export default \".row {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdyB7XHJcbiAgbWFyZ2luLXRvcDogMXJlbTtcclxufVxyXG4iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3VudGVyLWJ1dHRvbi5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3VudGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnZlbnRvcmllcy1idXR0b24uY29tcG9uZW50LnNjc3MifQ== */\";","export default \".inventories {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  min-height: 300px;\\n  max-height: 300px;\\n  overflow: hidden;\\n}\\n\\n.load-indicator-background {\\n  background-color: #cccccc;\\n  opacity: 0.7;\\n}\\n\\n.load-indicator, .load-indicator-background, .inventories-table-container {\\n  height: 100%;\\n  width: 100%;\\n  z-index: 1;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\\n.inventories-table-container {\\n  z-index: auto;\\n  z-index: initial;\\n  overflow-x: auto;\\n  overflow-y: auto;\\n}\\n\\n.load-indicator {\\n  margin: auto;\\n  background-color: white;\\n  width: 7rem;\\n  height: 3rem;\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n}\\n\\n.load-indicator > div {\\n  margin: 0;\\n  padding: 0;\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludmVudG9yaWVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFVBQUE7RUFDQSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFBQSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSx1QkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLDZCQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFDRTtFQUNFLFNBQUE7RUFDQSxVQUFBO0VBQ0Esc0JBQUE7QUFDSiIsImZpbGUiOiJpbnZlbnRvcmllcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbnZlbnRvcmllcyB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBtaW4taGVpZ2h0OiAzMDBweDtcclxuICBtYXgtaGVpZ2h0OiAzMDBweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4ubG9hZC1pbmRpY2F0b3ItYmFja2dyb3VuZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjY2NjYztcclxuICBvcGFjaXR5OiAuNztcclxufVxyXG5cclxuLmxvYWQtaW5kaWNhdG9yLCAubG9hZC1pbmRpY2F0b3ItYmFja2dyb3VuZCwgLmludmVudG9yaWVzLXRhYmxlLWNvbnRhaW5lciB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHotaW5kZXg6ICsxO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBib3R0b206IDA7XHJcbn1cclxuXHJcbi5pbnZlbnRvcmllcy10YWJsZS1jb250YWluZXIge1xyXG4gIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgb3ZlcmZsb3cteDogYXV0bztcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG59XHJcblxyXG4ubG9hZC1pbmRpY2F0b3Ige1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICB3aWR0aDogN3JlbTtcclxuICBoZWlnaHQ6IDNyZW07XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICA+IGRpdiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ== */\";","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <h3>Usage example of the ngx-state-store module</h3>\\r\\n      The complete module documentation is available at <a\\r\\n      href=\\\"https://it-and-services.github.io/state-store/\\\"\\r\\n      target=\\\"_blank\\\">https://it-and-services.github.io/state-store/</a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/counter-button.component/counter-button.component.ts</li>\\r\\n        <li>src/app/components/counter.component/counter.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter-button></app-counter-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter></app-counter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/inventories-button.component/inventories-button.component.ts</li>\\r\\n        <li>src/app/components/inventories.component/inventories.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories-button></app-inventories-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories></app-inventories>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<button class=\\\"btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment Counter</button>\\r\\n\";","export default \"<div class=\\\"alert alert-primary\\\" role=\\\"alert\\\">\\r\\n  current counter {{counter$ | async}}\\r\\n</div>\\r\\n\";","export default \"<button (click)=\\\"loadInventory()\\\" class=\\\"btn-primary\\\">Load Inventory</button>\\r\\n<p>Last download at: {{lastDownloadAt}}</p>\\r\\n<p *ngIf=\\\"changes.addedEntries.length\\\">\\r\\n  {{changes.addedEntries.length}} new {{changes.addedEntries.length > 1 ? 'entries' : 'entry'}}:\\r\\n  {{inventoriesToString(changes.addedEntries)}}</p>\\r\\n<p *ngIf=\\\"changes.removedEntries.length\\\">\\r\\n  {{changes.removedEntries.length}} {{changes.removedEntries.length > 1 ? 'entries' : 'entry'}} removed:\\r\\n  {{inventoriesToString(changes.removedEntries)}}</p>\\r\\n\";","export default \"<div class=\\\"inventories\\\">\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator-background\\\"></div>\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator\\\">\\r\\n    <div>Loading ...</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"inventories-table-container\\\">\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">#</th>\\r\\n        <th scope=\\\"col\\\">ID</th>\\r\\n        <th scope=\\\"col\\\">Version</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let inventory of inventories; let i=index\\\">\\r\\n        <th scope=\\\"row\\\">{{i}}</th>\\r\\n        <td>{{inventory.id}}</td>\\r\\n        <td>{{inventory.version}}</td>\\r\\n        <td>{{inventory.name}}</td>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\";"]}