{"version":3,"sources":["webpack:///src/app/services/connectors/inventory.connector.ts","webpack:///src/app/components/counter-button.component/counter-button.component.ts","webpack:///src/app/components/counter.component/counter.component.scss","webpack:///src/app/components/inventories-button.component/inventories-button.component.html","webpack:///src/app/app.component.css","webpack:///src/environments/environment.ts","webpack:///src/app/components/inventories-button.component/inventories-button.component.ts","webpack:///src/app/components/inventories.component/inventories.component.scss","webpack:///src/app/services/state-store/app-initial-state.ts","webpack:///src/app/services/state-store/action-ids.ts","webpack:///src/app/services/state-store/actions/show-loading-indicator.action.ts","webpack:///src/app/components/counter-button.component/counter-button.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/components/counter.component/counter.component.html","webpack:///src/app/app.component.html","webpack:///dist/ngx-state-store/__ivy_ngcc__/fesm2015/ngx-state-store.js","webpack:///src/app/app.module.ts","webpack:///src/app/components/counter-button.component/counter-button.component.html","webpack:///src/app/components/inventories.component/inventories.component.html","webpack:///src/app/services/state-store/action-factory.ts","webpack:///src/app/components/inventories-button.component/inventories-button.component.scss","webpack:///src/app/services/state-store/actions/increment-counter.action.ts","webpack:///src/app/components/counter.component/counter.component.ts","webpack:///src/app/services/state-store/actions/hide-loading-indicator.action.ts","webpack:///src/app/services/state-store/actions/load-inventories.action.ts","webpack:///src/app/components/inventories.component/inventories.component.ts","webpack:///src/app/services/state-store/actions/index.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["InventoryConnector","http","get","pipe","inventories","splice","getRandomInt","length","max","Math","floor","random","CounterButtonComponent","store","factory","dispatch","incrementCounter","selector","template","environment","production","state","log","timekeeping","InventoriesButtonComponent","changes","addedEntries","removedEntries","select","oldInventories","newInventories","calcDiff","subscribe","console","source","target","filter","t","find","s","id","showLoadIndicator","LOAD_INVENTORIES","loadInventories","error","lastDownloadAt","LastDownloadAt","hideLoadIndicator","map","e","join","AppInitialState","ShowLoadingIndicator","Counter","Inventories","ActionIds","ShowLoadingIndicatorAction","identifier","stateContext","newState","getEmptyState","getState","slice","push","patchState","AppComponent","StateHelper","o","Object","freeze","oIsFunction","hasOwnProp","prototype","hasOwnProperty","getOwnPropertyNames","forEach","prop","call","isFrozen","deepFreeze","cloneFunctions","cloneObjectIntern","undefined","parent","Array","isArray","element","index","isValidDate","Date","toISOString","assign","functionType","bind","create","newValue","getEmptyObject","date","toString","isNaN","StorePlugin","storageName","namespace","prepareWindowObject","storeName","window","ActionToState","LogSettings","StoreLogPlugin","limit","actionEnd","stateLog","executedStack","actionId","order","loggingDisabled","restrict","message","logAction","arr","STATE_CONFIG","PerformanceSettings","ActionTime","StorePerformancePlugin","performanceLog","settings","performance","time","now","Store","config","actionCounter","plugins","currentState","initialState","stateStream","action","currentCounter","dispatchBefore","actionResult$","handleState","getStateContext","dispatchAfter","result","setTimeout","next","complete","errorState","getErrorState","asObservable","objectComparator","setState","updateState","partOfState","isPrimitive","Error","combine","dispatchState","plugin","Type","ɵfac","Store_Factory","ɵprov","token","ctorParameters","type","decorators","args","Action","cloneObject","NgxStateStoreModule","ngModule","providers","provide","useValue","ɵmod","ɵinj","NgxStateStoreModule_Factory","imports","ngJitMode","declarations","exports","AppModule","forRoot","bootstrap","LoadIndicator","ActionFactory","inventoryConnector","DEFAULT","IncrementCounterAction","UpdateCounter","CounterComponent","counter$","HideLoadingIndicatorAction","HideLoadingIndicator","indexOf","LoadInventoriesAction","LoadInventories","loadInventory","InventoriesComponent","loading$","indicators","i","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { delay, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class InventoryConnector {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  loadInventory(): Observable<Inventory[]> {\r\n    // delay(2000) to imitate the network throttling\r\n    return this.http.get<Inventory[]>('assets/mock-data/inventories.json').pipe(\r\n      delay(2000),\r\n      mergeMap(inventories => {\r\n        inventories.splice(this.getRandomInt(inventories.length), this.getRandomInt(2));\r\n        return of(inventories);\r\n      })\r\n    );\r\n  }\r\n\r\n  getRandomInt(max): number {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory } from '../../services/state-store/action-factory';\r\nimport { Store } from 'ngx-state-store';\r\n\r\n@Component({\r\n  selector: 'app-counter-button',\r\n  templateUrl: './counter-button.component.html',\r\n  styleUrls: ['./counter-button.component.scss']\r\n})\r\nexport class CounterButtonComponent {\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.store.dispatch(this.factory.incrementCounter());\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY291bnRlci5jb21wb25lbnQvY291bnRlci5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<button (click)=\\\"loadInventory()\\\" class=\\\"btn-primary\\\">Load Inventory</button>\\r\\n<p>Last download at: {{lastDownloadAt}}</p>\\r\\n<p *ngIf=\\\"changes.addedEntries.length\\\">\\r\\n  {{changes.addedEntries.length}} new {{changes.addedEntries.length > 1 ? 'entries' : 'entry'}}:\\r\\n  {{inventoriesToString(changes.addedEntries)}}</p>\\r\\n<p *ngIf=\\\"changes.removedEntries.length\\\">\\r\\n  {{changes.removedEntries.length}} {{changes.removedEntries.length > 1 ? 'entries' : 'entry'}} removed:\\r\\n  {{inventoriesToString(changes.removedEntries)}}</p>\\r\\n\";","export default \".row {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3cge1xyXG4gIG1hcmdpbi10b3A6IDFyZW07XHJcbn1cclxuIl19 */\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { EnvironmentSettings } from './environment-settings';\r\n\r\nexport const environment: EnvironmentSettings = {\r\n  production: false,\r\n  state: {\r\n    log: true,\r\n    timekeeping: true\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory, LoadIndicator } from '../../services/state-store/action-factory';\r\nimport { catchError, mergeMap, skip } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { Inventory } from '../../models/inventory';\r\n\r\nexport interface Changes {\r\n  addedEntries: Inventory[];\r\n  removedEntries: Inventory[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inventories-button',\r\n  templateUrl: './inventories-button.component.html',\r\n  styleUrls: ['./inventories-button.component.scss']\r\n})\r\nexport class InventoriesButtonComponent implements OnInit {\r\n\r\n  lastDownloadAt: string;\r\n  changes: Changes = {addedEntries: [], removedEntries: []} as Changes;\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.store.select('Inventories',\r\n      (oldInventories: Inventory[], newInventories: Inventory[]) => {\r\n        if (oldInventories === newInventories\r\n          || oldInventories && newInventories\r\n          && !this.calcDiff(oldInventories, newInventories).length\r\n          && !this.calcDiff(newInventories, oldInventories).length) {\r\n          return true;\r\n        }\r\n        this.changes.addedEntries = this.calcDiff(oldInventories, newInventories);\r\n        this.changes.removedEntries = this.calcDiff(newInventories, oldInventories);\r\n        return false;\r\n      }).pipe(skip(1))\r\n      .subscribe(() => {\r\n        console.log('the log is present only if there are some changes');\r\n      });\r\n  }\r\n\r\n  private calcDiff(source: Inventory[], target: Inventory[]): Inventory[] {\r\n    return (target || []).filter(t => !(source || []).find(s => s.id === t.id));\r\n  }\r\n\r\n  loadInventory() {\r\n    this.changes.addedEntries = [];\r\n    this.changes.removedEntries = [];\r\n    this.store.dispatch(this.factory.showLoadIndicator(LoadIndicator.LOAD_INVENTORIES))\r\n      .pipe(\r\n        mergeMap(() => this.store.dispatch(this.factory.loadInventories())),\r\n        catchError(error => {\r\n          console.log(error);\r\n          return of(error);\r\n        })\r\n      ).subscribe((state: AppState) => {\r\n        this.lastDownloadAt = state.LastDownloadAt;\r\n        this.store.dispatch(this.factory.hideLoadIndicator(LoadIndicator.LOAD_INVENTORIES));\r\n      }\r\n    );\r\n  }\r\n\r\n  inventoriesToString(inventories: Inventory[]): string {\r\n    return inventories.map(e => e.id).join(', ');\r\n  }\r\n}\r\n","export default \".inventories {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  min-height: 300px;\\n  max-height: 300px;\\n  overflow: hidden;\\n}\\n\\n.load-indicator-background {\\n  background-color: #cccccc;\\n  opacity: .7;\\n}\\n\\n.load-indicator, .load-indicator-background, .inventories-table-container {\\n  height: 100%;\\n  width: 100%;\\n  z-index: +1;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\\n.inventories-table-container {\\n  z-index: initial;\\n  overflow-x: auto;\\n  overflow-y: auto;\\n}\\n\\n.load-indicator {\\n  margin: auto;\\n  background-color: white;\\n  width: 7rem;\\n  height: 3rem;\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n}\\n\\n.load-indicator > div {\\n  margin: 0;\\n  padding: 0;\\n  vertical-align: middle;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9pbnZlbnRvcmllcy5jb21wb25lbnQvaW52ZW50b3JpZXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0VBQ1osV0FBVztFQUNYLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxRQUFRO0VBQ1IsU0FBUztBQUNYOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osdUJBQXVCO0VBQ3ZCLFdBQVc7RUFDWCxZQUFZO0VBQ1osYUFBYTtFQUNiLDZCQUE2QjtFQUM3QixtQkFBbUI7QUFDckI7O0FBUkE7RUFVSSxTQUFTO0VBQ1QsVUFBVTtFQUNWLHNCQUFzQjtBQUUxQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW52ZW50b3JpZXMuY29tcG9uZW50L2ludmVudG9yaWVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmludmVudG9yaWVzIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIG1pbi1oZWlnaHQ6IDMwMHB4O1xyXG4gIG1heC1oZWlnaHQ6IDMwMHB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi5sb2FkLWluZGljYXRvci1iYWNrZ3JvdW5kIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NjY2NjO1xyXG4gIG9wYWNpdHk6IC43O1xyXG59XHJcblxyXG4ubG9hZC1pbmRpY2F0b3IsIC5sb2FkLWluZGljYXRvci1iYWNrZ3JvdW5kLCAuaW52ZW50b3JpZXMtdGFibGUtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgei1pbmRleDogKzE7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHJpZ2h0OiAwO1xyXG4gIGJvdHRvbTogMDtcclxufVxyXG5cclxuLmludmVudG9yaWVzLXRhYmxlLWNvbnRhaW5lciB7XHJcbiAgei1pbmRleDogaW5pdGlhbDtcclxuICBvdmVyZmxvdy14OiBhdXRvO1xyXG4gIG92ZXJmbG93LXk6IGF1dG87XHJcbn1cclxuXHJcbi5sb2FkLWluZGljYXRvciB7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIHdpZHRoOiA3cmVtO1xyXG4gIGhlaWdodDogM3JlbTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gID4gZGl2IHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIH1cclxufVxyXG5cclxuIl19 */\";","import { AppState } from './app-state';\r\n\r\nexport const AppInitialState: AppState = {\r\n  ShowLoadingIndicator: [],\r\n  Counter: 0,\r\n  Inventories: null,\r\n  LastDownloadAt: ''\r\n};\r\n","export enum ActionIds {\r\n\r\n  HideLoadingIndicator = '[Load] Hide Loading Indicator',\r\n  ShowLoadingIndicator = '[Load] Show Loading Indicator',\r\n\r\n  UpdateCounter = '[Common] Update counter',\r\n  LoadInventories = '[Load] Load inventories from back-end'\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\n/**\r\n * Shows loading indicator to blocks the page, so the user can not\r\n * use the ui.\r\n */\r\nexport class ShowLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.ShowLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    const newState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.push(this.identifier);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY291bnRlci1idXR0b24uY29tcG9uZW50L2NvdW50ZXItYnV0dG9uLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","export default \"<div class=\\\"alert alert-primary\\\" role=\\\"alert\\\">\\r\\n  current counter {{counter$ | async}}\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <h3>Usage example of the ngx-state-store module</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/counter-button.component/counter-button.component.ts</li>\\r\\n        <li>src/app/components/counter.component/counter.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter-button></app-counter-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter></app-counter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/inventories-button.component/inventories-button.component.ts</li>\\r\\n        <li>src/app/components/inventories.component/inventories.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories-button></app-inventories-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories></app-inventories>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { InjectionToken, Injectable, Inject, NgModule } from '@angular/core';\nimport { take, pluck, distinctUntilChanged } from 'rxjs/operators';\nimport { BehaviorSubject, throwError, Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/state-helper.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nclass StateHelper {\r\n    /**\r\n     * Makes a shadow freeze\r\n     *\r\n     * @template T\r\n     * @param {?} o object to freeze\r\n     * @return {?}\r\n     */\r\n    static deepFreeze(o) {\r\n        Object.freeze(o);\r\n        /** @type {?} */\r\n        const oIsFunction = typeof o === 'function';\r\n        /** @type {?} */\r\n        const hasOwnProp = Object.prototype.hasOwnProperty;\r\n        Object.getOwnPropertyNames(o).forEach((/**\r\n         * @param {?} prop\r\n         * @return {?}\r\n         */\r\n        (prop) => {\r\n            if (hasOwnProp.call(o, prop) &&\r\n                (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)\r\n                && o[prop] !== null\r\n                && (typeof o[prop] === 'object' || typeof o[prop] === 'function')\r\n                && !Object.isFrozen(o[prop])) {\r\n                StateHelper.deepFreeze(o[prop]);\r\n            }\r\n        }));\r\n        return o;\r\n    }\r\n    /**\r\n     * The method returns the clone of the object. Useful to clone frozen object.\r\n     *\r\n     * @template T\r\n     * @param {?} o object to clone\r\n     * @param {?=} cloneFunctions determines whether the functions must be also cloned, default value 'true'\r\n     * @return {?}\r\n     */\r\n    static cloneObject(o, cloneFunctions = true) {\r\n        return StateHelper.cloneObjectIntern(o, undefined, cloneFunctions);\r\n    }\r\n    /**\r\n     * The method returns the clone of the object. Useful to clone frozen object.\r\n     *\r\n     * @private\r\n     * @template T\r\n     * @param {?} o object to clone\r\n     * @param {?=} parent owner object of the object to clone, it is used for the functions cloning\r\n     * @param {?=} cloneFunctions determines whether the functions must be also cloned, default value 'true'\r\n     * @return {?}\r\n     */\r\n    static cloneObjectIntern(o, parent, cloneFunctions) {\r\n        /** @type {?} */\r\n        let target;\r\n        if (o) {\r\n            if (typeof o === 'object') {\r\n                if (Array.isArray(o)) {\r\n                    target = ((/** @type {?} */ (o))).slice();\r\n                    ((/** @type {?} */ (o))).forEach((/**\r\n                     * @param {?} element\r\n                     * @param {?} index\r\n                     * @return {?}\r\n                     */\r\n                    (element, index) => {\r\n                        ((/** @type {?} */ (target)))[index] = StateHelper.cloneObjectIntern(element, o, cloneFunctions);\r\n                    }));\r\n                }\r\n                else if (StateHelper.isValidDate(o)) {\r\n                    target = new Date(((/** @type {?} */ (((/** @type {?} */ (o)))))).toISOString());\r\n                }\r\n                else {\r\n                    target = Object.assign({}, o);\r\n                    Object.getOwnPropertyNames(o).forEach((/**\r\n                     * @param {?} prop\r\n                     * @return {?}\r\n                     */\r\n                    (prop) => {\r\n                        /** @type {?} */\r\n                        const functionType = (typeof o[prop] === 'function');\r\n                        if (cloneFunctions && functionType || !functionType) {\r\n                            target[prop] = StateHelper.cloneObjectIntern(target[prop], target, cloneFunctions);\r\n                        }\r\n                        else {\r\n                            delete target[prop];\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n            else if (typeof o === 'function') {\r\n                if (cloneFunctions) {\r\n                    target = o.bind(parent || {});\r\n                    Object.getOwnPropertyNames(o).forEach((/**\r\n                     * @param {?} prop\r\n                     * @return {?}\r\n                     */\r\n                    (prop) => {\r\n                        if (prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' && prop !== 'length' && prop !== 'name') {\r\n                            target[prop] = StateHelper.cloneObjectIntern(target[prop], target, cloneFunctions);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n            else {\r\n                target = o;\r\n            }\r\n        }\r\n        else {\r\n            target = o;\r\n        }\r\n        return target;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    static getEmptyObject() {\r\n        return Object.create(null);\r\n    }\r\n    /**\r\n     * @template S\r\n     * @param {?} state\r\n     * @param {?} newValue\r\n     * @return {?}\r\n     */\r\n    static combine(state, newValue) {\r\n        return Object.assign(StateHelper.getEmptyObject(), state, newValue);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    static isValidDate(date) {\r\n        return date && date instanceof Date && Object.prototype.toString.call(date) === '[object Date]' && !isNaN((/** @type {?} */ (date)));\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/store-plugin.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n */\r\nclass StorePlugin {\r\n    /**\r\n     * @protected\r\n     * @param {?} storageName\r\n     */\r\n    constructor(storageName) {\r\n        this.storageName = storageName;\r\n        this.namespace = 'ngx-state-store';\r\n        this.prepareWindowObject(storageName);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get state() {\r\n        return window[this.namespace][this.storageName].state;\r\n    }\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {?} storeName e.g. 'store-demo'\r\n     * @return {?}\r\n     */\r\n    prepareWindowObject(storeName) {\r\n        if (!window[this.namespace]) {\r\n            window[this.namespace] = StateHelper.getEmptyObject();\r\n        }\r\n        if (!window[this.namespace][storeName]) {\r\n            window[this.namespace][storeName] = StateHelper.getEmptyObject();\r\n        }\r\n        if (!window[this.namespace][storeName].state) {\r\n            window[this.namespace][storeName].state = StateHelper.getEmptyObject();\r\n        }\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StorePlugin.prototype.namespace;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StorePlugin.prototype.storageName;\r\n    /**\r\n     * @abstract\r\n     * @param {?} actionId\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    StorePlugin.prototype.dispatchBefore = function (actionId, state, order) { };\r\n    /**\r\n     * @abstract\r\n     * @param {?} actionId\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    StorePlugin.prototype.dispatchAfter = function (actionId, state, order) { };\r\n    /**\r\n     * @abstract\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    StorePlugin.prototype.newState = function (state) { };\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/store-log-plugin.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @record\r\n */\r\nfunction ActionToState() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ActionToState.prototype.actionId;\r\n    /** @type {?} */\r\n    ActionToState.prototype.state;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction LogSettings() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    LogSettings.prototype.executedStack;\r\n    /** @type {?} */\r\n    LogSettings.prototype.limit;\r\n    /** @type {?} */\r\n    LogSettings.prototype.log;\r\n}\r\nclass StoreLogPlugin extends StorePlugin {\r\n    /**\r\n     * @param {?} storeName\r\n     * @param {?=} log\r\n     * @param {?=} limit\r\n     */\r\n    constructor(storeName, log = false, limit = 0) {\r\n        super(storeName);\r\n        this.actionEnd = 'Action end:   ';\r\n        this.stateLog = StateHelper.getEmptyObject();\r\n        this.stateLog.executedStack = [];\r\n        this.stateLog.limit = limit;\r\n        this.stateLog.log = log;\r\n        this.state.log = this.stateLog;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    get loggingDisabled() {\r\n        return !this.state.log.log;\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} message\r\n     * @param {?=} state\r\n     * @return {?}\r\n     */\r\n    static logAction(message, state) {\r\n        console.log(message, state);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} arr\r\n     * @param {?} limit\r\n     * @return {?}\r\n     */\r\n    static restrict(arr, limit) {\r\n        if (arr.length > limit) {\r\n            arr.splice(0, 1);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    dispatchBefore() {\r\n    }\r\n    /**\r\n     * @param {?} actionId\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    dispatchAfter(actionId, state, order) {\r\n        if (this.loggingDisabled) {\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const log = {\r\n            actionId,\r\n            state\r\n        };\r\n        this.stateLog.executedStack.push(log);\r\n        StoreLogPlugin.restrict(this.stateLog.executedStack, this.stateLog.limit);\r\n        /** @type {?} */\r\n        const message = this.actionEnd + actionId;\r\n        StoreLogPlugin.logAction(order + '. ' + message, state);\r\n        StoreLogPlugin.logAction('', '');\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    newState() {\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StoreLogPlugin.prototype.actionEnd;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StoreLogPlugin.prototype.stateLog;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/state-config.token.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst STATE_CONFIG = new InjectionToken('STATE_CONFIG');\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/store-performance-plugin.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Measure time of action execution.\r\n * @record\r\n */\r\nfunction PerformanceSettings() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    PerformanceSettings.prototype.timekeeping;\r\n    /** @type {?} */\r\n    PerformanceSettings.prototype.performanceLog;\r\n}\r\n/**\r\n * @record\r\n */\r\nfunction ActionTime() { }\r\nif (false) {\r\n    /** @type {?} */\r\n    ActionTime.prototype.id;\r\n    /** @type {?} */\r\n    ActionTime.prototype.time;\r\n}\r\nclass StorePerformancePlugin extends StorePlugin {\r\n    /**\r\n     * @param {?} storeName\r\n     * @param {?=} log\r\n     */\r\n    constructor(storeName, log = false) {\r\n        super(storeName);\r\n        this.performanceLog = [];\r\n        this.settings = {\r\n            timekeeping: log,\r\n            performanceLog: this.performanceLog\r\n        };\r\n        this.state.performance = this.settings;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    get timekeeping() {\r\n        return this.state.performance.timekeeping;\r\n    }\r\n    /**\r\n     * @param {?} actionId\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    dispatchBefore(actionId, state, order) {\r\n        if (!this.timekeeping) {\r\n            return;\r\n        }\r\n        this.performanceLog[order] = {\r\n            id: actionId,\r\n            time: performance.now()\r\n        };\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    newState() {\r\n    }\r\n    /**\r\n     * @param {?} actionId\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    dispatchAfter(actionId, state, order) {\r\n        if (!this.timekeeping) {\r\n            return;\r\n        }\r\n        this.performanceLog[order].time = performance.now() - this.performanceLog[order].time;\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StorePerformancePlugin.prototype.settings;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    StorePerformancePlugin.prototype.performanceLog;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/store.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @template S\r\n */\r\nclass Store {\r\n    /**\r\n     * @param {?} config\r\n     */\r\n    constructor(config) {\r\n        this.config = config;\r\n        this.actionCounter = 0;\r\n        this.plugins = [];\r\n        this.plugins.push(new StoreLogPlugin(this.config.storeName, this.config.log));\r\n        this.plugins.push(new StorePerformancePlugin(this.config.storeName, this.config.timekeeping));\r\n        this.currentState = config.initialState || {};\r\n        this.stateStream = new BehaviorSubject(this.currentState);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} action\r\n     * @param {?} error\r\n     * @return {?}\r\n     */\r\n    static getErrorState(action, error) {\r\n        /** @type {?} */\r\n        const state = StateHelper.getEmptyObject();\r\n        state.error = error;\r\n        state.action = action.Type;\r\n        return state;\r\n    }\r\n    /**\r\n     * @param {?} action\r\n     * @return {?}\r\n     */\r\n    dispatch(action) {\r\n        /** @type {?} */\r\n        const currentCounter = ++this.actionCounter;\r\n        this.dispatchBefore(action, this.currentState, currentCounter);\r\n        /** @type {?} */\r\n        let actionResult$;\r\n        try {\r\n            actionResult$ = action.handleState(this.getStateContext());\r\n        }\r\n        catch (error) {\r\n            this.dispatchAfter(action, this.currentState, currentCounter);\r\n            console.error(error);\r\n            return throwError(error);\r\n        }\r\n        /** @type {?} */\r\n        const result = new Subject();\r\n        // Otherwise it will run sync.\r\n        // And the result observable is\r\n        // complete before return statement.\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            if (actionResult$ == null) {\r\n                this.dispatchAfter(action, this.currentState, currentCounter);\r\n                result.next(this.currentState);\r\n                result.complete();\r\n            }\r\n            else {\r\n                ((/** @type {?} */ (actionResult$)))\r\n                    .pipe(take(1)).subscribe((/**\r\n                 * @return {?}\r\n                 */\r\n                () => {\r\n                    this.dispatchAfter(action, this.currentState, currentCounter);\r\n                    result.next(this.currentState);\r\n                    result.complete();\r\n                }), (/**\r\n                 * @param {?} error\r\n                 * @return {?}\r\n                 */\r\n                (error) => {\r\n                    /** @type {?} */\r\n                    const errorState = Store.getErrorState(action, error);\r\n                    this.dispatchAfter(action, errorState, currentCounter);\r\n                    console.error(error);\r\n                    result.error(error);\r\n                }));\r\n            }\r\n        }));\r\n        return result.asObservable();\r\n    }\r\n    /**\r\n     * @template keyString\r\n     * @param {?} prop\r\n     * @param {?=} objectComparator\r\n     * @return {?}\r\n     */\r\n    select(prop, objectComparator) {\r\n        if (objectComparator) {\r\n            return this.stateStream.pipe(pluck((/** @type {?} */ (prop))), distinctUntilChanged(objectComparator));\r\n        }\r\n        return this.stateStream.pipe(pluck((/** @type {?} */ (prop))), distinctUntilChanged());\r\n    }\r\n    /**\r\n     * The Observable is complete after forward one value.\r\n     *\r\n     * @template keyString\r\n     * @param {?} prop property to select\r\n     * @return {?}\r\n     */\r\n    selectOnce(prop) {\r\n        return this.select(prop).pipe(take(1));\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    getStateContext() {\r\n        return {\r\n            getState: (/**\r\n             * @return {?}\r\n             */\r\n            () => this.currentState),\r\n            setState: (/**\r\n             * @param {?} state\r\n             * @return {?}\r\n             */\r\n            (state) => {\r\n                this.updateState(state);\r\n            }),\r\n            patchState: (/**\r\n             * @param {?} partOfState\r\n             * @return {?}\r\n             */\r\n            (partOfState) => {\r\n                /** @type {?} */\r\n                const isArray = Array.isArray(partOfState);\r\n                /** @type {?} */\r\n                const isPrimitive = typeof partOfState !== 'object';\r\n                if (isArray) {\r\n                    throw new Error('Patching arrays is not supported.');\r\n                }\r\n                else if (isPrimitive) {\r\n                    throw new Error('Patching primitives is not supported.');\r\n                }\r\n                /** @type {?} */\r\n                const newState = StateHelper.combine(this.currentState, partOfState);\r\n                this.updateState(newState);\r\n            })\r\n        };\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    updateState(state) {\r\n        this.currentState = StateHelper.deepFreeze(state);\r\n        this.dispatchState(this.currentState);\r\n        // next-sync. Otherwise the state change will trigger all other changes.\r\n        setTimeout((/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this.stateStream.next(this.currentState);\r\n        }), 0);\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} action\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    dispatchBefore(action, state, order) {\r\n        this.plugins.forEach((/**\r\n         * @param {?} plugin\r\n         * @return {?}\r\n         */\r\n        (plugin) => {\r\n            plugin.dispatchBefore(action.Type, state, order);\r\n        }));\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} action\r\n     * @param {?} state\r\n     * @param {?} order\r\n     * @return {?}\r\n     */\r\n    dispatchAfter(action, state, order) {\r\n        this.plugins.forEach((/**\r\n         * @param {?} plugin\r\n         * @return {?}\r\n         */\r\n        (plugin) => {\r\n            plugin.dispatchAfter(action.Type, state, order);\r\n        }));\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} state\r\n     * @return {?}\r\n     */\r\n    dispatchState(state) {\r\n        this.plugins.forEach((/**\r\n         * @param {?} plugin\r\n         * @return {?}\r\n         */\r\n        (plugin) => {\r\n            plugin.newState(state);\r\n        }));\r\n    }\r\n}\nStore.ɵfac = function Store_Factory(t) { return new (t || Store)(ɵngcc0.ɵɵinject(STATE_CONFIG)); };\nStore.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Store, factory: Store.ɵfac });\r\n/** @nocollapse */\r\nStore.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [STATE_CONFIG,] }] }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Store, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [STATE_CONFIG]\n            }] }]; }, null); })();\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Store.prototype.actionCounter;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Store.prototype.plugins;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Store.prototype.currentState;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Store.prototype.stateStream;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Store.prototype.config;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/state/action.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * @abstract\r\n */\r\nclass Action {\r\n    /**\r\n     * @protected\r\n     * @param {?} actionId\r\n     */\r\n    constructor(actionId) {\r\n        this.actionId = actionId;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get Type() {\r\n        return this.actionId;\r\n    }\r\n    /**\r\n     * @protected\r\n     * @template T\r\n     * @param {?} o\r\n     * @param {?=} cloneFunctions\r\n     * @return {?}\r\n     */\r\n    clone(o, cloneFunctions = true) {\r\n        return StateHelper.cloneObject(o, cloneFunctions);\r\n    }\r\n    /**\r\n     * @protected\r\n     * @return {?}\r\n     */\r\n    getEmptyState() {\r\n        return StateHelper.getEmptyObject();\r\n    }\r\n    /**\r\n     * @protected\r\n     * @template T\r\n     * @return {?}\r\n     */\r\n    getEmptyObject() {\r\n        return StateHelper.getEmptyObject();\r\n    }\r\n    /**\r\n     * @protected\r\n     * @template S\r\n     * @param {?} state\r\n     * @param {?} newValue\r\n     * @return {?}\r\n     */\r\n    combine(state, newValue) {\r\n        return StateHelper.combine(state, newValue);\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    Action.prototype.actionId;\r\n    /**\r\n     * @abstract\r\n     * @param {?} stateContext\r\n     * @return {?}\r\n     */\r\n    Action.prototype.handleState = function (stateContext) { };\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ngx-state-store.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxStateStoreModule {\r\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    static forRoot(config) {\r\n        return {\r\n            ngModule: NgxStateStoreModule,\r\n            providers: [\r\n                Store,\r\n                { provide: STATE_CONFIG, useValue: config }\r\n            ]\r\n        };\r\n    }\r\n}\nNgxStateStoreModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxStateStoreModule });\nNgxStateStoreModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxStateStoreModule_Factory(t) { return new (t || NgxStateStoreModule)(); }, imports: [[\n            CommonModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxStateStoreModule, { imports: function () { return [CommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxStateStoreModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [],\n                imports: [\n                    CommonModule\n                ],\n                exports: []\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public-api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngx-state-store.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { Action, NgxStateStoreModule, StateHelper, Store, STATE_CONFIG as ɵa };\n\n//# sourceMappingURL=ngx-state-store.js.map","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment';\r\nimport { AppInitialState } from './services/state-store/app-initial-state';\r\nimport { CounterButtonComponent } from './components/counter-button.component/counter-button.component';\r\nimport { CounterComponent } from './components/counter.component/counter.component';\r\nimport { ActionFactory } from './services/state-store/action-factory';\r\nimport { InventoryConnector } from './services/connectors/inventory.connector';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InventoriesButtonComponent } from './components/inventories-button.component/inventories-button.component';\r\nimport { InventoriesComponent } from './components/inventories.component/inventories.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxStateStoreModule } from 'ngx-state-store';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CounterButtonComponent,\r\n    CounterComponent,\r\n    InventoriesButtonComponent,\r\n    InventoriesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    NgxStateStoreModule.forRoot({\r\n      storeName: 'store-demo',\r\n      log: environment.state.log,\r\n      timekeeping: environment.state.timekeeping,\r\n      initialState: AppInitialState\r\n    }),\r\n  ],\r\n  providers: [ActionFactory, InventoryConnector],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export default \"<button class=\\\"btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment Counter</button>\\r\\n\";","export default \"<div class=\\\"inventories\\\">\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator-background\\\"></div>\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator\\\">\\r\\n    <div>Loading ...</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"inventories-table-container\\\">\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">#</th>\\r\\n        <th scope=\\\"col\\\">ID</th>\\r\\n        <th scope=\\\"col\\\">Version</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let inventory of inventories; let i=index\\\">\\r\\n        <th scope=\\\"row\\\">{{i}}</th>\\r\\n        <td>{{inventory.id}}</td>\\r\\n        <td>{{inventory.version}}</td>\\r\\n        <td>{{inventory.name}}</td>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HideLoadingIndicatorAction, IncrementCounterAction, LoadInventoriesAction, ShowLoadingIndicatorAction } from './actions';\r\nimport { Action } from 'ngx-state-store';\r\nimport { InventoryConnector } from '../connectors/inventory.connector';\r\n\r\nexport enum LoadIndicator {\r\n  DEFAULT = 'DEFAULT',\r\n  LOAD_INVENTORIES = 'LOAD_INVENTORIES'\r\n}\r\n\r\n@Injectable()\r\nexport class ActionFactory {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n  }\r\n\r\n  incrementCounter(): Action {\r\n    return new IncrementCounterAction();\r\n  }\r\n\r\n  showLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new ShowLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  hideLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new HideLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  loadInventories(): Action {\r\n    return new LoadInventoriesAction(this.inventoryConnector);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW52ZW50b3JpZXMtYnV0dG9uLmNvbXBvbmVudC9pbnZlbnRvcmllcy1idXR0b24uY29tcG9uZW50LnNjc3MifQ== */\";","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\nexport class IncrementCounterAction extends Action {\r\n\r\n  constructor() {\r\n    super(ActionIds.UpdateCounter);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n    const newValue = this.getEmptyState();\r\n    newValue.Counter = stateContext.getState().Counter + 1;\r\n    stateContext.patchState(newValue);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-counter',\r\n  templateUrl: './counter.component.html',\r\n  styleUrls: ['./counter.component.scss']\r\n})\r\nexport class CounterComponent implements OnInit {\r\n\r\n  counter$: Observable<number>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.counter$ = this.store.select('Counter');\r\n  }\r\n}\r\n","import { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { Action, StateContext } from 'ngx-state-store';\r\n\r\n/**\r\n * Hide loading indicator which block the page.\r\n */\r\nexport class HideLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.HideLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    if (stateContext.getState().ShowLoadingIndicator == null) {\r\n      return;\r\n    }\r\n\r\n    const index = stateContext.getState().ShowLoadingIndicator.indexOf(this.identifier);\r\n\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n\r\n    const newState: AppState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.splice(index, 1);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { InventoryConnector } from '../../connectors/inventory.connector';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport class LoadInventoriesAction extends Action {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n    super(ActionIds.LoadInventories);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): Observable<any> {\r\n    return this.inventoryConnector.loadInventory()\r\n      .pipe(\r\n        tap(inventories => {\r\n          const newState: AppState = this.getEmptyState();\r\n          newState.Inventories = inventories;\r\n          newState.LastDownloadAt = (new Date()).toISOString();\r\n          stateContext.patchState(newState);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { Observable, of } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { LoadIndicator } from '../../services/state-store/action-factory';\r\n\r\n@Component({\r\n  selector: 'app-inventories',\r\n  templateUrl: './inventories.component.html',\r\n  styleUrls: ['./inventories.component.scss']\r\n})\r\nexport class InventoriesComponent implements OnInit {\r\n\r\n  inventories: Inventory[];\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = this.store.select('ShowLoadingIndicator').pipe(\r\n      mergeMap(indicators => of(indicators.filter(i => i === LoadIndicator.LOAD_INVENTORIES).length > 0))\r\n    );\r\n    this.store.select('Inventories').subscribe(inventories => {\r\n      this.inventories = inventories;\r\n    });\r\n  }\r\n}\r\n","export * from './hide-loading-indicator.action';\r\nexport * from './increment-counter.action';\r\nexport * from './load-inventories.action';\r\nexport * from './show-loading-indicator.action';\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}