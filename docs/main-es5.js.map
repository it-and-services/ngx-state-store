{"version":3,"sources":["webpack:///src/app/services/connectors/inventory.connector.ts","webpack:///src/app/components/counter-button.component/counter-button.component.ts","webpack:///src/app/components/counter.component/counter.component.scss","webpack:///src/app/components/inventories-button.component/inventories-button.component.html","webpack:///src/app/app.component.css","webpack:///src/environments/environment.ts","webpack:///src/app/components/inventories-button.component/inventories-button.component.ts","webpack:///src/app/components/inventories.component/inventories.component.scss","webpack:///src/app/services/state-store/app-initial-state.ts","webpack:///src/app/services/state-store/action-ids.ts","webpack:///src/app/services/state-store/actions/show-loading-indicator.action.ts","webpack:///src/app/components/counter-button.component/counter-button.component.scss","webpack:///src/app/app.component.ts","webpack:///src/app/components/counter.component/counter.component.html","webpack:///src/app/app.component.html","webpack:///dist/projects/ngx-state-store/src/lib/state/state-helper.ts","webpack:///dist/projects/ngx-state-store/src/lib/state/store-plugin.ts","webpack:///dist/projects/ngx-state-store/src/lib/state/store-log-plugin.ts","webpack:///dist/projects/ngx-state-store/src/lib/state/state-config.token.ts","webpack:///dist/projects/ngx-state-store/src/lib/state/store-performance-plugin.ts","webpack:///dist/projects/ngx-state-store/src/lib/state/store.service.ts","webpack:///dist/projects/ngx-state-store/src/lib/state/action.ts","webpack:///dist/projects/ngx-state-store/src/lib/ngx-state-store.module.ts","webpack:///dist/projects/ngx-state-store/src/public-api.ts","webpack:///dist/projects/ngx-state-store/src/ngx-state-store.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/counter-button.component/counter-button.component.html","webpack:///src/app/components/inventories.component/inventories.component.html","webpack:///src/app/services/state-store/action-factory.ts","webpack:///src/app/components/inventories-button.component/inventories-button.component.scss","webpack:///src/app/services/state-store/actions/increment-counter.action.ts","webpack:///src/app/components/counter.component/counter.component.ts","webpack:///src/app/services/state-store/actions/hide-loading-indicator.action.ts","webpack:///src/app/services/state-store/actions/load-inventories.action.ts","webpack:///src/app/components/inventories.component/inventories.component.ts","webpack:///src/app/services/state-store/actions/index.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["InventoryConnector","http","get","pipe","inventories","splice","getRandomInt","length","max","Math","floor","random","CounterButtonComponent","store","factory","dispatch","incrementCounter","selector","template","environment","production","state","log","timekeeping","InventoriesButtonComponent","changes","addedEntries","removedEntries","select","oldInventories","newInventories","calcDiff","subscribe","console","source","target","filter","t","find","s","id","showLoadIndicator","LOAD_INVENTORIES","loadInventories","error","lastDownloadAt","LastDownloadAt","hideLoadIndicator","map","e","join","AppInitialState","ShowLoadingIndicator","Counter","Inventories","ActionIds","ShowLoadingIndicatorAction","identifier","stateContext","newState","getEmptyState","getState","slice","push","patchState","AppComponent","StateHelper","objectName","Error","o","window","Map","freezeMap","Set","freezeSet","Date","isValidDate","freezeDate","freezeObject","clear","immutableMapFunction","set","origin","entries","key","value","deepFreeze","values","keys","has","a","forEach","callbackFn","Symbol","iterator","Object","defineProperty","size","writable","immutableSetFunction","add","setDate","immutableDateFunction","setHours","setFullYear","setMilliseconds","setMinutes","setMonth","setSeconds","setTime","setUTCDate","setUTCHours","setUTCFullYear","setUTCMilliseconds","setUTCMinutes","setUTCMonth","setUTCSeconds","getTime","getDate","getDay","getFullYear","getHours","getMilliseconds","getMinutes","getMonth","getSeconds","getTimezoneOffset","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","valueOf","toDateString","toString","toJSON","toLocaleDateString","toLocaleString","toLocaleTimeString","toISOString","toTimeString","toUTCString","freeze","oIsFunction","getOwnPropertyNames","prop","isFrozen","cloneFunctions","cyclicDependenciesMap","cloneObjectIntern","undefined","parent","Array","isArray","cloneArray","cloneMap","cloneSet","cloneSimpleObject","cloneFunction","element","index","keyClone","valueClone","assign","functionType","bind","create","newValue","getEmptyObject","date","prototype","call","isNaN","immutableFunction","StorePlugin","storageName","namespace","prepareWindowObject","storeName","StoreLogPlugin","limit","actionEnd","stateLog","executedStack","actionId","order","loggingDisabled","restrict","message","logAction","arr","STATE_CONFIG","StorePerformancePlugin","performanceLog","settings","performance","time","now","Store","config","actionCounter","plugins","currentState","initialState","stateStream","action","currentCounter","dispatchBefore","actionResult$","handleState","getStateContext","dispatchAfter","result","setTimeout","next","complete","errorState","getErrorState","asObservable","objectComparator","setState","updateState","partOfState","isPrimitive","combine","dispatchState","plugin","Type","Action","cloneObject","NgxStateStoreModule","ngModule","providers","provide","useValue","AppModule","declarations","imports","forRoot","bootstrap","LoadIndicator","ActionFactory","inventoryConnector","DEFAULT","IncrementCounterAction","UpdateCounter","CounterComponent","counter$","HideLoadingIndicatorAction","HideLoadingIndicator","indexOf","LoadInventoriesAction","LoadInventories","loadInventory","InventoriesComponent","loading$","indicators","i","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","code","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { delay, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class InventoryConnector {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  loadInventory(): Observable<Inventory[]> {\r\n    // delay(2000) to imitate the network throttling\r\n    return this.http.get<Inventory[]>('assets/mock-data/inventories.json').pipe(\r\n      delay(2000),\r\n      mergeMap(inventories => {\r\n        inventories.splice(this.getRandomInt(inventories.length), this.getRandomInt(2));\r\n        return of(inventories);\r\n      })\r\n    );\r\n  }\r\n\r\n  getRandomInt(max): number {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory } from '../../services/state-store/action-factory';\r\nimport { Store } from 'ngx-state-store';\r\n\r\n@Component({\r\n  selector: 'app-counter-button',\r\n  templateUrl: './counter-button.component.html',\r\n  styleUrls: ['./counter-button.component.scss']\r\n})\r\nexport class CounterButtonComponent {\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  incrementCounter(): void {\r\n    this.store.dispatch(this.factory.incrementCounter());\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3VudGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<button (click)=\\\"loadInventory()\\\" class=\\\"btn-primary\\\">Load Inventory</button>\\r\\n<p>Last download at: {{lastDownloadAt}}</p>\\r\\n<p *ngIf=\\\"changes.addedEntries.length\\\">\\r\\n  {{changes.addedEntries.length}} new {{changes.addedEntries.length > 1 ? 'entries' : 'entry'}}:\\r\\n  {{inventoriesToString(changes.addedEntries)}}</p>\\r\\n<p *ngIf=\\\"changes.removedEntries.length\\\">\\r\\n  {{changes.removedEntries.length}} {{changes.removedEntries.length > 1 ? 'entries' : 'entry'}} removed:\\r\\n  {{inventoriesToString(changes.removedEntries)}}</p>\\r\\n\";","export default \".row {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdyB7XHJcbiAgbWFyZ2luLXRvcDogMXJlbTtcclxufVxyXG4iXX0= */\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { EnvironmentSettings } from './environment-settings';\r\n\r\nexport const environment: EnvironmentSettings = {\r\n  production: false,\r\n  state: {\r\n    log: true,\r\n    timekeeping: true\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory, LoadIndicator } from '../../services/state-store/action-factory';\r\nimport { catchError, mergeMap, skip } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { Inventory } from '../../models/inventory';\r\n\r\nexport interface Changes {\r\n  addedEntries: Inventory[];\r\n  removedEntries: Inventory[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inventories-button',\r\n  templateUrl: './inventories-button.component.html',\r\n  styleUrls: ['./inventories-button.component.scss']\r\n})\r\nexport class InventoriesButtonComponent implements OnInit {\r\n\r\n  lastDownloadAt: string;\r\n  changes: Changes = {addedEntries: [], removedEntries: []} as Changes;\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.store.select('Inventories',\r\n      (oldInventories: Inventory[], newInventories: Inventory[]) => {\r\n        if (oldInventories === newInventories\r\n          || oldInventories && newInventories\r\n          && !this.calcDiff(oldInventories, newInventories).length\r\n          && !this.calcDiff(newInventories, oldInventories).length) {\r\n          return true;\r\n        }\r\n        this.changes.addedEntries = this.calcDiff(oldInventories, newInventories);\r\n        this.changes.removedEntries = this.calcDiff(newInventories, oldInventories);\r\n        return false;\r\n      }).pipe(skip(1))\r\n      .subscribe(() => {\r\n        console.log('the log is present only if there are some changes');\r\n      });\r\n  }\r\n\r\n  private calcDiff(source: Inventory[], target: Inventory[]): Inventory[] {\r\n    return (target || []).filter(t => !(source || []).find(s => s.id === t.id));\r\n  }\r\n\r\n  loadInventory(): void {\r\n    this.changes.addedEntries = [];\r\n    this.changes.removedEntries = [];\r\n    this.store.dispatch(this.factory.showLoadIndicator(LoadIndicator.LOAD_INVENTORIES))\r\n      .pipe(\r\n        mergeMap(() => this.store.dispatch(this.factory.loadInventories())),\r\n        catchError(error => {\r\n          console.log(error);\r\n          return of(error);\r\n        })\r\n      ).subscribe((state: AppState) => {\r\n        this.lastDownloadAt = state.LastDownloadAt;\r\n        this.store.dispatch(this.factory.hideLoadIndicator(LoadIndicator.LOAD_INVENTORIES));\r\n      }\r\n    );\r\n  }\r\n\r\n  inventoriesToString(inventories: Inventory[]): string {\r\n    return inventories.map(e => e.id).join(', ');\r\n  }\r\n}\r\n","export default \".inventories {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  min-height: 300px;\\n  max-height: 300px;\\n  overflow: hidden;\\n}\\n\\n.load-indicator-background {\\n  background-color: #cccccc;\\n  opacity: 0.7;\\n}\\n\\n.load-indicator, .load-indicator-background, .inventories-table-container {\\n  height: 100%;\\n  width: 100%;\\n  z-index: 1;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\\n.inventories-table-container {\\n  z-index: initial;\\n  overflow-x: auto;\\n  overflow-y: auto;\\n}\\n\\n.load-indicator {\\n  margin: auto;\\n  background-color: white;\\n  width: 7rem;\\n  height: 3rem;\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n}\\n\\n.load-indicator > div {\\n  margin: 0;\\n  padding: 0;\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxpbnZlbnRvcmllcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsWUFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0Esa0JBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSx1QkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLDZCQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFDRTtFQUNFLFNBQUE7RUFDQSxVQUFBO0VBQ0Esc0JBQUE7QUFDSiIsImZpbGUiOiJpbnZlbnRvcmllcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbnZlbnRvcmllcyB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBtaW4taGVpZ2h0OiAzMDBweDtcclxuICBtYXgtaGVpZ2h0OiAzMDBweDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4ubG9hZC1pbmRpY2F0b3ItYmFja2dyb3VuZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjY2NjYztcclxuICBvcGFjaXR5OiAuNztcclxufVxyXG5cclxuLmxvYWQtaW5kaWNhdG9yLCAubG9hZC1pbmRpY2F0b3ItYmFja2dyb3VuZCwgLmludmVudG9yaWVzLXRhYmxlLWNvbnRhaW5lciB7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHotaW5kZXg6ICsxO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBib3R0b206IDA7XHJcbn1cclxuXHJcbi5pbnZlbnRvcmllcy10YWJsZS1jb250YWluZXIge1xyXG4gIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgb3ZlcmZsb3cteDogYXV0bztcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG59XHJcblxyXG4ubG9hZC1pbmRpY2F0b3Ige1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICB3aWR0aDogN3JlbTtcclxuICBoZWlnaHQ6IDNyZW07XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICA+IGRpdiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB9XHJcbn1cclxuXHJcbiJdfQ== */\";","import { AppState } from './app-state';\r\n\r\nexport const AppInitialState: AppState = {\r\n  ShowLoadingIndicator: [],\r\n  Counter: 0,\r\n  Inventories: null,\r\n  LastDownloadAt: ''\r\n};\r\n","export enum ActionIds {\r\n\r\n  HideLoadingIndicator = '[Load] Hide Loading Indicator',\r\n  ShowLoadingIndicator = '[Load] Show Loading Indicator',\r\n\r\n  UpdateCounter = '[Common] Update counter',\r\n  LoadInventories = '[Load] Load inventories from back-end'\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\n/**\r\n * Shows loading indicator to blocks the page, so the user can not\r\n * use the ui.\r\n */\r\nexport class ShowLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.ShowLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    const newState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.push(this.identifier);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb3VudGVyLWJ1dHRvbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n}\r\n","export default \"<div class=\\\"alert alert-primary\\\" role=\\\"alert\\\">\\r\\n  current counter {{counter$ | async}}\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <h3>Usage example of the ngx-state-store module</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/counter-button.component/counter-button.component.ts</li>\\r\\n        <li>src/app/components/counter.component/counter.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter-button></app-counter-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-counter></app-counter>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\"></div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul>\\r\\n        <li>src/app/components/inventories-button.component/inventories-button.component.ts</li>\\r\\n        <li>src/app/components/inventories.component/inventories.component.ts</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories-button></app-inventories-button>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <app-inventories></app-inventories>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","// @dynamic\r\nexport class StateHelper {\r\n\r\n  private static immutableMapFunction = StateHelper.immutableFunction('Map');\r\n  private static immutableSetFunction = StateHelper.immutableFunction('Set');\r\n  private static immutableDateFunction = StateHelper.immutableFunction('Date');\r\n\r\n  private static immutableFunction(objectName: string) {\r\n    return (...a: any) => {\r\n      throw Error(objectName + ' is immutable');\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Makes a shadow freeze\r\n   *\r\n   * @param o object to freeze\r\n   */\r\n  public static deepFreeze<T>(o: T): T {\r\n\r\n    // @ts-ignore\r\n    if (o === window) {\r\n      return o;\r\n    }\r\n\r\n    if (o instanceof Map) {\r\n      StateHelper.freezeMap(o);\r\n    } else if (o instanceof Set) {\r\n      StateHelper.freezeSet(o);\r\n    } else if (o instanceof Date && StateHelper.isValidDate(o)) {\r\n      StateHelper.freezeDate(o);\r\n    }\r\n\r\n    StateHelper.freezeObject(o);\r\n    return o;\r\n  }\r\n\r\n  private static freezeMap(o: Map<any, any>): void {\r\n    o.clear = StateHelper.immutableMapFunction;\r\n    o.set = StateHelper.immutableMapFunction;\r\n    o.delete = StateHelper.immutableMapFunction;\r\n\r\n    const origin = new Map(o);\r\n    for (const [key, value] of origin.entries()) {\r\n      StateHelper.deepFreeze(key);\r\n      StateHelper.deepFreeze(value);\r\n    }\r\n    o.entries = () => origin.entries();\r\n    o.values = () => origin.values();\r\n    o.keys = () => origin.keys();\r\n    o.has = (a: any) => origin.has(a);\r\n    o.get = (a: any) => origin.get(a);\r\n    o.forEach = (callbackFn) => origin.forEach(callbackFn);\r\n    o[Symbol.iterator] = () => origin[Symbol.iterator]();\r\n    Object.defineProperty(o, 'size', {\r\n      value: origin.size,\r\n      writable: false\r\n    });\r\n  }\r\n\r\n  private static freezeSet(o: Set<any>): void {\r\n    o.clear = StateHelper.immutableSetFunction;\r\n    o.add = StateHelper.immutableSetFunction;\r\n    o.delete = StateHelper.immutableSetFunction;\r\n\r\n    const origin = new Set(o);\r\n    for (const value of origin) {\r\n      StateHelper.deepFreeze(value);\r\n    }\r\n    o.entries = () => origin.entries();\r\n    o.values = () => origin.values();\r\n    o.keys = () => origin.keys();\r\n    o.has = (a: any) => origin.has(a);\r\n    o.forEach = (callbackFn) => origin.forEach(callbackFn);\r\n    o[Symbol.iterator] = () => origin[Symbol.iterator]();\r\n    Object.defineProperty(o, 'size', {\r\n      value: origin.size,\r\n      writable: false\r\n    });\r\n  }\r\n\r\n  private static freezeDate(o: Date): void {\r\n    o.setDate = StateHelper.immutableDateFunction;\r\n    o.setHours = StateHelper.immutableDateFunction;\r\n    o.setFullYear = StateHelper.immutableDateFunction;\r\n    o.setMilliseconds = StateHelper.immutableDateFunction;\r\n    o.setMinutes = StateHelper.immutableDateFunction;\r\n    o.setMonth = StateHelper.immutableDateFunction;\r\n    o.setSeconds = StateHelper.immutableDateFunction;\r\n    o.setTime = StateHelper.immutableDateFunction;\r\n    o.setUTCDate = StateHelper.immutableDateFunction;\r\n    o.setUTCHours = StateHelper.immutableDateFunction;\r\n    o.setUTCFullYear = StateHelper.immutableDateFunction;\r\n    o.setUTCMilliseconds = StateHelper.immutableDateFunction;\r\n    o.setUTCMinutes = StateHelper.immutableDateFunction;\r\n    o.setUTCMonth = StateHelper.immutableDateFunction;\r\n    o.setUTCSeconds = StateHelper.immutableDateFunction;\r\n\r\n    const origin = new Date(o.getTime());\r\n    o.getDate = () => origin.getDate();\r\n    o.getDay = () => origin.getDay();\r\n    o.getFullYear = () => origin.getFullYear();\r\n    o.getHours = () => origin.getHours();\r\n    o.getMilliseconds = () => origin.getMilliseconds();\r\n    o.getMinutes = () => origin.getMinutes();\r\n    o.getMonth = () => origin.getMonth();\r\n    o.getSeconds = () => origin.getSeconds();\r\n    o.getTimezoneOffset = () => origin.getTimezoneOffset();\r\n    o.getTime = () => origin.getTime();\r\n    o.getUTCDate = () => origin.getUTCDate();\r\n    o.getUTCDay = () => origin.getUTCDay();\r\n    o.getUTCFullYear = () => origin.getUTCFullYear();\r\n    o.getUTCHours = () => origin.getUTCHours();\r\n    o.getUTCMilliseconds = () => origin.getUTCMilliseconds();\r\n    o.getUTCMinutes = () => origin.getUTCMinutes();\r\n    o.getUTCMonth = () => origin.getUTCMonth();\r\n    o.getUTCSeconds = () => origin.getUTCSeconds();\r\n\r\n    o.valueOf = () => origin.valueOf();\r\n    o.toDateString = () => origin.toDateString();\r\n    o.toString = () => origin.toString();\r\n    o.toJSON = (key?: any) => origin.toJSON(key);\r\n    o.toLocaleDateString = () => origin.toLocaleDateString();\r\n    o.toLocaleString = () => origin.toLocaleString();\r\n    o.toLocaleTimeString = () => origin.toLocaleTimeString();\r\n    o.toISOString = () => origin.toISOString();\r\n    o.toTimeString = () => origin.toTimeString();\r\n    o.toUTCString = () => origin.toUTCString();\r\n  }\r\n\r\n  private static freezeObject(o: any): void {\r\n    Object.freeze(o);\r\n    const oIsFunction = typeof o === 'function';\r\n    Object.getOwnPropertyNames(o).forEach((prop) => {\r\n      if (\r\n        (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)\r\n        && o[prop] !== null\r\n        && (typeof o[prop] === 'object' || typeof o[prop] === 'function')\r\n        && !Object.isFrozen(o[prop])) {\r\n        StateHelper.deepFreeze(o[prop]);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The method returns the clone of the object. Useful to clone frozen object.\r\n   *\r\n   * @param o object to clone\r\n   * @param cloneFunctions determines whether the functions must be also cloned, default value 'true'\r\n   */\r\n  public static cloneObject<T>(o: T, cloneFunctions = true): T {\r\n    const cyclicDependenciesMap = new Map<any, any>();\r\n    return StateHelper.cloneObjectIntern(cyclicDependenciesMap, o, undefined, cloneFunctions);\r\n  }\r\n\r\n  /**\r\n   * The method returns the clone of the object. Useful to clone frozen object.\r\n   *\r\n   * @param cyclicDependenciesMap map to detect and resolve cyclic dependencies\r\n   * @param o object to clone\r\n   * @param parent owner object of the object to clone, it is used for the functions cloning\r\n   * @param cloneFunctions determines whether the functions must be also cloned, default value 'true'\r\n   */\r\n  private static cloneObjectIntern<T>(cyclicDependenciesMap: Map<any, any>, o: T, parent?, cloneFunctions?): T {\r\n    let target;\r\n\r\n    // @ts-ignore\r\n    if (o === window) {\r\n      return o;\r\n    }\r\n\r\n    if (o) {\r\n\r\n      if (cyclicDependenciesMap.has(o)) {\r\n        return cyclicDependenciesMap.get(o);\r\n      }\r\n\r\n      if (typeof o === 'object') {\r\n\r\n        // clone Array\r\n        if (Array.isArray(o)) {\r\n          target = StateHelper.cloneArray(o as any[], cyclicDependenciesMap, cloneFunctions);\r\n          // clone Map\r\n        } else if (o instanceof Map) {\r\n          target = StateHelper.cloneMap(o as Map<any, any>, cyclicDependenciesMap, cloneFunctions);\r\n          // clone Set\r\n        } else if (o instanceof Set) {\r\n          target = StateHelper.cloneSet(o as Set<any>, cyclicDependenciesMap, cloneFunctions);\r\n          // clone Date\r\n        } else if (StateHelper.isValidDate(o)) {\r\n          target = new Date(((o as any) as Date).getTime());\r\n          cyclicDependenciesMap.set(o, target);\r\n          // clone Object\r\n        } else {\r\n          target = StateHelper.cloneSimpleObject(o, cyclicDependenciesMap, cloneFunctions);\r\n        }\r\n        // clone function\r\n      } else if (typeof o === 'function') {\r\n        if (cloneFunctions) {\r\n          target = StateHelper.cloneFunction(o as any, cyclicDependenciesMap, parent, cloneFunctions);\r\n        }\r\n      } else {\r\n        target = o;\r\n      }\r\n    } else {\r\n      target = o;\r\n    }\r\n    return target;\r\n  }\r\n\r\n  private static cloneArray(o: any[], cyclicDependenciesMap: Map<any, any>, cloneFunctions): any[] {\r\n    const target = o.slice();\r\n    cyclicDependenciesMap.set(o, target);\r\n    (o as any[]).forEach((element, index) => {\r\n      (target as any[])[index] = StateHelper.cloneObjectIntern(cyclicDependenciesMap, element, undefined, cloneFunctions);\r\n    });\r\n    return target;\r\n  }\r\n\r\n  private static cloneMap(o: Map<any, any>, cyclicDependenciesMap: Map<any, any>, cloneFunctions): Map<any, any> {\r\n    const target = new Map();\r\n    cyclicDependenciesMap.set(o, target);\r\n    for (const [key, value] of o.entries()) {\r\n      const keyClone = StateHelper.cloneObjectIntern(cyclicDependenciesMap, key, undefined, cloneFunctions);\r\n      const valueClone = StateHelper.cloneObjectIntern(cyclicDependenciesMap, value, undefined, cloneFunctions);\r\n      target.set(keyClone, valueClone);\r\n    }\r\n    return target;\r\n  }\r\n\r\n  private static cloneSet(o: Set<any>, cyclicDependenciesMap: Map<any, any>, cloneFunctions): Set<any> {\r\n    const target = new Set();\r\n    cyclicDependenciesMap.set(o, target);\r\n    for (const value of o) {\r\n      const valueClone = StateHelper.cloneObjectIntern(cyclicDependenciesMap, value, undefined, cloneFunctions);\r\n      target.add(valueClone);\r\n    }\r\n    return target;\r\n  }\r\n\r\n  private static cloneSimpleObject(o: any, cyclicDependenciesMap: Map<any, any>, cloneFunctions): any {\r\n    const target = Object.assign({}, o);\r\n    cyclicDependenciesMap.set(o, target);\r\n\r\n    Object.getOwnPropertyNames(o).forEach((prop) => {\r\n        const functionType = (typeof o[prop] === 'function');\r\n        if (cloneFunctions && functionType || !functionType) {\r\n          target[prop] = StateHelper.cloneObjectIntern(cyclicDependenciesMap, o[prop], target, cloneFunctions);\r\n        } else {\r\n          delete target[prop];\r\n        }\r\n      }\r\n    );\r\n    return target;\r\n  }\r\n\r\n  private static cloneFunction(o: any, cyclicDependenciesMap: Map<any, any>, parent, cloneFunctions): any {\r\n    const target = o.bind(parent || {});\r\n    cyclicDependenciesMap.set(o, target);\r\n\r\n    Object.getOwnPropertyNames(o).forEach((prop) => {\r\n        if (prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' && prop !== 'length' && prop !== 'name') {\r\n          target[prop] = StateHelper.cloneObjectIntern(cyclicDependenciesMap, o[prop], target, cloneFunctions);\r\n        }\r\n      }\r\n    );\r\n    return target;\r\n  }\r\n\r\n  public static getEmptyObject(): any {\r\n    return Object.create(null);\r\n  }\r\n\r\n  public static combine<S>(state: S, newValue: Partial<S>): S {\r\n    return Object.assign(StateHelper.getEmptyObject(), state, newValue);\r\n  }\r\n\r\n  private static isValidDate(date): boolean {\r\n    return date && date instanceof Date && Object.prototype.toString.call(date) === '[object Date]' && !isNaN(date as any);\r\n  }\r\n}\r\n\r\n","import { StateHelper } from './state-helper';\r\n\r\nexport abstract class StorePlugin {\r\n\r\n  private namespace = 'ngx-state-store';\r\n\r\n  get state(): any  {\r\n    return window[this.namespace][this.storageName].state;\r\n  }\r\n\r\n  protected constructor(private storageName: string) {\r\n    this.prepareWindowObject(storageName);\r\n  }\r\n\r\n  abstract dispatchBefore(actionId: string, state: any, order: number);\r\n\r\n  abstract dispatchAfter(actionId: string, state: any, order: number);\r\n\r\n  abstract newState(state: any);\r\n\r\n  /**\r\n   *\r\n   * @param storeName e.g. 'store-demo'\r\n   */\r\n  private prepareWindowObject(storeName: string): void {\r\n\r\n    if (!window[this.namespace]) {\r\n      window[this.namespace] = StateHelper.getEmptyObject();\r\n    }\r\n\r\n    if (!window[this.namespace][storeName]) {\r\n      window[this.namespace][storeName] = StateHelper.getEmptyObject();\r\n    }\r\n\r\n    if (!window[this.namespace][storeName].state) {\r\n      window[this.namespace][storeName].state = StateHelper.getEmptyObject();\r\n    }\r\n  }\r\n}\r\n\r\n","import { StorePlugin } from './store-plugin';\r\nimport { StateHelper } from './state-helper';\r\n\r\ninterface ActionToState {\r\n  actionId: string;\r\n  state: any;\r\n}\r\n\r\ninterface LogSettings {\r\n  // Saves all executed actions\r\n  executedStack: ActionToState[];\r\n  // After reaching the limit first element will be removed, if limit is -1 then no elements will be removed\r\n  limit: number;\r\n  // logging is done if set to true\r\n  log: boolean;\r\n}\r\n\r\nexport class StoreLogPlugin extends StorePlugin {\r\n\r\n  private readonly actionEnd = 'Action end:   ';\r\n  private readonly stateLog: LogSettings;\r\n\r\n  private get loggingDisabled(): boolean {\r\n    return !this.state.log.log;\r\n  }\r\n\r\n  constructor(storeName: string, log: boolean = false, limit = 0) {\r\n    super(storeName);\r\n    this.stateLog = StateHelper.getEmptyObject();\r\n    this.stateLog.executedStack = [];\r\n    this.stateLog.limit = limit;\r\n    this.stateLog.log = log;\r\n    this.state.log = this.stateLog;\r\n  }\r\n\r\n  private static logAction(message, state?): void {\r\n    console.log(message, state);\r\n  }\r\n\r\n  private static restrict(arr: ActionToState[], limit: number): void {\r\n    if (arr.length > limit) {\r\n      arr.splice(0, 1);\r\n    }\r\n  }\r\n\r\n  dispatchBefore(): void {\r\n  }\r\n\r\n  dispatchAfter(actionId: string, state: any, order: number): void {\r\n    if (this.loggingDisabled) {\r\n      return;\r\n    }\r\n    const log = {\r\n      actionId,\r\n      state\r\n    };\r\n    this.stateLog.executedStack.push(log);\r\n    StoreLogPlugin.restrict(this.stateLog.executedStack, this.stateLog.limit);\r\n    const message = this.actionEnd + actionId;\r\n    StoreLogPlugin.logAction(order + '. ' + message, state);\r\n    StoreLogPlugin.logAction('', '');\r\n  }\r\n\r\n  newState(): void {\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const STATE_CONFIG = new InjectionToken('STATE_CONFIG');\r\n","import { StorePlugin } from './store-plugin';\r\n\r\n/**\r\n * Measure time of action execution.\r\n */\r\ninterface PerformanceSettings {\r\n  // Measure action duration\r\n  timekeeping: boolean;\r\n  // After reaching the limit it starts from the beginning\r\n  limit: number;\r\n  performanceLog: ActionTime[];\r\n}\r\n\r\ninterface ActionTime {\r\n  id: string;\r\n  order: number;\r\n  time: number;\r\n}\r\n\r\nexport class StorePerformancePlugin extends StorePlugin {\r\n\r\n  private readonly settings: PerformanceSettings;\r\n  private performanceLog: ActionTime[] = [];\r\n\r\n  private get timekeeping(): boolean {\r\n    return this.state.performance.timekeeping;\r\n  }\r\n\r\n  constructor(storeName: string, log: boolean = false, limit = 1000) {\r\n    super(storeName);\r\n    this.settings = {\r\n      timekeeping: log,\r\n      limit: limit < 1 ? 1 : limit,\r\n      performanceLog: this.performanceLog\r\n    };\r\n    this.state.performance = this.settings;\r\n  }\r\n\r\n  dispatchBefore(actionId: string, state: any, order: number): void {\r\n    if (!this.timekeeping) {\r\n      return;\r\n    }\r\n    const index = order % this.settings.limit;\r\n    if (this.performanceLog.length < index) {\r\n      this.performanceLog.length = index;\r\n    }\r\n    this.performanceLog[index] = {\r\n      id: actionId,\r\n      order,\r\n      time: performance.now()\r\n    };\r\n  }\r\n\r\n  newState(): void {\r\n  }\r\n\r\n  dispatchAfter(actionId: string, state: any, order: number): void {\r\n    if (!this.timekeeping) {\r\n      return;\r\n    }\r\n    const index = order % this.settings.limit;\r\n    if (this.performanceLog[index]?.order === order) {\r\n      this.performanceLog[index].time = performance.now() - this.performanceLog[index].time;\r\n    }\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { distinctUntilChanged, pluck, take } from 'rxjs/operators';\r\nimport { Action } from './action';\r\nimport { StateContext } from './state-context';\r\nimport { StateHelper } from './state-helper';\r\nimport { StoreLogPlugin } from './store-log-plugin';\r\nimport { StorePlugin } from './store-plugin';\r\nimport { StateConfig } from './state-config';\r\nimport { STATE_CONFIG } from './state-config.token';\r\nimport { StorePerformancePlugin } from './store-performance-plugin';\r\nimport { BehaviorSubject, isObservable, Observable, Subject, throwError } from 'rxjs';\r\n\r\nexport type ObjectComparator = (oldObject: any, newObject: any) => boolean;\r\n\r\n@Injectable()\r\nexport class Store<S> {\r\n\r\n  private actionCounter = 0;\r\n  private plugins: StorePlugin[] = [];\r\n  private currentState: S;\r\n  private stateStream: BehaviorSubject<S>;\r\n\r\n  constructor(@Inject(STATE_CONFIG) private config: StateConfig) {\r\n    this.plugins.push(new StoreLogPlugin(this.config.storeName, this.config.log));\r\n    this.plugins.push(new StorePerformancePlugin(this.config.storeName, this.config.timekeeping));\r\n    this.currentState = config.initialState || {};\r\n    this.stateStream = new BehaviorSubject<S>(this.currentState);\r\n  }\r\n\r\n  private static getErrorState(action: Action, error: Error | any): any {\r\n    const state = StateHelper.getEmptyObject();\r\n    state.error = error;\r\n    state.action = action.Type;\r\n    return state;\r\n  }\r\n\r\n  dispatch(action: Action): Observable<S> {\r\n    const currentCounter = this.actionCounter++;\r\n    this.dispatchBefore(action, this.currentState, currentCounter);\r\n\r\n    let actionResult$;\r\n    try {\r\n      actionResult$ = action.handleState(this.getStateContext());\r\n    } catch (error) {\r\n      this.dispatchAfter(action, this.currentState, currentCounter);\r\n      console.error(error);\r\n\r\n      return throwError(error);\r\n    }\r\n\r\n    const result = new Subject<S>();\r\n\r\n    // Otherwise it will run sync.\r\n    // And the result observable is\r\n    // complete before return statement.\r\n    setTimeout(() => {\r\n      if (isObservable(actionResult$)) {\r\n        (actionResult$ as Observable<void>)\r\n          .pipe(take(1)).subscribe(\r\n          () => {\r\n            this.dispatchAfter(action, this.currentState, currentCounter);\r\n            result.next(this.currentState);\r\n            result.complete();\r\n          }, (error) => {\r\n            const errorState = Store.getErrorState(action, error);\r\n            this.dispatchAfter(action, errorState, currentCounter);\r\n            console.error(error);\r\n            result.error(error);\r\n          });\r\n      } else {\r\n        this.dispatchAfter(action, this.currentState, currentCounter);\r\n        result.next(this.currentState);\r\n        result.complete();\r\n      }\r\n    });\r\n    return result.asObservable();\r\n  }\r\n\r\n  select<keyString extends keyof S>(prop: keyString, objectComparator?: ObjectComparator): Observable<S[keyString]> {\r\n    if (objectComparator) {\r\n      return this.stateStream.pipe(pluck(prop as string), distinctUntilChanged<any>(objectComparator));\r\n    }\r\n    return this.stateStream.pipe(pluck(prop as string), distinctUntilChanged<any>());\r\n  }\r\n\r\n  /**\r\n   * The Observable is complete after forward one value.\r\n   *\r\n   * @param prop property to select\r\n   */\r\n  selectOnce<keyString extends keyof S>(prop: keyString): Observable<S[keyString]> {\r\n    return this.select(prop).pipe(take(1));\r\n  }\r\n\r\n  private getStateContext(): StateContext<S> {\r\n    return {\r\n      getState: () => this.currentState,\r\n      setState: (state) => {\r\n        this.updateState(state);\r\n      },\r\n      patchState: (partOfState) => {\r\n        const isArray = Array.isArray(partOfState);\r\n        const isPrimitive = typeof partOfState !== 'object';\r\n        if (isArray) {\r\n          throw new Error('Patching arrays is not supported.');\r\n        } else if (isPrimitive) {\r\n          throw new Error('Patching primitives is not supported.');\r\n        }\r\n        const newState = StateHelper.combine(this.currentState, partOfState);\r\n        this.updateState(newState);\r\n      }\r\n    };\r\n  }\r\n\r\n  private updateState(state: S): void {\r\n    this.currentState = StateHelper.deepFreeze(state);\r\n    this.dispatchState(this.currentState);\r\n\r\n    // next-sync. Otherwise the state change will trigger all other changes.\r\n    setTimeout(() => {\r\n      this.stateStream.next(this.currentState);\r\n    }, 0);\r\n  }\r\n\r\n  private dispatchBefore(action: Action, state: any, order: number): void {\r\n    this.plugins.forEach((plugin) => {\r\n      plugin.dispatchBefore(action.Type, state, order);\r\n    });\r\n  }\r\n\r\n  private dispatchAfter(action: Action, state: any, order: number): void {\r\n    this.plugins.forEach((plugin) => {\r\n      plugin.dispatchAfter(action.Type, state, order);\r\n    });\r\n  }\r\n\r\n  private dispatchState(state: any): void {\r\n    this.plugins.forEach((plugin) => {\r\n      plugin.newState(state);\r\n    });\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { StateContext } from './state-context';\r\nimport { StateHelper } from './state-helper';\r\n\r\nexport abstract class Action {\r\n\r\n  public get Type(): string {\r\n    return this.actionId;\r\n  }\r\n\r\n  protected constructor(private actionId: string) {\r\n  }\r\n\r\n  abstract handleState(stateContext: StateContext<any>): Observable<void> | void;\r\n\r\n  protected clone<T>(o: T, cloneFunctions = true): T {\r\n    return StateHelper.cloneObject(o, cloneFunctions);\r\n  }\r\n\r\n  protected getEmptyState(): any {\r\n    return StateHelper.getEmptyObject();\r\n  }\r\n\r\n  protected getEmptyObject<T>(): T {\r\n    return StateHelper.getEmptyObject();\r\n  }\r\n\r\n  protected combine<S>(state: S, newValue: Partial<S>): S {\r\n    return StateHelper.combine(state, newValue);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { StateConfig } from './state/state-config';\r\nimport { Store } from './state/store.service';\r\nimport { STATE_CONFIG } from './state/state-config.token';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: []\r\n})\r\nexport class NgxStateStoreModule {\r\n\r\n  static forRoot(config: StateConfig): ModuleWithProviders<NgxStateStoreModule> {\r\n    return {\r\n      ngModule: NgxStateStoreModule,\r\n      providers: [\r\n        Store,\r\n        {provide: STATE_CONFIG, useValue: config}\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\nexport { Action } from './state/action';\r\nexport { StateConfig } from './state/state-config';\r\nexport { StateContext } from './state/state-context';\r\nexport { StateHelper } from './state/state-helper';\r\nexport { Store, ObjectComparator } from './state/store.service';\r\n","/*\r\n * Public API Surface of ngx-state-store\r\n */\r\n\r\nexport * from './lib/ngx-state-store.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {STATE_CONFIG as ɵa} from './lib/state/state-config.token';","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment';\r\nimport { AppInitialState } from './services/state-store/app-initial-state';\r\nimport { CounterButtonComponent } from './components/counter-button.component/counter-button.component';\r\nimport { CounterComponent } from './components/counter.component/counter.component';\r\nimport { ActionFactory } from './services/state-store/action-factory';\r\nimport { InventoryConnector } from './services/connectors/inventory.connector';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InventoriesButtonComponent } from './components/inventories-button.component/inventories-button.component';\r\nimport { InventoriesComponent } from './components/inventories.component/inventories.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxStateStoreModule } from 'ngx-state-store';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CounterButtonComponent,\r\n    CounterComponent,\r\n    InventoriesButtonComponent,\r\n    InventoriesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    NgxStateStoreModule.forRoot({\r\n      storeName: 'store-demo',\r\n      log: environment.state.log,\r\n      timekeeping: environment.state.timekeeping,\r\n      initialState: AppInitialState\r\n    }),\r\n  ],\r\n  providers: [ActionFactory, InventoryConnector],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export default \"<button class=\\\"btn-primary\\\" (click)=\\\"incrementCounter()\\\">Increment Counter</button>\\r\\n\";","export default \"<div class=\\\"inventories\\\">\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator-background\\\"></div>\\r\\n  <div *ngIf=\\\"loading$ | async\\\" class=\\\"load-indicator\\\">\\r\\n    <div>Loading ...</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"inventories-table-container\\\">\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">#</th>\\r\\n        <th scope=\\\"col\\\">ID</th>\\r\\n        <th scope=\\\"col\\\">Version</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let inventory of inventories; let i=index\\\">\\r\\n        <th scope=\\\"row\\\">{{i}}</th>\\r\\n        <td>{{inventory.id}}</td>\\r\\n        <td>{{inventory.version}}</td>\\r\\n        <td>{{inventory.name}}</td>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { HideLoadingIndicatorAction, IncrementCounterAction, LoadInventoriesAction, ShowLoadingIndicatorAction } from './actions';\r\nimport { Action } from 'ngx-state-store';\r\nimport { InventoryConnector } from '../connectors/inventory.connector';\r\n\r\nexport enum LoadIndicator {\r\n  DEFAULT = 'DEFAULT',\r\n  LOAD_INVENTORIES = 'LOAD_INVENTORIES'\r\n}\r\n\r\n@Injectable()\r\nexport class ActionFactory {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n  }\r\n\r\n  incrementCounter(): Action {\r\n    return new IncrementCounterAction();\r\n  }\r\n\r\n  showLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new ShowLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  hideLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new HideLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  loadInventories(): Action {\r\n    return new LoadInventoriesAction(this.inventoryConnector);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbnZlbnRvcmllcy1idXR0b24uY29tcG9uZW50LnNjc3MifQ== */\";","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\nexport class IncrementCounterAction extends Action {\r\n\r\n  constructor() {\r\n    super(ActionIds.UpdateCounter);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n    const newValue = this.getEmptyState();\r\n    newValue.Counter = stateContext.getState().Counter + 1;\r\n    stateContext.patchState(newValue);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-counter',\r\n  templateUrl: './counter.component.html',\r\n  styleUrls: ['./counter.component.scss']\r\n})\r\nexport class CounterComponent implements OnInit {\r\n\r\n  counter$: Observable<number>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.counter$ = this.store.select('Counter');\r\n  }\r\n}\r\n","import { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { Action, StateContext } from 'ngx-state-store';\r\n\r\n/**\r\n * Hide loading indicator which block the page.\r\n */\r\nexport class HideLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.HideLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    if (stateContext.getState().ShowLoadingIndicator == null) {\r\n      return;\r\n    }\r\n\r\n    const index = stateContext.getState().ShowLoadingIndicator.indexOf(this.identifier);\r\n\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n\r\n    const newState: AppState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.splice(index, 1);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { InventoryConnector } from '../../connectors/inventory.connector';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport class LoadInventoriesAction extends Action {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n    super(ActionIds.LoadInventories);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): Observable<any> {\r\n    return this.inventoryConnector.loadInventory()\r\n      .pipe(\r\n        tap(inventories => {\r\n          const newState: AppState = this.getEmptyState();\r\n          newState.Inventories = inventories;\r\n          newState.LastDownloadAt = (new Date()).toISOString();\r\n          stateContext.patchState(newState);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { LoadIndicator } from '../../services/state-store/action-factory';\r\n\r\n@Component({\r\n  selector: 'app-inventories',\r\n  templateUrl: './inventories.component.html',\r\n  styleUrls: ['./inventories.component.scss']\r\n})\r\nexport class InventoriesComponent implements OnInit {\r\n\r\n  inventories: Inventory[];\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = this.store.select('ShowLoadingIndicator').pipe(\r\n      map(indicators => indicators.filter(i => i === LoadIndicator.LOAD_INVENTORIES).length > 0)\r\n    );\r\n    this.store.select('Inventories').subscribe(inventories => {\r\n      this.inventories = inventories;\r\n    });\r\n  }\r\n}\r\n","export * from './hide-loading-indicator.action';\r\nexport * from './increment-counter.action';\r\nexport * from './load-inventories.action';\r\nexport * from './show-loading-indicator.action';\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}