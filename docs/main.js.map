{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/counter-button.component/counter-button.component.ts","./src/app/components/counter.component/counter.component.ts","./src/app/components/inventories-button.component/inventories-button.component.ts","./src/app/components/inventories.component/inventories.component.ts","./src/app/services/connectors/inventory.connector.ts","./src/app/services/state-store/action-factory.ts","./src/app/services/state-store/action-ids.ts","./src/app/services/state-store/actions/hide-loading-indicator.action.ts","./src/app/services/state-store/actions/increment-counter.action.ts","./src/app/services/state-store/actions/index.ts","./src/app/services/state-store/actions/load-inventories.action.ts","./src/app/services/state-store/actions/show-loading-indicator.action.ts","./src/app/services/state-store/app-initial-state.ts","./src/environments/environment.ts","./src/main.ts","./src/app/app.component.scss","./src/app/components/counter-button.component/counter-button.component.scss","./src/app/components/counter.component/counter.component.scss","./src/app/components/inventories-button.component/inventories-button.component.scss","./src/app/components/inventories.component/inventories.component.scss","./projects/ngx-state-store/src/lib/state/state-helper.ts","./projects/ngx-state-store/src/lib/state/store-plugin.ts","./projects/ngx-state-store/src/lib/state/store-log-plugin.ts","./projects/ngx-state-store/src/lib/state/state-config.token.ts","./projects/ngx-state-store/src/lib/state/store-performance-plugin.ts","./projects/ngx-state-store/src/lib/state/store.service.ts","./projects/ngx-state-store/src/lib/state/action.ts","./projects/ngx-state-store/src/lib/ngx-state-store.module.ts","./projects/ngx-state-store/src/public-api.ts","./projects/ngx-state-store/src/ngx-state-store.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { environment } from '../environments/environment';\r\nimport { AppInitialState } from './services/state-store/app-initial-state';\r\nimport { CounterButtonComponent } from './components/counter-button.component/counter-button.component';\r\nimport { CounterComponent } from './components/counter.component/counter.component';\r\nimport { ActionFactory } from './services/state-store/action-factory';\r\nimport { InventoryConnector } from './services/connectors/inventory.connector';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { InventoriesButtonComponent } from './components/inventories-button.component/inventories-button.component';\r\nimport { InventoriesComponent } from './components/inventories.component/inventories.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxStateStoreModule } from 'ngx-state-store';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CounterButtonComponent,\r\n    CounterComponent,\r\n    InventoriesButtonComponent,\r\n    InventoriesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    NgxStateStoreModule.forRoot({\r\n      storeName: 'store-demo',\r\n      log: environment.state.log,\r\n      timekeeping: environment.state.timekeeping,\r\n      initialState: AppInitialState\r\n    }),\r\n  ],\r\n  providers: [ActionFactory, InventoryConnector],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory } from '../../services/state-store/action-factory';\r\nimport { Store } from 'ngx-state-store';\r\n\r\n@Component({\r\n  selector: 'app-counter-button',\r\n  templateUrl: './counter-button.component.html',\r\n  styleUrls: ['./counter-button.component.scss']\r\n})\r\nexport class CounterButtonComponent {\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  incrementCounter(): void {\r\n    this.store.dispatch(this.factory.incrementCounter());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-counter',\r\n  templateUrl: './counter.component.html',\r\n  styleUrls: ['./counter.component.scss']\r\n})\r\nexport class CounterComponent implements OnInit {\r\n\r\n  counter$: Observable<number>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.counter$ = this.store.select('Counter');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { ActionFactory, LoadIndicator } from '../../services/state-store/action-factory';\r\nimport { catchError, mergeMap, skip } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { Inventory } from '../../models/inventory';\r\n\r\nexport interface Changes {\r\n  addedEntries: Inventory[];\r\n  removedEntries: Inventory[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inventories-button',\r\n  templateUrl: './inventories-button.component.html',\r\n  styleUrls: ['./inventories-button.component.scss']\r\n})\r\nexport class InventoriesButtonComponent implements OnInit {\r\n\r\n  lastDownloadAt: string;\r\n  changes: Changes = {addedEntries: [], removedEntries: []} as Changes;\r\n  private inventories: Inventory[] = [];\r\n\r\n  constructor(private store: Store<AppState>,\r\n              private factory: ActionFactory) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.store.select('Inventories',\r\n      (oldInventories: Inventory[], newInventories: Inventory[]) => {\r\n        if (oldInventories === newInventories\r\n          || oldInventories && newInventories\r\n          && !this.calcDiff(oldInventories, newInventories).length\r\n          && !this.calcDiff(newInventories, oldInventories).length) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }).pipe(skip(1))\r\n      .subscribe((newInventories) => {\r\n        this.changes.addedEntries = this.calcDiff(this.inventories, newInventories);\r\n        this.changes.removedEntries = this.calcDiff(newInventories, this.inventories);\r\n        this.inventories = newInventories;\r\n        console.log('the log is present only if there are some changes');\r\n      });\r\n  }\r\n\r\n  private calcDiff(source: Inventory[], target: Inventory[]): Inventory[] {\r\n    return (target || []).filter(t => !(source || []).find(s => s.id === t.id));\r\n  }\r\n\r\n  loadInventory(): void {\r\n    this.changes.addedEntries = [];\r\n    this.changes.removedEntries = [];\r\n    this.store.dispatch(this.factory.showLoadIndicator(LoadIndicator.LOAD_INVENTORIES))\r\n      .pipe(\r\n        mergeMap(() => this.store.dispatch(this.factory.loadInventories())),\r\n        catchError(error => {\r\n          console.log(error);\r\n          return of(error);\r\n        })\r\n      ).subscribe((state: AppState) => {\r\n        this.lastDownloadAt = state.LastDownloadAt;\r\n        this.store.dispatch(this.factory.hideLoadIndicator(LoadIndicator.LOAD_INVENTORIES));\r\n      }\r\n    );\r\n  }\r\n\r\n  inventoriesToString(inventories: Inventory[]): string {\r\n    return inventories.map(e => e.id).join(', ');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from 'ngx-state-store';\r\nimport { AppState } from '../../services/state-store/app-state';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { LoadIndicator } from '../../services/state-store/action-factory';\r\n\r\n@Component({\r\n  selector: 'app-inventories',\r\n  templateUrl: './inventories.component.html',\r\n  styleUrls: ['./inventories.component.scss']\r\n})\r\nexport class InventoriesComponent implements OnInit {\r\n\r\n  inventories: Inventory[];\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(private store: Store<AppState>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = this.store.select('ShowLoadingIndicator').pipe(\r\n      map(indicators => indicators.filter(i => i === LoadIndicator.LOAD_INVENTORIES).length > 0)\r\n    );\r\n    this.store.select('Inventories').subscribe(inventories => {\r\n      this.inventories = inventories;\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inventory } from '../../models/inventory';\r\nimport { delay, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class InventoryConnector {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  loadInventory(): Observable<Inventory[]> {\r\n    // delay(2000) to imitate the network throttling\r\n    return this.http.get<Inventory[]>('assets/mock-data/inventories.json').pipe(\r\n      delay(2000),\r\n      mergeMap(inventories => {\r\n        inventories.splice(this.getRandomInt(inventories.length), this.getRandomInt(2));\r\n        return of(inventories);\r\n      })\r\n    );\r\n  }\r\n\r\n  getRandomInt(max): number {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HideLoadingIndicatorAction, IncrementCounterAction, LoadInventoriesAction, ShowLoadingIndicatorAction } from './actions';\r\nimport { Action } from 'ngx-state-store';\r\nimport { InventoryConnector } from '../connectors/inventory.connector';\r\n\r\nexport enum LoadIndicator {\r\n  DEFAULT = 'DEFAULT',\r\n  LOAD_INVENTORIES = 'LOAD_INVENTORIES'\r\n}\r\n\r\n@Injectable()\r\nexport class ActionFactory {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n  }\r\n\r\n  incrementCounter(): Action {\r\n    return new IncrementCounterAction();\r\n  }\r\n\r\n  showLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new ShowLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  hideLoadIndicator(identifier: string = LoadIndicator.DEFAULT): Action {\r\n    return new HideLoadingIndicatorAction(identifier);\r\n  }\r\n\r\n  loadInventories(): Action {\r\n    return new LoadInventoriesAction(this.inventoryConnector);\r\n  }\r\n}\r\n","export enum ActionIds {\r\n\r\n  HideLoadingIndicator = '[Load] Hide Loading Indicator',\r\n  ShowLoadingIndicator = '[Load] Show Loading Indicator',\r\n\r\n  UpdateCounter = '[Common] Update counter',\r\n  LoadInventories = '[Load] Load inventories from back-end'\r\n}\r\n","import { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { Action, StateContext } from 'ngx-state-store';\r\n\r\n/**\r\n * Hide loading indicator which block the page.\r\n */\r\nexport class HideLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.HideLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    if (stateContext.getState().ShowLoadingIndicator == null) {\r\n      return;\r\n    }\r\n\r\n    const index = stateContext.getState().ShowLoadingIndicator.indexOf(this.identifier);\r\n\r\n    if (index < 0) {\r\n      return;\r\n    }\r\n\r\n    const newState: AppState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.splice(index, 1);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\nexport class IncrementCounterAction extends Action {\r\n\r\n  constructor() {\r\n    super(ActionIds.UpdateCounter);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n    const newValue = this.getEmptyState();\r\n    newValue.Counter = stateContext.getState().Counter + 1;\r\n    stateContext.patchState(newValue);\r\n  }\r\n}\r\n","export * from './hide-loading-indicator.action';\r\nexport * from './increment-counter.action';\r\nexport * from './load-inventories.action';\r\nexport * from './show-loading-indicator.action';\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\nimport { InventoryConnector } from '../../connectors/inventory.connector';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nexport class LoadInventoriesAction extends Action {\r\n\r\n  constructor(private inventoryConnector: InventoryConnector) {\r\n    super(ActionIds.LoadInventories);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): Observable<any> {\r\n    return this.inventoryConnector.loadInventory()\r\n      .pipe(\r\n        tap(inventories => {\r\n          const newState: AppState = this.getEmptyState();\r\n          newState.Inventories = inventories;\r\n          newState.LastDownloadAt = (new Date()).toISOString();\r\n          stateContext.patchState(newState);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Action, StateContext } from 'ngx-state-store';\r\nimport { ActionIds } from '../action-ids';\r\nimport { AppState } from '../app-state';\r\n\r\n/**\r\n * Shows loading indicator to blocks the page, so the user can not\r\n * use the ui.\r\n */\r\nexport class ShowLoadingIndicatorAction extends Action {\r\n\r\n  constructor(private identifier: string) {\r\n    super(ActionIds.ShowLoadingIndicator + ': ' + identifier);\r\n  }\r\n\r\n  handleState(stateContext: StateContext<AppState>): void {\r\n\r\n    const newState = this.getEmptyState();\r\n    newState.ShowLoadingIndicator = stateContext.getState().ShowLoadingIndicator.slice();\r\n    newState.ShowLoadingIndicator.push(this.identifier);\r\n    stateContext.patchState(newState);\r\n  }\r\n}\r\n","import { AppState } from './app-state';\r\n\r\nexport const AppInitialState: AppState = {\r\n  ShowLoadingIndicator: [],\r\n  Counter: 0,\r\n  Inventories: null,\r\n  LastDownloadAt: ''\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --configuration production` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nimport { EnvironmentSettings } from './environment-settings';\r\n\r\nexport const environment: EnvironmentSettings = {\r\n  production: false,\r\n  state: {\r\n    log: true,\r\n    timekeeping: true\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".row {\\n  margin-top: 1rem;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/app.component.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,gBAAA;AACF\",\"sourcesContent\":[\".row {\\n  margin-top: 1rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// Imports\nvar ___CSS_LOADER_API_SOURCEMAP_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\");\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".inventories {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  min-height: 300px;\\n  max-height: 300px;\\n  overflow: hidden;\\n}\\n\\n.load-indicator-background {\\n  background-color: #cccccc;\\n  opacity: 0.7;\\n}\\n\\n.load-indicator, .load-indicator-background, .inventories-table-container {\\n  height: 100%;\\n  width: 100%;\\n  z-index: 1;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n\\n.inventories-table-container {\\n  z-index: initial;\\n  overflow-x: auto;\\n  overflow-y: auto;\\n}\\n\\n.load-indicator {\\n  margin: auto;\\n  background-color: white;\\n  width: 7rem;\\n  height: 3rem;\\n  display: flex;\\n  justify-content: space-around;\\n  align-items: center;\\n}\\n.load-indicator > div {\\n  margin: 0;\\n  padding: 0;\\n  vertical-align: middle;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/app/components/inventories.component/inventories.component.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAA;EACA,WAAA;EACA,YAAA;EACA,iBAAA;EACA,iBAAA;EACA,gBAAA;AACF;;AAEA;EACE,yBAAA;EACA,YAAA;AACF;;AAEA;EACE,YAAA;EACA,WAAA;EACA,UAAA;EACA,kBAAA;EACA,MAAA;EACA,OAAA;EACA,QAAA;EACA,SAAA;AACF;;AAEA;EACE,gBAAA;EACA,gBAAA;EACA,gBAAA;AACF;;AAEA;EACE,YAAA;EACA,uBAAA;EACA,WAAA;EACA,YAAA;EACA,aAAA;EACA,6BAAA;EACA,mBAAA;AACF;AACE;EACE,SAAA;EACA,UAAA;EACA,sBAAA;AACJ\",\"sourcesContent\":[\".inventories {\\r\\n  position: relative;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  min-height: 300px;\\r\\n  max-height: 300px;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\n.load-indicator-background {\\r\\n  background-color: #cccccc;\\r\\n  opacity: .7;\\r\\n}\\r\\n\\r\\n.load-indicator, .load-indicator-background, .inventories-table-container {\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n  z-index: +1;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n}\\r\\n\\r\\n.inventories-table-container {\\r\\n  z-index: initial;\\r\\n  overflow-x: auto;\\r\\n  overflow-y: auto;\\r\\n}\\r\\n\\r\\n.load-indicator {\\r\\n  margin: auto;\\r\\n  background-color: white;\\r\\n  width: 7rem;\\r\\n  height: 3rem;\\r\\n  display: flex;\\r\\n  justify-content: space-around;\\r\\n  align-items: center;\\r\\n\\r\\n  > div {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n}\\r\\n\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___.toString();\n","// @dynamic\r\nexport class StateHelper {\r\n\r\n  private static immutableMapFunction = StateHelper.immutableFunction('Map');\r\n  private static immutableSetFunction = StateHelper.immutableFunction('Set');\r\n  private static immutableDateFunction = StateHelper.immutableFunction('Date');\r\n\r\n  private static immutableFunction(objectName: string) {\r\n    return (...a: any) => {\r\n      throw Error(objectName + ' is immutable');\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Makes a shadow freeze\r\n   *\r\n   * @param o object to freeze\r\n   */\r\n  public static deepFreeze<T>(o: T): T {\r\n\r\n    // @ts-ignore\r\n    if (o === window) {\r\n      return o;\r\n    }\r\n\r\n    if (o instanceof Map) {\r\n      StateHelper.freezeMap(o);\r\n    } else if (o instanceof Set) {\r\n      StateHelper.freezeSet(o);\r\n    } else if (o instanceof Date && StateHelper.isValidDate(o)) {\r\n      StateHelper.freezeDate(o);\r\n    }\r\n\r\n    StateHelper.freezeObject(o);\r\n    return o;\r\n  }\r\n\r\n  private static freezeMap(o: Map<any, any>): void {\r\n    o.clear = StateHelper.immutableMapFunction;\r\n    o.set = StateHelper.immutableMapFunction;\r\n    o.delete = StateHelper.immutableMapFunction;\r\n\r\n    const origin = new Map(o);\r\n    for (const [key, value] of origin.entries()) {\r\n      StateHelper.deepFreeze(key);\r\n      StateHelper.deepFreeze(value);\r\n    }\r\n    o.entries = () => origin.entries();\r\n    o.values = () => origin.values();\r\n    o.keys = () => origin.keys();\r\n    o.has = (a: any) => origin.has(a);\r\n    o.get = (a: any) => origin.get(a);\r\n    o.forEach = (callbackFn) => origin.forEach(callbackFn);\r\n    o[Symbol.iterator] = () => origin[Symbol.iterator]();\r\n    Object.defineProperty(o, 'size', {\r\n      value: origin.size,\r\n      writable: false\r\n    });\r\n  }\r\n\r\n  private static freezeSet(o: Set<any>): void {\r\n    o.clear = StateHelper.immutableSetFunction;\r\n    o.add = StateHelper.immutableSetFunction;\r\n    o.delete = StateHelper.immutableSetFunction;\r\n\r\n    const origin = new Set(o);\r\n    for (const value of origin) {\r\n      StateHelper.deepFreeze(value);\r\n    }\r\n    o.entries = () => origin.entries();\r\n    o.values = () => origin.values();\r\n    o.keys = () => origin.keys();\r\n    o.has = (a: any) => origin.has(a);\r\n    o.forEach = (callbackFn) => origin.forEach(callbackFn);\r\n    o[Symbol.iterator] = () => origin[Symbol.iterator]();\r\n    Object.defineProperty(o, 'size', {\r\n      value: origin.size,\r\n      writable: false\r\n    });\r\n  }\r\n\r\n  private static freezeDate(o: Date): void {\r\n    o.setDate = StateHelper.immutableDateFunction;\r\n    o.setHours = StateHelper.immutableDateFunction;\r\n    o.setFullYear = StateHelper.immutableDateFunction;\r\n    o.setMilliseconds = StateHelper.immutableDateFunction;\r\n    o.setMinutes = StateHelper.immutableDateFunction;\r\n    o.setMonth = StateHelper.immutableDateFunction;\r\n    o.setSeconds = StateHelper.immutableDateFunction;\r\n    o.setTime = StateHelper.immutableDateFunction;\r\n    o.setUTCDate = StateHelper.immutableDateFunction;\r\n    o.setUTCHours = StateHelper.immutableDateFunction;\r\n    o.setUTCFullYear = StateHelper.immutableDateFunction;\r\n    o.setUTCMilliseconds = StateHelper.immutableDateFunction;\r\n    o.setUTCMinutes = StateHelper.immutableDateFunction;\r\n    o.setUTCMonth = StateHelper.immutableDateFunction;\r\n    o.setUTCSeconds = StateHelper.immutableDateFunction;\r\n\r\n    const origin = new Date(o.getTime());\r\n    o.getDate = () => origin.getDate();\r\n    o.getDay = () => origin.getDay();\r\n    o.getFullYear = () => origin.getFullYear();\r\n    o.getHours = () => origin.getHours();\r\n    o.getMilliseconds = () => origin.getMilliseconds();\r\n    o.getMinutes = () => origin.getMinutes();\r\n    o.getMonth = () => origin.getMonth();\r\n    o.getSeconds = () => origin.getSeconds();\r\n    o.getTimezoneOffset = () => origin.getTimezoneOffset();\r\n    o.getTime = () => origin.getTime();\r\n    o.getUTCDate = () => origin.getUTCDate();\r\n    o.getUTCDay = () => origin.getUTCDay();\r\n    o.getUTCFullYear = () => origin.getUTCFullYear();\r\n    o.getUTCHours = () => origin.getUTCHours();\r\n    o.getUTCMilliseconds = () => origin.getUTCMilliseconds();\r\n    o.getUTCMinutes = () => origin.getUTCMinutes();\r\n    o.getUTCMonth = () => origin.getUTCMonth();\r\n    o.getUTCSeconds = () => origin.getUTCSeconds();\r\n\r\n    o.valueOf = () => origin.valueOf();\r\n    o.toDateString = () => origin.toDateString();\r\n    o.toString = () => origin.toString();\r\n    o.toJSON = (key?: any) => origin.toJSON(key);\r\n    o.toLocaleDateString = () => origin.toLocaleDateString();\r\n    o.toLocaleString = () => origin.toLocaleString();\r\n    o.toLocaleTimeString = () => origin.toLocaleTimeString();\r\n    o.toISOString = () => origin.toISOString();\r\n    o.toTimeString = () => origin.toTimeString();\r\n    o.toUTCString = () => origin.toUTCString();\r\n  }\r\n\r\n  private static freezeObject(o: any): void {\r\n    Object.freeze(o);\r\n    const oIsFunction = typeof o === 'function';\r\n    Object.getOwnPropertyNames(o).forEach((prop) => {\r\n      if (\r\n        (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)\r\n        && o[prop] !== null\r\n        && (typeof o[prop] === 'object' || typeof o[prop] === 'function')\r\n        && !Object.isFrozen(o[prop])) {\r\n        StateHelper.deepFreeze(o[prop]);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The method returns the clone of the object. Useful to clone frozen object.\r\n   *\r\n   * @param o object to clone\r\n   * @param cloneFunctions determines whether the functions must be also cloned, default value 'true'\r\n   */\r\n  public static cloneObject<T>(o: T, cloneFunctions = true): T {\r\n    const cyclicDependenciesMap = new Map<any, any>();\r\n    return StateHelper.cloneObjectIntern(cyclicDependenciesMap, o, undefined, cloneFunctions);\r\n  }\r\n\r\n  /**\r\n   * The method returns the clone of the object. Useful to clone frozen object.\r\n   *\r\n   * @param cyclicDependenciesMap map to detect and resolve cyclic dependencies\r\n   * @param o object to clone\r\n   * @param parent owner object of the object to clone, it is used for the functions cloning\r\n   * @param cloneFunctions determines whether the functions must be also cloned, default value 'true'\r\n   */\r\n  private static cloneObjectIntern<T>(cyclicDependenciesMap: Map<any, any>, o: T, parent?, cloneFunctions?): T {\r\n    let target;\r\n\r\n    // @ts-ignore\r\n    if (o === window) {\r\n      return o;\r\n    }\r\n\r\n    if (o) {\r\n\r\n      if (cyclicDependenciesMap.has(o)) {\r\n        return cyclicDependenciesMap.get(o);\r\n      }\r\n\r\n      if (typeof o === 'object') {\r\n\r\n        // clone Array\r\n        if (Array.isArray(o)) {\r\n          target = StateHelper.cloneArray(o as any[], cyclicDependenciesMap, cloneFunctions);\r\n          // clone Map\r\n        } else if (o instanceof Map) {\r\n          target = StateHelper.cloneMap(o as Map<any, any>, cyclicDependenciesMap, cloneFunctions);\r\n          // clone Set\r\n        } else if (o instanceof Set) {\r\n          target = StateHelper.cloneSet(o as Set<any>, cyclicDependenciesMap, cloneFunctions);\r\n          // clone Date\r\n        } else if (StateHelper.isValidDate(o)) {\r\n          target = new Date(((o as any) as Date).getTime());\r\n          cyclicDependenciesMap.set(o, target);\r\n          // clone Object\r\n        } else {\r\n          target = StateHelper.cloneSimpleObject(o, cyclicDependenciesMap, cloneFunctions);\r\n        }\r\n        // clone function\r\n      } else if (typeof o === 'function') {\r\n        if (cloneFunctions) {\r\n          target = StateHelper.cloneFunction(o as any, cyclicDependenciesMap, parent, cloneFunctions);\r\n        }\r\n      } else {\r\n        target = o;\r\n      }\r\n    } else {\r\n      target = o;\r\n    }\r\n    return target;\r\n  }\r\n\r\n  private static cloneArray(o: any[], cyclicDependenciesMap: Map<any, any>, cloneFunctions): any[] {\r\n    const target = o.slice();\r\n    cyclicDependenciesMap.set(o, target);\r\n    (o as any[]).forEach((element, index) => {\r\n      (target as any[])[index] = StateHelper.cloneObjectIntern(cyclicDependenciesMap, element, undefined, cloneFunctions);\r\n    });\r\n    return target;\r\n  }\r\n\r\n  private static cloneMap(o: Map<any, any>, cyclicDependenciesMap: Map<any, any>, cloneFunctions): Map<any, any> {\r\n    const target = new Map();\r\n    cyclicDependenciesMap.set(o, target);\r\n    for (const [key, value] of o.entries()) {\r\n      const keyClone = StateHelper.cloneObjectIntern(cyclicDependenciesMap, key, undefined, cloneFunctions);\r\n      const valueClone = StateHelper.cloneObjectIntern(cyclicDependenciesMap, value, undefined, cloneFunctions);\r\n      target.set(keyClone, valueClone);\r\n    }\r\n    return target;\r\n  }\r\n\r\n  private static cloneSet(o: Set<any>, cyclicDependenciesMap: Map<any, any>, cloneFunctions): Set<any> {\r\n    const target = new Set();\r\n    cyclicDependenciesMap.set(o, target);\r\n    for (const value of o) {\r\n      const valueClone = StateHelper.cloneObjectIntern(cyclicDependenciesMap, value, undefined, cloneFunctions);\r\n      target.add(valueClone);\r\n    }\r\n    return target;\r\n  }\r\n\r\n  private static cloneSimpleObject(o: any, cyclicDependenciesMap: Map<any, any>, cloneFunctions): any {\r\n    const target = Object.assign({}, o);\r\n    cyclicDependenciesMap.set(o, target);\r\n\r\n    Object.getOwnPropertyNames(o).forEach((prop) => {\r\n        const functionType = (typeof o[prop] === 'function');\r\n        if (cloneFunctions && functionType || !functionType) {\r\n          target[prop] = StateHelper.cloneObjectIntern(cyclicDependenciesMap, o[prop], target, cloneFunctions);\r\n        } else {\r\n          delete target[prop];\r\n        }\r\n      }\r\n    );\r\n    return target;\r\n  }\r\n\r\n  private static cloneFunction(o: any, cyclicDependenciesMap: Map<any, any>, parent, cloneFunctions): any {\r\n    const target = o.bind(parent || {});\r\n    cyclicDependenciesMap.set(o, target);\r\n\r\n    Object.getOwnPropertyNames(o).forEach((prop) => {\r\n        if (prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' && prop !== 'length' && prop !== 'name') {\r\n          target[prop] = StateHelper.cloneObjectIntern(cyclicDependenciesMap, o[prop], target, cloneFunctions);\r\n        }\r\n      }\r\n    );\r\n    return target;\r\n  }\r\n\r\n  public static getEmptyObject(): any {\r\n    return Object.create(null);\r\n  }\r\n\r\n  public static combine<S>(state: S, newValue: Partial<S>): S {\r\n    return Object.assign(StateHelper.getEmptyObject(), state, newValue);\r\n  }\r\n\r\n  private static isValidDate(date): boolean {\r\n    return date && date instanceof Date && Object.prototype.toString.call(date) === '[object Date]' && !isNaN(date as any);\r\n  }\r\n}\r\n\r\n","import { StateHelper } from './state-helper';\r\n\r\nexport abstract class StorePlugin {\r\n\r\n  private namespace = 'ngx-state-store';\r\n\r\n  get state(): any  {\r\n    return window[this.namespace][this.storageName].state;\r\n  }\r\n\r\n  protected constructor(private storageName: string) {\r\n    this.prepareWindowObject(storageName);\r\n  }\r\n\r\n  abstract dispatchBefore(actionId: string, state: any, order: number);\r\n\r\n  abstract dispatchAfter(actionId: string, state: any, order: number);\r\n\r\n  abstract newState(state: any);\r\n\r\n  /**\r\n   *\r\n   * @param storeName e.g. 'store-demo'\r\n   */\r\n  private prepareWindowObject(storeName: string): void {\r\n\r\n    if (!window[this.namespace]) {\r\n      window[this.namespace] = StateHelper.getEmptyObject();\r\n    }\r\n\r\n    if (!window[this.namespace][storeName]) {\r\n      window[this.namespace][storeName] = StateHelper.getEmptyObject();\r\n    }\r\n\r\n    if (!window[this.namespace][storeName].state) {\r\n      window[this.namespace][storeName].state = StateHelper.getEmptyObject();\r\n    }\r\n  }\r\n}\r\n\r\n","import { StorePlugin } from './store-plugin';\r\nimport { StateHelper } from './state-helper';\r\n\r\ninterface ActionToState {\r\n  actionId: string;\r\n  state: any;\r\n}\r\n\r\ninterface LogSettings {\r\n  // Saves all executed actions\r\n  executedStack: ActionToState[];\r\n  // After reaching the limit first element will be removed, if limit is -1 then no elements will be removed\r\n  limit: number;\r\n  // logging is done if set to true\r\n  log: boolean;\r\n}\r\n\r\nexport class StoreLogPlugin extends StorePlugin {\r\n\r\n  private readonly actionEnd = 'Action end:   ';\r\n  private readonly stateLog: LogSettings;\r\n\r\n  private get loggingDisabled(): boolean {\r\n    return !this.state.log.log;\r\n  }\r\n\r\n  constructor(storeName: string, log: boolean = false, limit = 0) {\r\n    super(storeName);\r\n    this.stateLog = StateHelper.getEmptyObject();\r\n    this.stateLog.executedStack = [];\r\n    this.stateLog.limit = limit;\r\n    this.stateLog.log = log;\r\n    this.state.log = this.stateLog;\r\n  }\r\n\r\n  private static logAction(message, state?): void {\r\n    console.log(message, state);\r\n  }\r\n\r\n  private static restrict(arr: ActionToState[], limit: number): void {\r\n    if (arr.length > limit) {\r\n      arr.splice(0, 1);\r\n    }\r\n  }\r\n\r\n  dispatchBefore(): void {\r\n  }\r\n\r\n  dispatchAfter(actionId: string, state: any, order: number): void {\r\n    if (this.loggingDisabled) {\r\n      return;\r\n    }\r\n    const log = {\r\n      actionId,\r\n      state\r\n    };\r\n    this.stateLog.executedStack.push(log);\r\n    StoreLogPlugin.restrict(this.stateLog.executedStack, this.stateLog.limit);\r\n    const message = this.actionEnd + actionId;\r\n    StoreLogPlugin.logAction(order + '. ' + message, state);\r\n    StoreLogPlugin.logAction('', '');\r\n  }\r\n\r\n  newState(): void {\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const STATE_CONFIG = new InjectionToken('STATE_CONFIG');\r\n","import { StorePlugin } from './store-plugin';\r\n\r\n/**\r\n * Measure time of action execution.\r\n */\r\ninterface PerformanceSettings {\r\n  // Measure action duration\r\n  timekeeping: boolean;\r\n  // After reaching the limit it starts from the beginning\r\n  limit: number;\r\n  performanceLog: ActionTime[];\r\n}\r\n\r\ninterface ActionTime {\r\n  id: string;\r\n  order: number;\r\n  time: number;\r\n}\r\n\r\nexport class StorePerformancePlugin extends StorePlugin {\r\n\r\n  private readonly settings: PerformanceSettings;\r\n  private performanceLog: ActionTime[] = [];\r\n\r\n  private get timekeeping(): boolean {\r\n    return this.state.performance.timekeeping;\r\n  }\r\n\r\n  constructor(storeName: string, log: boolean = false, limit = 1000) {\r\n    super(storeName);\r\n    this.settings = {\r\n      timekeeping: log,\r\n      limit: limit < 1 ? 1 : limit,\r\n      performanceLog: this.performanceLog\r\n    };\r\n    this.state.performance = this.settings;\r\n  }\r\n\r\n  dispatchBefore(actionId: string, state: any, order: number): void {\r\n    if (!this.timekeeping) {\r\n      return;\r\n    }\r\n    const index = order % this.settings.limit;\r\n    if (this.performanceLog.length < index) {\r\n      this.performanceLog.length = index;\r\n    }\r\n    this.performanceLog[index] = {\r\n      id: actionId,\r\n      order,\r\n      time: performance.now()\r\n    };\r\n  }\r\n\r\n  newState(): void {\r\n  }\r\n\r\n  dispatchAfter(actionId: string, state: any, order: number): void {\r\n    if (!this.timekeeping) {\r\n      return;\r\n    }\r\n    const index = order % this.settings.limit;\r\n    if (this.performanceLog[index]?.order === order) {\r\n      this.performanceLog[index].time = performance.now() - this.performanceLog[index].time;\r\n    }\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { catchError, distinctUntilChanged, map, take } from 'rxjs/operators';\r\nimport { Action } from './action';\r\nimport { StateContext } from './state-context';\r\nimport { StateHelper } from './state-helper';\r\nimport { StoreLogPlugin } from './store-log-plugin';\r\nimport { StorePlugin } from './store-plugin';\r\nimport { StateConfig } from './state-config';\r\nimport { STATE_CONFIG } from './state-config.token';\r\nimport { StorePerformancePlugin } from './store-performance-plugin';\r\nimport { BehaviorSubject, isObservable, Observable, of, Subject, throwError } from 'rxjs';\r\n\r\nexport type ObjectComparator = (oldObject: any, newObject: any) => boolean;\r\n\r\n@Injectable()\r\nexport class Store<S> {\r\n\r\n  private actionCounter = 0;\r\n  private plugins: StorePlugin[] = [];\r\n  private currentState: S;\r\n  private stateStream: BehaviorSubject<S>;\r\n\r\n  constructor(@Inject(STATE_CONFIG) private config: StateConfig) {\r\n    this.plugins.push(new StoreLogPlugin(this.config.storeName, this.config.log));\r\n    this.plugins.push(new StorePerformancePlugin(this.config.storeName, this.config.timekeeping));\r\n    this.currentState = config.initialState || {};\r\n    this.stateStream = new BehaviorSubject<S>(this.currentState);\r\n  }\r\n\r\n  private static getErrorState(action: Action, error: Error | any): any {\r\n    const state = StateHelper.getEmptyObject();\r\n    state.error = error;\r\n    state.action = action.Type;\r\n    return state;\r\n  }\r\n\r\n  dispatch(action: Action): Observable<S> {\r\n    const currentCounter = this.actionCounter++;\r\n    this.dispatchBefore(action, this.currentState, currentCounter);\r\n\r\n    let actionResult$;\r\n    try {\r\n      actionResult$ = action.handleState(this.getStateContext());\r\n    } catch (error) {\r\n      this.dispatchAfter(action, this.currentState, currentCounter);\r\n      console.error(error);\r\n\r\n      return throwError(error);\r\n    }\r\n\r\n    const result = new Subject<S>();\r\n\r\n    // Otherwise it will run sync.\r\n    // And the result observable is\r\n    // complete before return statement.\r\n    setTimeout(() => {\r\n      if (isObservable(actionResult$)) {\r\n        (actionResult$ as Observable<void>)\r\n          .pipe(take(1),\r\n            map((some) => {\r\n              this.dispatchAfter(action, this.currentState, currentCounter);\r\n              result.next(this.currentState);\r\n              result.complete();\r\n              return some;\r\n            }),\r\n            catchError((error) => {\r\n              const errorState = Store.getErrorState(action, error);\r\n              this.dispatchAfter(action, errorState, currentCounter);\r\n              console.error(error);\r\n              result.error(error);\r\n              return of(error);\r\n            })).subscribe();\r\n      } else {\r\n        this.dispatchAfter(action, this.currentState, currentCounter);\r\n        result.next(this.currentState);\r\n        result.complete();\r\n      }\r\n    });\r\n    return result.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Select observable to subscribe to the state.\r\n   *\r\n   * @param key state name to select\r\n   * @param objectComparator optional comparator for advanced state change detection\r\n   */\r\n  select<keyString extends keyof S>(key: keyString, objectComparator?: ObjectComparator): Observable<S[keyString]> {\r\n    return this.selectState(key, undefined, undefined, objectComparator);\r\n  }\r\n\r\n  /**\r\n   * Select observable to subscribe to the state.\r\n   *\r\n   * @param key state name to select\r\n   * @param defaultValue default value to return if the state is undefined or null\r\n   * @param objectComparator optional comparator for advanced state change detection\r\n   */\r\n  selectOrDefault<keyString extends keyof S>(key: keyString, defaultValue: S[keyString], objectComparator?: ObjectComparator): Observable<S[keyString]> {\r\n    return this.selectState(key, undefined, defaultValue, objectComparator);\r\n  }\r\n\r\n  /**\r\n   * Select observable to subscribe to the state's sub-property. The parameter subPropertyPath is a string representation of the path.\r\n   * For example: if some state identified by 'key1' has property object with name 'prop1', and this object has an array of other objects\r\n   * saved in property 'prop2', and it is the property 'prop3' of the second element (index 1) of the object from array is needed then\r\n   * the subPropertyPath would be: 'prop1/prop2/1/prop3'\r\n   *\r\n   * @param key state name to select the sub-property\r\n   * @param subPropertyPath path to the sub-property of the state\r\n   * @param objectComparator optional comparator for advanced property change detection\r\n   */\r\n  selectSubProperty<keyString extends keyof S, T>(key: keyString, subPropertyPath: string, objectComparator?: ObjectComparator): Observable<T> {\r\n    return this.selectState(key, subPropertyPath, undefined, objectComparator);\r\n  }\r\n\r\n  /**\r\n   * Select observable to subscribe to the state's sub-property. The parameter subPropertyPath is a string representation of the path.\r\n   * For example: if some state identified by 'key1' has property object with name 'prop1', and this object has an array of other objects\r\n   * saved in property 'prop2', and it is the property 'prop3' of the second element (index 1) of the object from array is needed then\r\n   * the subPropertyPath would be: 'prop1/prop2/1/prop3'\r\n   *\r\n   * @param key state name to select the sub-property\r\n   * @param subPropertyPath path to the sub-property of the state\r\n   * @param defaultValue default value to return if the property is undefined or null\r\n   * @param objectComparator optional comparator for advanced property change detection\r\n   */\r\n  selectSubPropertyOrDefault<keyString extends keyof S, T>(key: keyString, subPropertyPath: string, defaultValue: T, objectComparator?: ObjectComparator): Observable<T> {\r\n    return this.selectState(key, subPropertyPath, defaultValue, objectComparator);\r\n  }\r\n\r\n  /**\r\n   * Select observable to subscribe to the state.\r\n   * The Observable is complete after forward one value.\r\n   *\r\n   * @param key state name to select\r\n   */\r\n  selectOnce<keyString extends keyof S>(key: keyString): Observable<S[keyString]> {\r\n    return this.selectState(key, undefined, undefined, undefined).pipe(take(1));\r\n  }\r\n\r\n  /**\r\n   * Select observable to subscribe to the state.\r\n   * The Observable is complete after forward one value.\r\n   *\r\n   * @param key state name to select\r\n   * @param defaultValue default value to return if the state is undefined or null\r\n   */\r\n  selectOnceOrDefault<keyString extends keyof S>(key: keyString, defaultValue: S[keyString]): Observable<S[keyString]> {\r\n    return this.selectState(key, undefined, defaultValue, undefined).pipe(take(1));\r\n  }\r\n\r\n  /**\r\n   * Select observable to subscribe to the state's sub-property. The parameter subPropertyPath is a string representation of the path.\r\n   * For example: if some state identified by 'key1' has property object with name 'prop1', and this object has an array of other objects\r\n   * saved in property 'prop2', and it is the property 'prop3' of the second element (index 1) of the object from array is needed then\r\n   * the subPropertyPath would be: 'prop1/prop2/1/prop3'\r\n   * The Observable is complete after forward one value.\r\n   *\r\n   * @param key state name to select the sub-property\r\n   * @param subPropertyPath path to the sub-property of the state\r\n   */\r\n  selectOnceSubProperty<keyString extends keyof S, T>(key: keyString, subPropertyPath: string): Observable<T> {\r\n    return this.selectState(key, subPropertyPath, undefined, undefined).pipe(take(1));\r\n  }\r\n\r\n  /**\r\n   * Select observable to subscribe to the state's sub-property. The parameter subPropertyPath is a string representation of the path.\r\n   * For example: if some state identified by 'key1' has property object with name 'prop1', and this object has an array of other objects\r\n   * saved in property 'prop2', and it is the property 'prop3' of the second element (index 1) of the object from array is needed then\r\n   * the subPropertyPath would be: 'prop1/prop2/1/prop3'\r\n   * The Observable is complete after forward one value.\r\n   *\r\n   * @param key state name to select the sub-property\r\n   * @param subPropertyPath path to the sub-property of the state\r\n   * @param defaultValue default value to return if the property is undefined or null\r\n   */\r\n  selectOnceSubPropertyOrDefault<keyString extends keyof S, T>(key: keyString, subPropertyPath: string, defaultValue: T): Observable<T> {\r\n    return this.selectState(key, subPropertyPath, defaultValue, undefined).pipe(take(1));\r\n  }\r\n\r\n  private selectState<keyString extends keyof S, T>(key: keyString, subPropertyPath: string, defaultValue: S[keyString] | T, objectComparator: ObjectComparator): Observable<any> {\r\n    const result = this.stateStream.pipe(map(s => this.valueOrDefault(this.getPropertyValue(s[key as string], subPropertyPath), defaultValue)));\r\n    if (objectComparator) {\r\n      return result.pipe(distinctUntilChanged<any>(objectComparator));\r\n    }\r\n    return result.pipe(distinctUntilChanged<any>());\r\n  }\r\n\r\n  private getPropertyValue<keyString extends keyof S, T>(target: S[keyString], path: string): T {\r\n    if (!target || !path) {\r\n      return target as T;\r\n    }\r\n    const properties = path.split('/').filter(p => !!p);\r\n    const length = properties.length;\r\n    let currentProp = target as T;\r\n    for (let i = 0; i < length; i++) {\r\n      const p = currentProp?.[properties[i]];\r\n      if (typeof p !== 'undefined') {\r\n        currentProp = p;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    }\r\n    return currentProp;\r\n  }\r\n\r\n  private valueOrDefault<T>(value: T, defaultValue: T): T {\r\n    if (value) {\r\n      return value;\r\n    } else if (typeof value === 'string' || typeof value === 'number') {\r\n      return value;\r\n    }\r\n    return defaultValue;\r\n  }\r\n\r\n  private getStateContext(): StateContext<S> {\r\n    return {\r\n      getState: () => this.currentState,\r\n      setState: (state) => {\r\n        this.updateState(state);\r\n      },\r\n      patchState: (partOfState) => {\r\n        const isArray = Array.isArray(partOfState);\r\n        const isPrimitive = typeof partOfState !== 'object';\r\n        if (isArray) {\r\n          throw new Error('Patching arrays is not supported.');\r\n        } else if (isPrimitive) {\r\n          throw new Error('Patching primitives is not supported.');\r\n        }\r\n        const newState = StateHelper.combine(this.currentState, partOfState);\r\n        this.updateState(newState);\r\n      }\r\n    };\r\n  }\r\n\r\n  private updateState(state: S): void {\r\n    this.currentState = StateHelper.deepFreeze(state);\r\n    this.dispatchState(this.currentState);\r\n\r\n    // next-sync. Otherwise, the state change will trigger all other changes.\r\n    setTimeout(() => {\r\n      this.stateStream.next(this.currentState);\r\n    }, 0);\r\n  }\r\n\r\n  private dispatchBefore(action: Action, state: any, order: number): void {\r\n    this.plugins.forEach((plugin) => {\r\n      plugin.dispatchBefore(action.Type, state, order);\r\n    });\r\n  }\r\n\r\n  private dispatchAfter(action: Action, state: any, order: number): void {\r\n    this.plugins.forEach((plugin) => {\r\n      plugin.dispatchAfter(action.Type, state, order);\r\n    });\r\n  }\r\n\r\n  private dispatchState(state: any): void {\r\n    this.plugins.forEach((plugin) => {\r\n      plugin.newState(state);\r\n    });\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { StateContext } from './state-context';\r\nimport { StateHelper } from './state-helper';\r\n\r\nexport abstract class Action {\r\n\r\n  public get Type(): string {\r\n    return this.actionId;\r\n  }\r\n\r\n  protected constructor(private actionId: string) {\r\n  }\r\n\r\n  abstract handleState(stateContext: StateContext<any>): Observable<void> | void;\r\n\r\n  protected clone<T>(o: T, cloneFunctions = true): T {\r\n    return StateHelper.cloneObject(o, cloneFunctions);\r\n  }\r\n\r\n  protected getEmptyState(): any {\r\n    return StateHelper.getEmptyObject();\r\n  }\r\n\r\n  protected getEmptyObject<T>(): T {\r\n    return StateHelper.getEmptyObject();\r\n  }\r\n\r\n  protected combine<S>(state: S, newValue: Partial<S>): S {\r\n    return StateHelper.combine(state, newValue);\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { StateConfig } from './state/state-config';\r\nimport { Store } from './state/store.service';\r\nimport { STATE_CONFIG } from './state/state-config.token';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: []\r\n})\r\nexport class NgxStateStoreModule {\r\n\r\n  static forRoot(config: StateConfig): ModuleWithProviders<NgxStateStoreModule> {\r\n    return {\r\n      ngModule: NgxStateStoreModule,\r\n      providers: [\r\n        Store,\r\n        {provide: STATE_CONFIG, useValue: config}\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\nexport { Action } from './state/action';\r\nexport { StateConfig } from './state/state-config';\r\nexport { StateContext } from './state/state-context';\r\nexport { StateHelper } from './state/state-helper';\r\nexport { Store, ObjectComparator } from './state/store.service';\r\n","/*\r\n * Public API Surface of ngx-state-store\r\n */\r\n\r\nexport * from './lib/ngx-state-store.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Component","AppComponent","selector","template","BrowserModule","NgModule","environment","AppInitialState","CounterButtonComponent","CounterComponent","ActionFactory","InventoryConnector","HttpClientModule","InventoriesButtonComponent","InventoriesComponent","FormsModule","NgbModule","NgxStateStoreModule","AppModule","declarations","imports","forRoot","storeName","log","state","timekeeping","initialState","providers","bootstrap","Store","constructor","store","factory","incrementCounter","dispatch","ngOnInit","counter$","select","LoadIndicator","catchError","mergeMap","skip","of","addedEntries","removedEntries","oldInventories","newInventories","calcDiff","length","pipe","subscribe","changes","inventories","console","source","target","filter","t","find","s","id","loadInventory","showLoadIndicator","LOAD_INVENTORIES","loadInventories","error","lastDownloadAt","LastDownloadAt","hideLoadIndicator","inventoriesToString","map","e","join","loading$","indicators","i","Injectable","HttpClient","delay","http","get","splice","getRandomInt","max","Math","floor","random","HideLoadingIndicatorAction","IncrementCounterAction","LoadInventoriesAction","ShowLoadingIndicatorAction","inventoryConnector","identifier","DEFAULT","ActionIds","Action","HideLoadingIndicator","handleState","stateContext","getState","ShowLoadingIndicator","index","indexOf","newState","getEmptyState","slice","patchState","UpdateCounter","newValue","Counter","tap","LoadInventories","Inventories","Date","toISOString","push","production","enableProdMode","platformBrowserDynamic","bootstrapModule","catch","err","StateHelper","immutableFunction","objectName","a","Error","deepFreeze","o","window","Map","freezeMap","Set","freezeSet","isValidDate","freezeDate","freezeObject","clear","immutableMapFunction","set","delete","origin","key","value","entries","values","keys","has","forEach","callbackFn","Symbol","iterator","Object","defineProperty","size","writable","immutableSetFunction","add","setDate","immutableDateFunction","setHours","setFullYear","setMilliseconds","setMinutes","setMonth","setSeconds","setTime","setUTCDate","setUTCHours","setUTCFullYear","setUTCMilliseconds","setUTCMinutes","setUTCMonth","setUTCSeconds","getTime","getDate","getDay","getFullYear","getHours","getMilliseconds","getMinutes","getMonth","getSeconds","getTimezoneOffset","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","valueOf","toDateString","toString","toJSON","toLocaleDateString","toLocaleString","toLocaleTimeString","toTimeString","toUTCString","freeze","oIsFunction","getOwnPropertyNames","prop","isFrozen","cloneObject","cloneFunctions","cyclicDependenciesMap","cloneObjectIntern","undefined","parent","Array","isArray","cloneArray","cloneMap","cloneSet","cloneSimpleObject","cloneFunction","element","keyClone","valueClone","assign","functionType","bind","getEmptyObject","create","combine","date","prototype","call","isNaN","StorePlugin","namespace","storageName","prepareWindowObject","StoreLogPlugin","loggingDisabled","limit","stateLog","executedStack","logAction","message","restrict","arr","dispatchBefore","dispatchAfter","actionId","order","actionEnd","STATE_CONFIG","InjectionToken","StorePerformancePlugin","performance","settings","performanceLog","time","now","config","plugins","currentState","stateStream","BehaviorSubject","getErrorState","action","Type","currentCounter","actionCounter","actionResult$","getStateContext","throwError","result","Subject","setTimeout","isObservable","take","some","next","complete","errorState","asObservable","objectComparator","selectState","selectOrDefault","defaultValue","selectSubProperty","subPropertyPath","selectSubPropertyOrDefault","selectOnce","selectOnceOrDefault","selectOnceSubProperty","selectOnceSubPropertyOrDefault","valueOrDefault","getPropertyValue","distinctUntilChanged","path","properties","split","p","currentProp","setState","updateState","partOfState","isPrimitive","dispatchState","plugin","i0","Inject","clone","ngModule","provide","useValue","CommonModule","args","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}